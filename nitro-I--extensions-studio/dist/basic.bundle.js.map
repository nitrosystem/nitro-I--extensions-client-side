{"version":3,"file":"basic.bundle.js","mappings":"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","sources":["webpack://business-engine-basic-extensions/./src/action-types/form/call-action.html","webpack://business-engine-basic-extensions/./src/action-types/form/set-variable.component.html","webpack://business-engine-basic-extensions/./src/action-types/form/update-field-data-source.html","webpack://business-engine-basic-extensions/./src/action-types/programming/javascript.component.html","webpack://business-engine-basic-extensions/./src/action-types/run-service/run-service.component.html","webpack://business-engine-basic-extensions/./src/field-types/Choices-combobox/choices-combobox.html","webpack://business-engine-basic-extensions/./src/field-types/Choices-combobox/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/button/button.html","webpack://business-engine-basic-extensions/./src/field-types/button/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/chart/chart.html","webpack://business-engine-basic-extensions/./src/field-types/chart/edit-column.html","webpack://business-engine-basic-extensions/./src/field-types/chart/edit-label.html","webpack://business-engine-basic-extensions/./src/field-types/chart/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/checkbox-list/checkbox-list.html","webpack://business-engine-basic-extensions/./src/field-types/checkbox-list/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/chosen-dropdown/chosen-dropdown.html","webpack://business-engine-basic-extensions/./src/field-types/chosen-dropdown/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/content/content.html","webpack://business-engine-basic-extensions/./src/field-types/custom-list/custom-list.html","webpack://business-engine-basic-extensions/./src/field-types/custom-list/custom-template.html","webpack://business-engine-basic-extensions/./src/field-types/custom-list/list-builder.html","webpack://business-engine-basic-extensions/./src/field-types/custom-list/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/dashboard-breadcrumb/dashboard-breadcrumb.html","webpack://business-engine-basic-extensions/./src/field-types/dashboard-link/dashboard-link.html","webpack://business-engine-basic-extensions/./src/field-types/dashboard-link/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/dashboard-menu/dashboard-menu.html","webpack://business-engine-basic-extensions/./src/field-types/dashboard-menu/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/grid/edit-column.html","webpack://business-engine-basic-extensions/./src/field-types/grid/grid.html","webpack://business-engine-basic-extensions/./src/field-types/grid/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/group/group-studio.component.html","webpack://business-engine-basic-extensions/./src/field-types/group/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/import-excel/import-excel.html","webpack://business-engine-basic-extensions/./src/field-types/import-excel/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map-routing/leafletjs-map-routing.html","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map-routing/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map/leafletjs-map.html","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/matrix/edit-column.html","webpack://business-engine-basic-extensions/./src/field-types/matrix/matrix.html","webpack://business-engine-basic-extensions/./src/field-types/matrix/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/message-box/message-box.html","webpack://business-engine-basic-extensions/./src/field-types/message-box/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/nice-select/nice-select.html","webpack://business-engine-basic-extensions/./src/field-types/nice-select/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/persian-date-time-picker/persian-date-time-picker.html","webpack://business-engine-basic-extensions/./src/field-types/persian-date-time-picker/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/property/property.html","webpack://business-engine-basic-extensions/./src/field-types/property/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/select2/select2.html","webpack://business-engine-basic-extensions/./src/field-types/select2/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/selectable-list/edit-templates.html","webpack://business-engine-basic-extensions/./src/field-types/selectable-list/selectable-list.html","webpack://business-engine-basic-extensions/./src/field-types/selectable-list/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/selectize/selectize.html","webpack://business-engine-basic-extensions/./src/field-types/selectize/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/swiper-slider/settings.html","webpack://business-engine-basic-extensions/./src/field-types/swiper-slider/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/swiper-slider/slider.html","webpack://business-engine-basic-extensions/./src/field-types/switch-button/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/switch-button/switch-button.html","webpack://business-engine-basic-extensions/./src/field-types/tabs/edit-tab.html","webpack://business-engine-basic-extensions/./src/field-types/tabs/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/tabs/tabs.html","webpack://business-engine-basic-extensions/./src/field-types/text-editor/editor.html","webpack://business-engine-basic-extensions/./src/field-types/text-editor/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/textarea/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/textarea/textarea.html","webpack://business-engine-basic-extensions/./src/field-types/textbox/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/textbox/textbox.html","webpack://business-engine-basic-extensions/./src/field-types/typeahead-autocomplete/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/typeahead-autocomplete/typeahead.html","webpack://business-engine-basic-extensions/./src/field-types/upload-file/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/upload-file/upload-file.html","webpack://business-engine-basic-extensions/./src/field-types/upload-image/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/upload-image/upload-image.html","webpack://business-engine-basic-extensions/./src/field-types/wizard/edit-step.html","webpack://business-engine-basic-extensions/./src/field-types/wizard/sidebar-settings.html","webpack://business-engine-basic-extensions/./src/field-types/wizard/wizard.html","webpack://business-engine-basic-extensions/./src/services-types/database/bind-entity/bind-entity.html","webpack://business-engine-basic-extensions/./src/services-types/database/custom-qeury/custom-query.html","webpack://business-engine-basic-extensions/./src/services-types/database/data-source/data-source.html","webpack://business-engine-basic-extensions/./src/services-types/database/submit-entity/submit-entity.html","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/approve-user/approve-user.html","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/login-user/login-user.html","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/register-user/register-user.html","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/reset-password/reset-password.html","webpack://business-engine-basic-extensions/./src/services-types/public-services/import-excel/import-excel.html","webpack://business-engine-basic-extensions/./src/services-types/public-services/send-email/send-email.html","webpack://business-engine-basic-extensions/./src/services-types/public-services/send-sms/send-sms.html","webpack://business-engine-basic-extensions/./src/services-types/webservice/restful/restful.html","webpack://business-engine-basic-extensions/./src/field-types/wizard/wizard.component.js","webpack://business-engine-basic-extensions/webpack/bootstrap","webpack://business-engine-basic-extensions/webpack/runtime/compat get default export","webpack://business-engine-basic-extensions/webpack/runtime/define property getters","webpack://business-engine-basic-extensions/webpack/runtime/hasOwnProperty shorthand","webpack://business-engine-basic-extensions/./src/services-types/database/submit-entity/submit-entity.component.js","webpack://business-engine-basic-extensions/./src/services-types/database/submit-entity/sql-query-template.js","webpack://business-engine-basic-extensions/./src/services-types/database/data-source/data-source.component.js","webpack://business-engine-basic-extensions/./src/services-types/database/data-source/sql-query-template.js","webpack://business-engine-basic-extensions/./src/services-types/database/custom-qeury/custom-query.component.js","webpack://business-engine-basic-extensions/./src/services-types/database/bind-entity/bind-entity.component.js","webpack://business-engine-basic-extensions/./src/services-types/database/bind-entity/sql-query-template.js","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/login-user/login-user.component.js","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/register-user/register-user.component.js","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/approve-user/approve-user.component.js","webpack://business-engine-basic-extensions/./src/services-types/dnn-services/reset-password/reset-password.component.js","webpack://business-engine-basic-extensions/./src/services-types/public-services/send-sms/send-sms.component.js","webpack://business-engine-basic-extensions/./src/services-types/public-services/send-email/send-email.component.js","webpack://business-engine-basic-extensions/./src/services-types/public-services/import-excel/import-excel.component.js","webpack://business-engine-basic-extensions/./src/services-types/webservice/restful/restful.component.js","webpack://business-engine-basic-extensions/external var \"_\"","webpack://business-engine-basic-extensions/./src/action-types/run-service/run-service.component.js","webpack://business-engine-basic-extensions/./src/action-types/programming/javascript.component.js","webpack://business-engine-basic-extensions/./src/action-types/form/set-variable.component.js","webpack://business-engine-basic-extensions/./src/action-types/form/update-field-data-source.component.js","webpack://business-engine-basic-extensions/./src/action-types/form/call-action.component.js","webpack://business-engine-basic-extensions/./src/field-types/group/group-studio.component.js","webpack://business-engine-basic-extensions/./src/field-types/textbox/textbox.component.js","webpack://business-engine-basic-extensions/./src/field-types/textarea/textarea.component.js","webpack://business-engine-basic-extensions/./src/field-types/text-editor/editor.component.js","webpack://business-engine-basic-extensions/./src/field-types/content/content.component.js","webpack://business-engine-basic-extensions/./src/field-types/switch-button/switch-button.compoment.js","webpack://business-engine-basic-extensions/./src/field-types/grid/grid.component.js","webpack://business-engine-basic-extensions/./src/field-types/matrix/matrix.component.js","webpack://business-engine-basic-extensions/./src/field-types/custom-list/custom-list.component.js","webpack://business-engine-basic-extensions/./src/field-types/tabs/tabs.component.js","webpack://business-engine-basic-extensions/./src/field-types/button/button.component.js","webpack://business-engine-basic-extensions/./src/field-types/checkbox-list/checkbox-list.component.js","webpack://business-engine-basic-extensions/./src/field-types/chosen-dropdown/chosen-dropdown.component.js","webpack://business-engine-basic-extensions/./src/field-types/select2/select2.component.js","webpack://business-engine-basic-extensions/./src/field-types/selectize/selectize.component.js","webpack://business-engine-basic-extensions/./src/field-types/nice-select/nice-select.component.js","webpack://business-engine-basic-extensions/./src/field-types/typeahead-autocomplete/typeahead.component.js","webpack://business-engine-basic-extensions/./src/field-types/selectable-list/selectable-list.component.js","webpack://business-engine-basic-extensions/./src/field-types/dashboard-menu/dashboard-menu.component.js","webpack://business-engine-basic-extensions/./src/field-types/dashboard-link/dashboard-link.component.js","webpack://business-engine-basic-extensions/./src/field-types/upload-file/upload-file.component.js","webpack://business-engine-basic-extensions/./src/field-types/upload-image/upload-image.component.js","webpack://business-engine-basic-extensions/./src/field-types/property/property.component.js","webpack://business-engine-basic-extensions/./src/field-types/message-box/message-box.component.js","webpack://business-engine-basic-extensions/./src/field-types/dashboard-breadcrumb/dashboard-breadcrumb.component.js","webpack://business-engine-basic-extensions/./src/field-types/persian-date-time-picker/persian-date-time-picker.component.js","webpack://business-engine-basic-extensions/./src/field-types/Choices-combobox/Choices-combobox.component.js","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map/leafletjs-map.compoment.js","webpack://business-engine-basic-extensions/./src/field-types/swiper-slider/slider.component.js","webpack://business-engine-basic-extensions/./src/field-types/import-excel/import-excel.component.js","webpack://business-engine-basic-extensions/./src/field-types/leafletjs-map-routing/leafletjs-map-routing.compoment.js","webpack://business-engine-basic-extensions/./src/field-types/chart/chart.component.js","webpack://business-engine-basic-extensions/./src/app.js"],"sourcesContent":["// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Reset Action Params</label> <label class=\\\"b-switch\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.action.Settings.ResetActionParams\\\"> <span class=\\\"slider\\\"></span> </label> </div> <b-select-action ng-model=\\\"$.action.Settings\\\" actions=\\\"$.moduleActions\\\" services=\\\"$.services\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\"> </b-select-action>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/call-action.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-property-list ng-model=\\\"$.action.Results\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-property-list>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/set-variable.component.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Field</label> <div class=\\\"b-input-group\\\"> <select id=\\\"drpField\\\" ng-model=\\\"$.action.Settings.FieldID\\\" class=\\\"b-input form-select\\\" ng-options=\\\"field.FieldID as field.FieldName for field in $.fields\\\" chosen placeholder-text-single=\\\"'Select field'\\\" required> </select> <span><i class=\\\"codicon codicon-plus\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Index</label> <div monaco-editor ng-model=\\\"$.action.Settings.PageIndex\\\" data-language=\\\"bProperties\\\" data-one-line=\\\"true\\\"></div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Size</label> <div monaco-editor ng-model=\\\"$.action.Settings.PageSize\\\" data-language=\\\"bProperties\\\" data-one-line=\\\"true\\\"></div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/update-field-data-source.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div monaco-editor ng-model=\\\"$.action.Settings.Code\\\" data-source=\\\"['fields','form','_b','variables','actionParams']\\\" data-language=\\\"javascript\\\" data-height=\\\"350px\\\" required> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/programming/javascript.component.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-select-service controller=\\\"$.controller\\\" action=\\\"$.action\\\" services=\\\"$.services\\\" service-type=\\\"{{$.serviceType}}\\\" data-datasource=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"$.variables\\\" data-view-models=\\\"$.viewModels\\\" data-fields=\\\"$.fields\\\"></b-select-service>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/run-service/run-service.component.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select ng-model=\\\"$.field.Value\\\" class=\\\"b-input form-control\\\" placeholder-text-single=\\\"$.field.Settings.Placeholder\\\" chosen> <option ng-repeat=\\\"option in $.field.DataSource.Items\\\" ng-value=\\\"option[$.field.Settings.DataSource.ValueField]\\\"> {{option[$.field.Settings.DataSource.TextField]}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/Choices-combobox/choices-combobox.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Dropdown Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DropdownCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/Choices-combobox/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field mb-3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\"> <i class=\\\"{{$.field.Settings.FontIcon}}\\\"></i> {{$.field.Settings.ButtonText}} </button> </div> <div class=\\\"b-field mb-3\\\"> <label class=\\\"form-label\\\">Loading Conditions</label> <div class=\\\"b-input form-control position-relative\\\" role=\\\"button\\\" ng-click=\\\"$.onShowLoadingConditionsClick()\\\"> <span ng-if=\\\"!$.field.Settings.LoadingConditions.length\\\">No Loading Conditions</span> <span ng-if=\\\"$.field.Settings.LoadingConditions.length\\\"> {{$.field.Settings.LoadingConditions.length}} Loading Conditions</span> <i class=\\\"codicon codicon-ellipsis position-absolute top-0 end-0 mt-2 me-2\\\"></i> </div> </div> <div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddFieldActionClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Action </button> </div> <div id=\\\"wnButtonLoadingConditions{{$.field.FieldName}}\\\" ng-if=\\\"$.field.Settings.LoadingConditions\\\" b-custom-modal class=\\\"modal fade b-modal-dark\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Button Loading Conditions </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-condition-list ng-model=\\\"$.field.Settings.LoadingConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/button/button.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Type</label> <select ng-model=\\\"$.currentField.Settings.ButtonType\\\" class=\\\"b-input form-select\\\" chosen required> <option value=\\\"button\\\">Standard Button</option> <option value=\\\"submit\\\">Submit Button</option> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ButtonType=='button'\\\"> <label class=\\\"form-label\\\">Validation Groups</label> <select ng-model=\\\"$.currentField.Settings.ValidationGroups\\\" class=\\\"b-input form-select\\\" ng-options=\\\"field.FieldID as field.FieldName for field in $.fields | filter: {IsGroup:true}\\\" multiple=\\\"multiple\\\" chosen required> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ButtonType=='button'\\\"> <label class=\\\"form-label\\\">Validation Panes</label> <select ng-model=\\\"$.currentField.Settings.ValidationPanes\\\" class=\\\"b-input form-select\\\" ng-options=\\\"pane.paneName as pane.paneTitle for pane in $.panes\\\" multiple=\\\"multiple\\\" chosen required> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonText\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Loading Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LoadingCssClass\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/button/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-table theme-gray mb-3\\\"> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex columns-name\\\"> <div class=\\\"col-2\\\">Title</div> <div class=\\\"col-2\\\">Type</div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"column in $.field.Settings.Columns | orderBy:'ViewOrder'\\\" ng-style=\\\"{'order':($index+1)}\\\"> <div class=\\\"col-2 my-auto\\\"> {{column.Title}} </div> <div class=\\\"col-2 my-auto\\\"> {{column.ColumnType}} </div> <div class=\\\"col-1\\\"> <div class=\\\"b-multi-btns\\\"> <button type=\\\"button\\\" class=\\\"p-0\\\" ng-click=\\\"$.onEditColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Edit Column\\\"> <i class=\\\"codicon codicon-edit me-0\\\"></i> </button> <button type=\\\"button\\\" ng-click=\\\"$.onDeleteColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Delete Column\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddColumnClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Column </button> </div> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex columns-name\\\"> <div class=\\\"col-2\\\">Lables Type<span ng-if=\\\"$.field.Settings.LableType\\\" style=\\\"font-weight:700\\\">: {{$.field.Settings.LableType == \\\"CustomLable\\\"? \\\"Custom Lable\\\": \\\"Bind To Property\\\"}}</span></div> </div> <div class=\\\"d-flex table-row\\\" ng-if=\\\"$.field.Settings.LableType =='CustomLable'\\\"> <span ng-repeat=\\\"label in $.field.Settings.CustomLables\\\"> {{',' + label.LableName}}</span> </div> <div class=\\\"d-flex table-row\\\" ng-if=\\\"$.field.Settings.LableType =='BindToProperty'\\\"> <span>Bind to {{$.field.Settings.BindLable.Content}}</span> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddLabelClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Label </button> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Source</label> <div ng-if=\\\"$.field.Settings.DataSource\\\" role=\\\"button\\\" ng-click=\\\"$.onEditFieldDataSourceClick()\\\"> <div class=\\\"b-notify notify-warning mb-3\\\"> <i class=\\\"codicon codicon-combine icon-sm\\\"></i> <div class=\\\"text\\\"> <span class=\\\"subtext\\\"> Type : <label ng-if=\\\"$.field.Settings.DataSource.Type==0\\\">Standard(Static items)</label> <label ng-if=\\\"$.field.Settings.DataSource.Type==1\\\">Use Defined List</label> <label ng-if=\\\"$.field.Settings.DataSource.Type==2\\\">Data Source Service </label> </span> </div> </div> </div> </div> <div class=\\\"b-field\\\" ng-if=\\\"!$.field.Settings.DataSource\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onEditFieldDataSourceClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Set Data Source </button> </div> <div ng-include=\\\"$.editColumnWidget\\\"></div> <div ng-include=\\\"$.editLabelWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/chart.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-column'\\\" data-title=\\\"Edit Column\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit grid column\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-7 b-splitter border-end pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.Title\\\" placeholder=\\\"Enter column title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ColumnType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"BindToProperty\\\">Bind To Property</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.ColumnType=='BindToProperty'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.DataType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"String\\\">String</option> <option value=\\\"Number\\\">Number</option> <option value=\\\"DateTime\\\">Date Time</option> <option value=\\\"Time\\\">Time</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.DataType=='DateTime'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Date Time Format</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.DateTimeFormat\\\" placeholder=\\\"default MM/DD/YYYY\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-calendar\\\"></i></span> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Property</label> <div monaco-editor id=\\\"txtProperty\\\" ng-model=\\\"$.column.Content\\\" data-language=\\\"bProperties\\\" data-one-line=\\\"true\\\" required></div> </div> </div> </div> <div class=\\\"col-5 ps-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">View Order</label> <div class=\\\"b-input-group\\\"> <input type=\\\"number\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ViewOrder\\\" placeholder=\\\"Enter column view order\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-list-ordered\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Border Color</label> <div class=\\\"b-input-group\\\"> <input type=\\\"color\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.BorderColor\\\" placeholder=\\\"Enter border color\\\"/> <span><i class=\\\"codicon codicon-symbol-color\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Background Color</label> <div class=\\\"b-input-group\\\"> <input type=\\\"color\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.BackgroundColor\\\" placeholder=\\\"Enter background color\\\"/> <span><i class=\\\"codicon codicon-symbol-color\\\"></i></span> </div> </div> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveColumnClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Column </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelColumnClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget> \";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/edit-column.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-label'\\\" data-title=\\\"Edit label\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit grid column\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-12 b-splitter pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Lable Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.field.Settings.LableType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select lable Type'\\\" required> <option value=\\\"BindToProperty\\\">Bind To Property</option> <option value=\\\"CustomLable\\\">Custom Lable</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.field.Settings.LableType=='BindToProperty'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.field.Settings.BindLable.DataType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"String\\\">String</option> <option value=\\\"Number\\\">Number</option> <option value=\\\"DateTime\\\">Date Time</option> <option value=\\\"Time\\\">Time</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.field.Settings.BindLable.DataType=='DateTime'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Date Time Format</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.BindLable.DateTimeFormat\\\" placeholder=\\\"default MM/DD/YYYY\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-calendar\\\"></i></span> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Property</label> <div monaco-editor id=\\\"txtProperty\\\" ng-model=\\\"$.field.Settings.BindLable.Content\\\" data-language=\\\"bProperties\\\" data-one-line=\\\"true\\\" required></div> </div> </div> <div ng-if=\\\"$.field.Settings.LableType=='CustomLable'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Type</label> <div class=\\\"b-input-group\\\"> <div id=\\\"grpCustomLable\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Lable Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.field.Settings.CustomLables | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.LableName\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.field.Settings.CustomLables.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddCustomLablesClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveLableClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Lable </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelLableClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget> \";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/edit-label.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Chart Type</label> <select ng-model=\\\"$.currentField.Settings.ChartType\\\" class=\\\"b-input form-select\\\" required> <option value=\\\"line\\\">Line</option> <option value=\\\"bar\\\">Bar</option> <option value=\\\"polarArea\\\">PolarArea</option> <option value=\\\"radar\\\">Radar</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Direction</label> <select ng-model=\\\"$.currentField.Settings.Direction\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"ltr\\\">ltr</option> <option value=\\\"rtl\\\">rtl</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Family</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontFamily\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Size</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.FontSize\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Border Width</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.BorderWidth\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tension</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.Tension\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Radius</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.Radius\\\" class=\\\"b-input form-control\\\"/> </div> \";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"form-check\\\" ng-repeat=\\\"item in $.field.DataSourceItems\\\"> <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"{{$.field.FieldName+$index}}\\\"> <label class=\\\"form-check-label\\\" for=\\\"{{$.field.FieldName+$index}}\\\"> {{item.Text}} </label> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/checkbox-list/checkbox-list.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/checkbox-list/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select ng-model=\\\"$.field.Value\\\" class=\\\"b-input form-control\\\" placeholder-text-single=\\\"$.field.Settings.Placeholder\\\" chosen> <option ng-repeat=\\\"option in $.field.DataSource.Items\\\" ng-value=\\\"option[$.field.Settings.DataSource.ValueField]\\\"> {{option[$.field.Settings.DataSource.TextField]}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chosen-dropdown/chosen-dropdown.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Dropdown Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DropdownCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chosen-dropdown/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div monaco-editor ng-model=\\\"$.field.Settings.Content\\\" data-language=\\\"html\\\" data-height=\\\"300px\\\" required></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/content/content.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<button type=\\\"button\\\" class=\\\"b-btn btn-action me-2\\\" ng-click=\\\"$.onShowListBuilderClick()\\\"> List Builder </button> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onShowCustomTemplateClick()\\\"> Custom Template </button> <div ng-include=\\\"$.listBuilder\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/custom-list.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/custom-template.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"modal fade b-modal-dark\\\" b-custom-modal id=\\\"wnListBuilder\\\" data-bs-focus=\\\"false\\\" aria-hidden=\\\"true\\\"> <div class=\\\"modal-dialog modal-fullscreen\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\" id=\\\"exampleModalToggleLabel\\\">List Builder</h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDataSource\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Data Source </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDataSource\\\" class=\\\"group-content collapse show\\\"> <div ng-if=\\\"!$.field.Settings.DataSource || !$.field.Settings.DataSource.Type\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">The list data source is not selected!.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-action ms-2 me-2 d-inline-block\\\" ng-click=\\\"$.onShowDataSourceClick()\\\">Here</button> to set data source. </span> </div> </div> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDataSource\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Data Source </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDataSource\\\" class=\\\"group-content collapse show\\\"> <div style=\\\"height:2000px\\\"></div> </div> </div> </div> <div class=\\\"modal-footer\\\"> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/list-builder.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Custom List Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.CustomListCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label>Columns</label> <div class=\\\"form-control p-relative\\\" ng-click=\\\"onShowGridColumnsClick()\\\"> <span ng-if=\\\"!currentField.Settings.Columns.length\\\">No Columns</span> <span ng-if=\\\"currentField.Settings.Columns.length\\\">Has Columns</span> <span class=\\\"more-dot\\\">...</span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Paging</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.EnablePaging\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"currentField.Settings.EnablePaging\\\"> <label>Page Size</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.PageSize\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onSetTemplateClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Set Breadcrumb Template </button> </div> <b-right-widget ng-if=\\\"$.workingMode=='edit-template'\\\" data-title=\\\"Edit Template\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Breadcrumb html Template\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Breadcrumb Template</label> <div monaco-editor ng-model=\\\"$.field.Settings.BreadcrumbTemplate\\\" data-language=\\\"html\\\" data-height=\\\"250px\\\" required> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveTemplateClick()\\\"> Save </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelEditTemplateClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-breadcrumb/dashboard-breadcrumb.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<a href=\\\"\\\" class=\\\"{{$.field.Settings.LinkCssClass}}\\\"> <i class=\\\"{{$.field.Settings.FontIcon}}\\\"></i> {{$.field.Settings.LinkText}} </a>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-link/dashboard-link.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Name</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.PageName\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Params</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.PageParams\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Link Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LinkCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Link Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LinkText\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-link/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-menu/dashboard-menu.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Menu Type</label> <select ng-model=\\\"$.currentField.Settings.MenuType\\\" class=\\\"b-input form-control\\\" chosen required> <option value=\\\"horizontal\\\">Horizontal</option> <option value=\\\"vertical\\\">Vertical</option> </select> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-menu/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-column'\\\" data-title=\\\"Edit Column\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit grid column\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-7 b-splitter border-end pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.Title\\\" placeholder=\\\"Enter column title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ColumnType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"BindToProperty\\\">Bind To Property</option> <option value=\\\"ConditionalContents\\\">Conditional Contents</option> <option value=\\\"ActionButton\\\">Action Button</option> <option value=\\\"ActionButtonList\\\">Action Button List</option> <option value=\\\"DashboardPageLink\\\">Dashboard Page Link</option> <option value=\\\"LinkUrl\\\">Link Url</option> <option value=\\\"HtmlContent\\\">Html Content</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.ColumnType=='BindToProperty'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.DataType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"String\\\">String</option> <option value=\\\"Number\\\">Number</option> <option value=\\\"DateTime\\\">Date Time</option> <option value=\\\"Time\\\">Time</option> <option value=\\\"Image\\\">Image</option> <option value=\\\"File\\\">File</option> <option value=\\\"Link\\\">Link</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.DataType=='Number'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Show Commas Separator</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.ShowCommasSeparator\\\"> <span class=\\\"slider\\\"></span> </label> </div> </div> <div ng-if=\\\"$.column.DataType=='DateTime'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Date Time Format</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.DateTimeFormat\\\" placeholder=\\\"default MM/DD/YYYY\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-calendar\\\"></i></span> </div> </div> </div> <div ng-if=\\\"$.column.DataType=='Image'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Image Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ImageType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select image Type'\\\" required> <option value=\\\"JsonData\\\">Image From Json Data</option> <option value=\\\"InternalUrl\\\">Internal Url</option> <option value=\\\"ExternalUrl\\\">External Url</option> <option value=\\\"FileService\\\">Image From File Service</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.ImageType=='JsonData'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Image Index</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ImageIndex\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select image Type'\\\" required> <option value=\\\"0\\\">1</option> <option value=\\\"1\\\">2</option> <option value=\\\"2\\\">3</option> <option value=\\\"3\\\">4</option> <option value=\\\"4\\\">5</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Image Property</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ImageProperty\\\" placeholder=\\\"Enter image property\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Property</label> <div monaco-editor id=\\\"txtProperty\\\" ng-model=\\\"$.column.Content\\\" data-language=\\\"bProperties\\\" data-one-line=\\\"true\\\" required></div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\"> Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.Icon\\\" placeholder=\\\"Enter column icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Css Class</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.CssClass\\\" placeholder=\\\"Enter column css class\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div ng-if=\\\"$.column.DataType=='Image'\\\" class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Show default image for no Image</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.ShowNoImage\\\"> <span class=\\\"slider\\\"></span> </label> </div> <div ng-if=\\\"$.column.DataType=='Image' && $.column.ShowNoImage\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Image Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.NoImageType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select no image Type'\\\" required> <option value=\\\"url\\\">Image Url</option> <option value=\\\"icon\\\">Font Icon</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.column.ShowNoImage && $.column.NoImageType\\\"> <label ng-if=\\\"$.column.NoImageType == 'url'\\\" class=\\\"form-label\\\">No Image Url</label> <label ng-if=\\\"$.column.NoImageType == 'icon'\\\" class=\\\"form-label\\\">Font Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.NoImageUrl\\\" placeholder=\\\"Enter no image\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-calendar\\\"></i></span> </div> </div> </div> </div> <div ng-if=\\\"$.column.ColumnType=='ActionButton'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonText\\\" placeholder=\\\"Enter button text\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonIcon\\\" placeholder=\\\"Enter button icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Css Class</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonCssClass\\\" placeholder=\\\"Enter button css class\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tooltip Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.TooltipTitle\\\" placeholder=\\\"Enter button title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Show Confirm Alert</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.ShowConfirmAlert\\\"> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.column.ShowConfirmAlert\\\"> <label class=\\\"form-label\\\">Confirm Alert Text</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ConfirmAlertText\\\" placeholder=\\\"Enter confirm alert text\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Action</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ActionID\\\" class=\\\"b-input form-select\\\" chosen ng-options=\\\"action.ActionID as action.ActionName for action in $.actions\\\" ng-change=\\\"$.onActionChange()\\\" placeholder-text-single=\\\"'Select action'\\\" required> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> </div> <div ng-if=\\\"$.column.ColumnType=='ActionButtonList'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Display Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.DisplayType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select display type'\\\" required> <option value=\\\"IconList\\\">Icon List</option> <option value=\\\"DropdownMenu\\\">Dropdown Menu</option> </select> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div ng-if=\\\"$.column.ColumnType=='DashboardPageLink'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.PageName\\\" placeholder=\\\"Enter dashboard page name\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Params</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.PageParams\\\" placeholder=\\\"Enter page params\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonText\\\" placeholder=\\\"Enter button text\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonIcon\\\" placeholder=\\\"Enter button icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Css Class</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ButtonCssClass\\\" placeholder=\\\"Enter button css class\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tooltip Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.TooltipTitle\\\" placeholder=\\\"Enter button title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div ng-if=\\\"$.column.ColumnType=='LinkUrl'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Link Url</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.LinkUrl\\\" placeholder=\\\"Enter link url\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.column.ColumnType=='HtmlContent'\\\"> <label class=\\\"form-label\\\">Html Content</label> <div monaco-editor id=\\\"txtHtmlContent\\\" ng-model=\\\"$.column.Content\\\" data-language=\\\"html\\\" data-height=\\\"150px\\\" required></div> </div> </div> <div class=\\\"col-5 ps-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Width</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.Width\\\" placeholder=\\\"Enter column width\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Header Css</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.HeaderCssClass\\\" placeholder=\\\"Enter column css class\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Header Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.HeaderIcon\\\" placeholder=\\\"Enter column icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">View Order</label> <div class=\\\"b-input-group\\\"> <input type=\\\"number\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ViewOrder\\\" placeholder=\\\"Enter column view order\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-list-ordered\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Hide Column Title</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.IsHideColumnTitle\\\"> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label d-block\\\">Show In Row Details</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.ShowInRowDetails\\\"> <span class=\\\"slider\\\"></span> </label> </div> <button type=\\\"button\\\" ng-click=\\\"$.onColumnShowConditionsClick()\\\" class=\\\"b-btn btn-action\\\"> <i class=\\\"codicon codicon-gear\\\"></i> Column Show Conditions </button> </div> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ActionButton' && $.column.ActionID && $.column.ActionParams\\\"> <b-action-param-list params=\\\"$.column.ActionParams\\\" data-action-id=\\\"$.column.ActionID\\\" data-actions=\\\"$.actions\\\" data-source=\\\"['fields','form','variables']\\\" data-variables=\\\"$.variables\\\" data-fields=\\\"$.fields\\\"> </b-action-param-list> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ConditionalContents'\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-body p-0\\\"> <div class=\\\"d-flex columns-name p-2\\\"> <div class=\\\"col-5\\\">Content</div> <div class=\\\"col-2\\\">Css Class</div> <div class=\\\"col-2\\\">Icon</div> <div class=\\\"col-2\\\">Conditions</div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"item in $.column.ContentItems\\\"> <div class=\\\"col-5 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Content\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.CssClass\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Icon\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" ng-if=\\\"!item.Conditions.length\\\" ng-click=\\\"$.onShowContentItemConditionsClick(item)\\\" class=\\\"b-btn btn-action btn-sm\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> <button type=\\\"button\\\" ng-if=\\\"item.Conditions.length\\\" ng-click=\\\"$.onShowContentItemConditionsClick(item)\\\" class=\\\"b-btn btn-action btn-sm\\\"> {{item.Conditions.length}} Conditions </button> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.column.ContentItems.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.onAddContentItemClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </div> </div> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ActionButtonList'\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-body p-0\\\"> <div class=\\\"d-flex columns-name p-2\\\"> <div class=\\\"col-4\\\">Action</div> <div class=\\\"col-3\\\">Text</div> <div class=\\\"col-2\\\">Css Class</div> <div class=\\\"col-2\\\">Icon</div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"item in $.column.ActionItems\\\"> <div class=\\\"col-4 my-auto\\\"> <select ng-model=\\\"item.ActionID\\\" class=\\\"b-input form-select\\\" chosen ng-options=\\\"action.ActionID as action.ActionName for action in $.actions\\\" placeholder-text-single=\\\"'Select action'\\\" required> </select> </div> <div class=\\\"col-3 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Text\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.CssClass\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Icon\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\"> <i class=\\\"codicon codicon-kebab-vertical me-0\\\"></i> </button> <div class=\\\"dropdown-menu b-dropdown-menu\\\"> <a class=\\\"dropdown-item\\\" href=\\\"\\\" ng-if=\\\"item.ActionID\\\" ng-click=\\\"$.onSetActionParamsClick(item)\\\"> <i class=\\\"codicon codicon-refresh me-2\\\"></i> Set Action Params </a> <a class=\\\"dropdown-item\\\" href=\\\"\\\" ng-click=\\\"$.onSetShowConditionsClick(item)\\\"> <i class=\\\"codicon codicon-plus me-2\\\"></i> Set Show Conditions </a> <a class=\\\"dropdown-item\\\" href=\\\"\\\" ng-click=\\\"$.column.ActionItems.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-2\\\"></i> Delete Item </a> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.onAddActionItemClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </div> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveColumnClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Column </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelColumnClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget> <div id=\\\"wnColumnShowConditions\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark b-front\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Column Show Conditions </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-condition-list ng-model=\\\"$.column.ShowConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div> <div id=\\\"wnActionParams\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark b-front\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Set Params </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-action-param-list params=\\\"$.actionItem.ActionParams\\\" data-action-id=\\\"$.actionItem.ActionID\\\" data-actions=\\\"$.actions\\\" data-source=\\\"['fields','form','variables']\\\" data-variables=\\\"$.variables\\\" data-fields=\\\"$.fields\\\"> </b-action-param-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div> <div id=\\\"wnContentItemConditions\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark b-front\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Content Conditions </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-condition-list ng-model=\\\"$.contentItem.Conditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/edit-column.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \" <div class=\\\"b-table theme-gray mb-3\\\"> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex columns-name\\\"> <div class=\\\"col-2\\\">Title</div> <div class=\\\"col-2\\\">Type</div> <div class=\\\"col-3\\\">Content</div> <div class=\\\"col-1\\\">Width</div> <div class=\\\"col-1\\\">Details</div> <div class=\\\"col-2\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"column in $.field.Settings.Columns | orderBy:'ViewOrder'\\\" ng-style=\\\"{'order':($index+1)}\\\"> <div class=\\\"col-2 my-auto\\\"> {{column.Title}} </div> <div class=\\\"col-2 my-auto\\\"> {{column.ColumnType}} </div> <div class=\\\"col-3 my-auto\\\"> <div ng-if=\\\"column.ColumnType=='ActionButton' || column.ColumnType=='ActionButtonList'\\\"> {{column.ColumnType}}</div> {{column.Content}} <div ng-repeat=\\\"item in column.ContentItems\\\">{{item.Content}}</div> <div ng-if=\\\"column.ColumnType=='ActionButton'\\\">{{column.TooltipTitle}}</div> <div ng-if=\\\"column.ColumnType=='DashboardPageLink'\\\">{{column.PageName}}</div> </div> <div class=\\\"col-1 my-auto\\\"> {{column.Width}}</div> <div class=\\\"col-1 my-auto\\\"> <i ng-if=\\\"!column.ShowInRowDetails\\\" class=\\\"codicon codicon-chrome-maximize fs-4 text-start\\\"></i> <i ng-if=\\\"column.ShowInRowDetails\\\" class=\\\"codicon codicon-check fs-4 text-start\\\"></i> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==0\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\" ng-click=\\\"$.onColumnSwapClick($index,$index-1)\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==$.columns.length-1\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\" ng-click=\\\"$.onColumnSwapClick($index,$index+1)\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <div class=\\\"b-multi-btns\\\"> <button type=\\\"button\\\" class=\\\"p-0\\\" ng-click=\\\"$.onEditColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Edit Column\\\"> <i class=\\\"codicon codicon-edit me-0\\\"></i> </button> <button type=\\\"button\\\" ng-click=\\\"$.onDeleteColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Delete Column\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddColumnClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Column </button> </div> </div> <div ng-include=\\\"$.editColumnWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/grid.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Paging</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.EnablePaging\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div ng-if=\\\"$.currentField.Settings.EnablePaging\\\"> <div class=\\\"b-field\\\"> <label>Page Index</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.PageIndex\\\" class=\\\"b-input b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label>Page Size</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.PageSize\\\" class=\\\"b-input b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Save Current Page In Storage</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.SaveCurrentPageInStorage\\\"/> <div class=\\\"slider\\\"></div> </label> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"{{$.field.Settings.GroupCssClass}}\\\" data-pane=\\\"Group{{$.field.FieldID}}\\\" data-pane-title=\\\"{{$.field.FieldName}} Pane\\\" data-parent-id=\\\"{{$.field.FieldID}}\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/group/group-studio.component.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Group Css</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.GroupCssClass\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/group/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/import-excel/import-excel.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Columns</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Columns\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/import-excel/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\" ng-if=\\\"$.field.Settings.ShowTextBoxLocation\\\"> <lable class=\\\"b-field-item b-input-edit\\\">{{$.field.Settings.ManualLocLableLat}}</lable> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.ManualLocPlaceholderLat\\\" placeholder=\\\"{{$.field.Settings.ManualLocPlaceholderLat}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> <lable class=\\\"b-field-item b-input-edit\\\">{{$.field.Settings.ManualLocLableLng}}</lable> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.ManualLocPlaceholderLng\\\" placeholder=\\\"{{$.field.Settings.ManualLocPlaceholderLng}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div> <div id=\\\"map{{$.field.FieldName}}\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map-routing/leafletjs-map-routing.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Auto Complete </label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowAutoComplete\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ShowAutoComplete\\\"> <label class=\\\"form-label\\\">Auto Complete Place Holder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.AutoCompletePlaceHolder\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Auto Complete Place Holder\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Map Height</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MapHeight\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Map Height\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Default Zoom</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultZoom\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Zoom\\\" valid-int-number/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Default Location</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultLocationLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultLocationLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Location Longitude\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Latitude and Longitude</label> <label class=\\\"toggle-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowLatLng\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Text Box Location</label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowTextBoxLocation\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ShowTextBoxLocation\\\"> <label class=\\\"form-label\\\">Manual Location</label> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Lat Lable</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocLableLat\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Lng Lable</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocLableLng\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Lat Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocPlaceholderLat\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Lng Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocPlaceholderLng\\\" class=\\\"b-input form-control\\\"/> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Fit Bounds</label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.EnableFitBounds\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.EnableFitBounds\\\"> <label class=\\\"form-label\\\">Fit Bounds</label> <div class=\\\"b-field\\\" style=\\\"border:dotted .1rem #555;border-radius:.475rem;padding:1rem\\\"> <label class=\\\"form-label\\\">From</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsFromLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"From Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsFromLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"From Location Longitude\\\"/> </div> <div class=\\\"b-field\\\" style=\\\"border:dotted .1rem #555;border-radius:.475rem;padding:1rem\\\"> <label class=\\\"form-label\\\">To</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsToLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"To Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsToLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"To Location Longitude\\\"/> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tooltip From Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ToolTipFromText\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Tooltip To Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ToolTipToText\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Tooltip Clear Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ToolTipClearText\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Tooltip OK Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ToolTipOKText\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map-routing/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\" ng-if=\\\"$.field.Settings.ShowTextBoxLocation\\\"> <lable class=\\\"b-field-item b-input-edit\\\">{{$.field.Settings.ManualLocLableLat}}</lable> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.ManualLocPlaceholderLat\\\" placeholder=\\\"{{$.field.Settings.ManualLocPlaceholderLat}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> <lable class=\\\"b-field-item b-input-edit\\\">{{$.field.Settings.ManualLocLableLng}}</lable> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.ManualLocPlaceholderLng\\\" placeholder=\\\"{{$.field.Settings.ManualLocPlaceholderLng}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div> <div id=\\\"map{{$.field.FieldName}}\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map/leafletjs-map.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Auto Complete</label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowAutoComplete\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ShowAutoComplete\\\"> <label class=\\\"form-label\\\">Auto Complete Place Holder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.AutoCompletePlaceHolder\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Auto Complete Place Holder\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Map Height</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MapHeight\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Map Height\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Default Zoom</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultZoom\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Zoom\\\" valid-int-number/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Default Location</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultLocationLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DefaultLocationLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Default Location Longitude\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Latitude and Longitude</label> <label class=\\\"toggle-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowLatLng\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Text Box Location</label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.ShowTextBoxLocation\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ShowTextBoxLocation\\\"> <label class=\\\"form-label\\\">Manual Location</label> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Lat Lable</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocLableLat\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Lng Lable</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocLableLng\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Lat Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocPlaceholderLat\\\" class=\\\"b-input form-control\\\"/> <label class=\\\"form-label\\\">Lng Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ManualLocPlaceholderLng\\\" class=\\\"b-input form-control\\\"/> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Fit Bounds</label> <label class=\\\"b-switch theme-topol\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.EnableFitBounds\\\"/> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.EnableFitBounds\\\"> <label class=\\\"form-label\\\">Fit Bounds</label> <div class=\\\"b-field\\\" style=\\\"border:dotted .1rem #555;border-radius:.475rem;padding:1rem\\\"> <label class=\\\"form-label\\\">From</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsFromLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"From Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsFromLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"From Location Longitude\\\"/> </div> <div class=\\\"b-field\\\" style=\\\"border:dotted .1rem #555;border-radius:.475rem;padding:1rem\\\"> <label class=\\\"form-label\\\">To</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsToLat\\\" class=\\\"b-input form-control\\\" placeholder=\\\"To Location Latitude\\\"/> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FitBoundsToLng\\\" class=\\\"b-input form-control\\\" placeholder=\\\"To Location Longitude\\\"/> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-column'\\\" data-title=\\\"Edit Column\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit matrix column\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-7 b-splitter border-end pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ColumnName\\\" placeholder=\\\"Enter column name\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ColumnTitle\\\" placeholder=\\\"Enter column title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Type</label> <div class=\\\"b-input-group\\\"> <select ng-model=\\\"$.column.ColumnType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select column Type'\\\" required> <option value=\\\"Textbox\\\">Textbox</option> <option value=\\\"Number\\\">Number Box</option> <option value=\\\"DropDownList\\\">Drop Down List</option> <option value=\\\"CheckboxList\\\">Checkbox List</option> <option value=\\\"RadioButtonList\\\">Radio Button List</option> <option value=\\\"DateTime\\\">Date Time</option> <option value=\\\"Button\\\">Button</option> <option value=\\\"File\\\">File</option> <option value=\\\"Label\\\">Label</option> </select> <span><i class=\\\"codicon codicon-activate-breakpoints\\\"></i></span> </div> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.column.ColumnType=='DropDownList'||$.column.ColumnType=='CheckboxList'||$.column.ColumnType=='RadioButtonList'\\\"> <label class=\\\"form-label\\\">Column Type</label> <textarea class=\\\"form-control b-input\\\" ng-model=\\\"$.column.Options\\\" placeholder=\\\"One option per line\\\" rows=\\\"6\\\"></textarea> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Placeholder</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.Placeholder\\\" placeholder=\\\"Enter column placeholder\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div class=\\\"col-5 ps-3\\\"> <div class=\\\"b-field\\\"> <div class=\\\"form-label\\\">Is Required</div> <label class=\\\"b-switch\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.column.IsRequired\\\"> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Column Width</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ColumnWidth\\\" placeholder=\\\"Enter column width\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Header Css</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.HeaderCssClass\\\" placeholder=\\\"Enter column css class\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Header Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.HeaderIcon\\\" placeholder=\\\"Enter column icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">View Order</label> <div class=\\\"b-input-group\\\"> <input type=\\\"number\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.column.ViewOrder\\\" placeholder=\\\"Enter column view order\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-list-ordered\\\"></i></span> </div> </div> <button type=\\\"button\\\" ng-click=\\\"$.onColumnShowConditionsClick()\\\" class=\\\"b-btn btn-action\\\"> <i class=\\\"codicon codicon-gear\\\"></i> Column Show Conditions </button> </div> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ActionButton' && $.column.ActionID && $.column.ActionParams\\\"> <b-action-param-list params=\\\"$.column.ActionParams\\\" data-action-id=\\\"$.column.ActionID\\\" data-actions=\\\"$.actions\\\" data-source=\\\"['fields','form','variables']\\\" data-variables=\\\"$.variables\\\" data-fields=\\\"$.fields\\\"> </b-action-param-list> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ConditionalContents'\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-body p-0\\\"> <div class=\\\"d-flex columns-name p-2\\\"> <div class=\\\"col-5\\\">Content</div> <div class=\\\"col-2\\\">Css Class</div> <div class=\\\"col-2\\\">Icon</div> <div class=\\\"col-2\\\">Conditions</div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"item in $.column.ContentItems\\\"> <div class=\\\"col-5 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Content\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.CssClass\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Icon\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" ng-if=\\\"!item.Conditions.length\\\" ng-click=\\\"$.onShowContentItemConditionsClick(item)\\\" class=\\\"b-btn btn-action btn-sm\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> <button type=\\\"button\\\" ng-if=\\\"item.Conditions.length\\\" ng-click=\\\"$.onShowContentItemConditionsClick(item)\\\" class=\\\"b-btn btn-action btn-sm\\\"> {{item.Conditions.length}} Conditions </button> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.column.ContentItems.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.onAddContentItemClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </div> </div> </div> <div class=\\\"mt-3\\\" ng-if=\\\"$.column.ColumnType=='ActionButtonList'\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-body p-0\\\"> <div class=\\\"d-flex columns-name p-2\\\"> <div class=\\\"col-4\\\">Action</div> <div class=\\\"col-3\\\">Text</div> <div class=\\\"col-2\\\">Css Class</div> <div class=\\\"col-2\\\">Icon</div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"item in $.column.ActionItems\\\"> <div class=\\\"col-4 my-auto\\\"> <select ng-model=\\\"item.ActionID\\\" class=\\\"b-input form-select\\\" chosen ng-options=\\\"action.ActionID as action.ActionName for action in $.actions\\\" placeholder-text-single=\\\"'Select action'\\\" required> </select> </div> <div class=\\\"col-3 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Text\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.CssClass\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"item.Icon\\\"/> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\"> <i class=\\\"codicon codicon-kebab-vertical me-0\\\"></i> </button> <div class=\\\"dropdown-menu b-dropdown-menu\\\"> <a class=\\\"dropdown-item\\\" href=\\\"\\\" ng-if=\\\"item.ActionID\\\" ng-click=\\\"$.onSetActionParamsClick(item)\\\"> <i class=\\\"codicon codicon-refresh me-2\\\"></i> Set Action Params </a> <a class=\\\"dropdown-item\\\" href=\\\"\\\"> <i class=\\\"codicon codicon-plus me-2\\\"></i> Set Show Conditions </a> <a class=\\\"dropdown-item\\\" href=\\\"\\\" ng-click=\\\"$.column.ActionItems.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-2\\\"></i> Delete Item </a> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm btn-action\\\" ng-click=\\\"$.onAddActionItemClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </div> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveColumnClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Column </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelColumnClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget> <div id=\\\"wnColumnShowConditions\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark b-front\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Column Show Conditions </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-condition-list ng-model=\\\"$.column.ShowConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div> <div id=\\\"wnActionParams\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Set Params </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-action-param-list params=\\\"$.actionItem.ActionParams\\\" data-action-id=\\\"$.actionItem.ActionID\\\" data-actions=\\\"$.actions\\\" data-source=\\\"['fields','form','variables']\\\" data-variables=\\\"$.variables\\\" data-fields=\\\"$.fields\\\"> </b-action-param-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div> <div id=\\\"wnContentItemConditions\\\" ng-if=\\\"$.workingMode=='edit-column'\\\" b-custom-modal class=\\\"modal fade b-modal-dark b-front\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Content Conditions </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\"> <b-condition-list ng-model=\\\"$.contentItem.Conditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" data-bs-dismiss=\\\"modal\\\">Done</button> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/edit-column.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \" <div class=\\\"b-table theme-gray mb-3\\\"> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex columns-name\\\"> <div class=\\\"col-2\\\">Name</div> <div class=\\\"col-2\\\">Title</div> <div class=\\\"col-2\\\">Type</div> <div class=\\\"col-1\\\">Width</div> <div class=\\\"col-2\\\">Is Required</div> <div class=\\\"col-2\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"column in $.field.Settings.Columns | orderBy:'ViewOrder'\\\" ng-style=\\\"{'order':($index+1)}\\\"> <div class=\\\"col-2 my-auto\\\"> {{column.ColumnName}} </div> <div class=\\\"col-2 my-auto\\\"> {{column.ColumnTitle}} </div> <div class=\\\"col-2 my-auto\\\"> {{column.ColumnType}} </div> <div class=\\\"col-1 my-auto\\\"> {{column.ColumnWidth}}</div> <div class=\\\"col-2 my-auto\\\"> <i ng-if=\\\"!column.IsRequired\\\" class=\\\"codicon codicon-chrome-maximize fs-4 text-start\\\"></i> <i ng-if=\\\"column.IsRequired\\\" class=\\\"codicon codicon-check fs-4 text-start\\\"></i> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==0\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\" ng-click=\\\"$.onColumnSwapClick($index,$index-1)\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==$.columns.length-1\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\" ng-click=\\\"$.onColumnSwapClick($index,$index+1)\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <div class=\\\"b-multi-btns\\\"> <button type=\\\"button\\\" class=\\\"p-0\\\" ng-click=\\\"$.onEditColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Edit Column\\\"> <i class=\\\"codicon codicon-edit me-0\\\"></i> </button> <button type=\\\"button\\\" ng-click=\\\"$.onDeleteColumnClick(column)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Delete Column\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddColumnClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Column </button> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Data Source</label> <div ng-if=\\\"$.field.Settings.DataSource\\\" role=\\\"button\\\" ng-click=\\\"$.onEditFieldDataSourceClick()\\\"> <div class=\\\"b-notify notify-warning mb-3\\\"> <i class=\\\"codicon codicon-combine icon-sm\\\"></i> <div class=\\\"text\\\"> <span class=\\\"subtext\\\"> Type : <label ng-if=\\\"$.field.Settings.DataSource.Type==0\\\">Standard(Static items)</label> <label ng-if=\\\"$.field.Settings.DataSource.Type==1\\\">Use Defined List</label> <label ng-if=\\\"$.field.Settings.DataSource.Type==2\\\">Data Source Service </label> </span> </div> </div> </div> </div> <div class=\\\"b-field\\\" ng-if=\\\"!$.field.Settings.DataSource\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onEditFieldDataSourceClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Set Data Source </button> </div> <div ng-include=\\\"$.editColumnWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/matrix.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Add Button Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.AddButtonText\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Add button text\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Disable Delete Row</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.DisableDeleteRow\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Table Type</label> <select ng-model=\\\"$.currentField.Settings.TableType\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"horizontal\\\">Horizontal</option> <option value=\\\"vertical\\\">Vertical</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Validation Method</label> <select ng-model=\\\"$.currentField.Settings.ValidationMethod\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"onValidateMatrixField\\\">onValidateMatrixField</option> </select> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div ng-repeat=\\\"message in $.field.Settings.Messages\\\" role=\\\"button\\\" ng-click=\\\"$.onEditMessageClick(message,$index)\\\"> <div class=\\\"b-notify notify-warning mb-3\\\"> <div class=\\\"text\\\"> <span class=\\\"subtext\\\"> {{message.Title}} <br> <span ng-if=\\\"message.ShowConditions.length\\\" class=\\\"small\\\"> {{message.ShowConditions.length}} Conditions </span> </span> </div> </div> </div> <div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddMessageClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Message </button> </div> <b-right-widget ng-if=\\\"$.workingMode=='edit-message'\\\" data-title=\\\"Edit Message\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit message item\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.message.Title\\\" placeholder=\\\"Enter message title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Message Content</label> <div monaco-editor ng-model=\\\"$.message.Content\\\" data-language=\\\"html\\\" data-height=\\\"150px\\\" required> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Conditions</label> <b-condition-list ng-model=\\\"$.message.ShowConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveMessageClick()\\\"> Save Message </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelEditMessageClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/message-box/message-box.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Type</label> <select ng-model=\\\"$.currentField.Settings.ButtonType\\\" class=\\\"b-input form-select\\\" chosen required> <option value=\\\"button\\\">Standard Button</option> <option value=\\\"submit\\\">Submit Button</option> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ButtonType=='button'\\\"> <label class=\\\"form-label\\\">Validation Groups</label> <select ng-model=\\\"$.currentField.Settings.ValidationGroups\\\" class=\\\"b-input form-select\\\" ng-options=\\\"field.FieldID as field.FieldName for field in $.fields | filter: {IsGroup:true}\\\" multiple=\\\"multiple\\\" chosen required> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ButtonType=='button'\\\"> <label class=\\\"form-label\\\">Validation Panes</label> <select ng-model=\\\"$.currentField.Settings.ValidationPanes\\\" class=\\\"b-input form-select\\\" ng-options=\\\"pane.PaneName as pane.PaneTitle for pane in $.panes\\\" multiple=\\\"multiple\\\" chosen required> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonText\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Loading Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LoadingCssClass\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/message-box/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select ng-model=\\\"[FIELD].Value\\\" class=\\\"b-input form-select\\\"> <option ng-if=\\\"![FIELD].Settings.ShowAll || ![FIELD].Options.length\\\" value=\\\"\\\" disabled=\\\"disabled\\\">{{[FIELD].Settings.Placeholder}}</option> <option ng-if=\\\"[FIELD].Settings.ShowAll && [FIELD].Options.length\\\" value=\\\"\\\">{{[FIELD].Settings.AllText}}</option> <option ng-repeat=\\\"option in [FIELD].Options\\\" ng-value=\\\"option[[FIELD].Settings.DataSource.ValueField]\\\" ng-selected=\\\"[FIELD].Value == option[[FIELD].Settings.DataSource.ValueField]\\\">{{option[[FIELD].Settings.DataSource.TextField]}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/nice-select/nice-select.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Dropdown Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DropdownCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show None/All</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ShowAll\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"currentField.Settings.ShowAll\\\"> <label class=\\\"form-label\\\">All Text</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.AllText\\\" class=\\\"b-input form-control\\\" placeholder=\\\"All or none text\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/nice-select/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/persian-date-time-picker/persian-date-time-picker.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Auto Close</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.AutoClose\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\"> <label>Calendar Type</label> <select ng-model=\\\"$.currentField.Settings.CalendarType\\\" class=\\\"b-input form-control\\\" placeholder-text-single=\\\"'Select calendar type'\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"gregorian\\\">Gregorian</option> <option value=\\\"jalali\\\">Jalali</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Format</label> <input ng-model=\\\"$.currentField.Settings.Format\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Example YYYY/MM/DD\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Date & Time</label> <select ng-model=\\\"$.currentField.Settings.DateType\\\" class=\\\"b-input form-control\\\" placeholder-text-single=\\\"'Select date type'\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"datetime\\\">Date & Time</option> <option value=\\\"date\\\">Date</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Min Date</label> <input ng-model=\\\"$.currentField.Settings.MinDate\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Enter min date\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/persian-date-time-picker/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select class=\\\"b-input form-select\\\" ng-model=\\\"[FIELD].Value\\\"> <option value=\\\"\\\">{{$.field.Settings.Placeholder}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/property/property.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Button 1</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.EnableButton1\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div ng-if=\\\"$.currentField.Settings.EnableButton1\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text 1</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonText1\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Css 1</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonCss1\\\" class=\\\"b-input form-control\\\"/> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Button 1</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.EnableButton2\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div ng-if=\\\"$.currentField.Settings.EnableButton2\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Text 2</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonText2\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Button Css 2</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.ButtonCss2\\\" class=\\\"b-input form-control\\\"/> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/property/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select ng-model=\\\"$.field.Value\\\" class=\\\"b-input form-control\\\" ng-options=\\\"item.Value as item.Text for item in $.field.DataSource.Items\\\"> <option Value=\\\"\\\">{{$.field.Settings.Placeholder}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/select2/select2.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Direction</label> <select ng-model=\\\"$.currentField.Settings.Direction\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"ltr\\\">ltr</option> <option value=\\\"rtl\\\">rtl</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Clean Icon</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ShowCleanIcon\\\"/> <div class=\\\"slider\\\"></div> </label> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/select2/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \" <b-right-widget ng-if=\\\"$.workingMode=='selectable-list-edit-templates'\\\" data-title=\\\"Edit Templates\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Edit selectable list templates\\\" data-await-action=\\\"$.awaitAction\\\" data-module=\\\"$\\\"> <div class=\\\"tabs-container pb-3 mb-2\\\"> <ul class=\\\"nav nav-tabs b-tab\\\" role=\\\"tablist\\\"> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link active\\\" id=\\\"selectable-list-layout-tab\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#selectable-list-layout-content\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"selectable-list-layout-content\\\" aria-selected=\\\"true\\\" data-tab=\\\"1\\\">List Layout Template</button> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link\\\" id=\\\"selectable-list-item-tab\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#selectable-list-item-content\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"selectable-list-item-content\\\" aria-selected=\\\"false\\\" data-tab=\\\"2\\\">List Item Template</button> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link\\\" id=\\\"selectable-list-css-tab\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#selectable-list-css-content\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"selectable-list-css-content\\\" aria-selected=\\\"false\\\" data-tab=\\\"3\\\">Custom Css</button> </li> </ul> <div class=\\\"tab-content p-0 mb-4\\\"> <div class=\\\"tab-pane fade show active\\\" id=\\\"selectable-list-layout-content\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"selectable-list-layout-content\\\"> <div monaco-editor ng-model=\\\"$.field.Settings.LayoutTemplate\\\" data-language=\\\"html\\\" data-height=\\\"445px\\\" required> </div> </div> <div class=\\\"tab-pane fade\\\" id=\\\"selectable-list-item-content\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"selectable-list-item-content\\\"> <div monaco-editor ng-model=\\\"$.field.Settings.ItemTemplate\\\" data-language=\\\"html\\\" data-height=\\\"445px\\\" required> </div> </div> <div class=\\\"tab-pane fade\\\" id=\\\"selectable-list-css-content\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"selectable-list-css-tab\\\"> <div monaco-editor ng-model=\\\"$.field.Settings.LayoutCss\\\" data-language=\\\"css\\\" data-height=\\\"445px\\\"> </div> </div> </div> </div> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveTemplatesClick()\\\" ng-disabled=\\\"$.running\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelTemplatesClick()\\\" ng-disabled=\\\"$.running\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/edit-templates.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <div class=\\\"b-radio radio-inline\\\"> <label class=\\\"radio-item\\\" ng-repeat=\\\"option in $.field.DataSource.Items\\\"> <input type=\\\"radio\\\" name=\\\"selectable-list-{{$.field.FieldName}}\\\" value=\\\"{{$index}}\\\"/> <i class=\\\"input-helper\\\"></i> {{option[$.field.Settings.DataSource.TextField]}} </label> </div> </div> <div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onEditTemplatesClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Edit Templates </button> </div> <div ng-include=\\\"$.editTemplatesWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/selectable-list.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Custom Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.CustomClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Direction</label> <select ng-model=\\\"$.currentField.Settings.Direction\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\"></option> <option value=\\\"ltr\\\">ltr</option> <option value=\\\"rtl\\\">rtl</option> </select> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<select ng-model=\\\"$.field.Value\\\" class=\\\"b-input form-select\\\"> <option ng-if=\\\"!$.field.Settings.ShowAll || !$.field.Options.length\\\" value=\\\"\\\" disabled=\\\"disabled\\\">{{$.field.Settings.Placeholder}}</option> <option ng-if=\\\"$.field.Settings.ShowAll && $.field.Options.length\\\" value=\\\"\\\">{{$.field.Settings.AllText}}</option> <option ng-repeat=\\\"option in $.field.Options\\\" ng-value=\\\"option[$.field.Settings.DataSource.ValueField]\\\" ng-selected=\\\"$.field.Value == option[$.field.Settings.DataSource.ValueField]\\\">{{option[$.field.Settings.DataSource.TextField]}}</option> </select>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectize/selectize.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Dropdown Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.DropdownCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectize/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-settings'\\\" data-title=\\\"Sider Settings\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"config swiper slider\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Layout Template</label> <div monaco-editor ng-model=\\\"$.field.Settings.LayoutTemplate\\\" data-language=\\\"html\\\" data-height=\\\"150px\\\" required> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Item Template</label> <div monaco-editor ng-model=\\\"$.field.Settings.ItemTemplate\\\" data-language=\\\"html\\\" data-height=\\\"150px\\\" required> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Custom Css</label> <div monaco-editor ng-model=\\\"$.field.Settings.CustomCss\\\" data-language=\\\"css\\\" data-height=\\\"150px\\\" required> </div> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveSettingsClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Settings </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelSettingsClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Slider Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.SliderCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Slider Options</label> <textarea ng-model=\\\"$.currentField.Settings.SliderOptions\\\" class=\\\"b-input form-control\\\" rows=\\\"5\\\"></textarea> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onEditSettingsClick()\\\"> <i class=\\\"codicon codicon-gear\\\"></i> Edit Settings </button> </div> <div ng-include=\\\"$.settingsWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/slider.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.SwitchButtonCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Custom css class\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/switch-button/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"b-switch\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Value\\\"> <span class=\\\"slider\\\"></span> </label> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/switch-button/switch-button.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-tab'\\\" data-title=\\\"Edit Tab\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit grid tab\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-7 b-splitter border-end pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tab Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtTabName\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.tab.Name\\\" placeholder=\\\"Enter tab name\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tab Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtTabTitle\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.tab.Title\\\" placeholder=\\\"Enter tab title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div class=\\\"col-5 ps-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tab Pane Css Class</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.tab.PaneCssClass\\\" placeholder=\\\"Enter tab pane css class\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tab Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.tab.Icon\\\" placeholder=\\\"Enter tab icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">View Order</label> <div class=\\\"b-input-group\\\"> <input type=\\\"number\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.tab.ViewOrder\\\" placeholder=\\\"Enter tab view order\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-list-ordered\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Description</label> <div class=\\\"b-input-group\\\"> <textarea ng-model=\\\"$.tab.Description\\\" class=\\\"b-input form-control\\\" rows=\\\"2\\\" placeholder=\\\"Enter tab description\\\"></textarea> <span class=\\\"my-auto\\\"><i class=\\\"codicon codicon-debug-stackframe-active\\\"></i></span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Condition(s)</label> <b-condition-list ng-model=\\\"$.tab.ShowConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Condition(s)</label> <b-condition-list ng-model=\\\"$.tab.EnableConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveTabClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Tab </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelTabClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/edit-tab.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \" <div class=\\\"b-table theme-gray mb-4\\\"> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex tabs-name\\\"> <div class=\\\"col-2\\\">Tab Name</div> <div class=\\\"col-3\\\">Tab Title</div> <div class=\\\"col-4\\\">Condition(s)</div> <div class=\\\"col-2\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"tab in $.field.Settings.Tabs | orderBy:'ViewOrder'\\\" ng-style=\\\"{'order':($index+1)}\\\"> <div class=\\\"col-2 my-auto\\\"> {{tab.Name}} </div> <div class=\\\"col-3 my-auto\\\"> <span class=\\\"text\\\"> {{tab.Title}} </span> <span class=\\\"subtext\\\"> {{tab.Description}} </span> </div> <div class=\\\"col-4 my-auto\\\"> <span class=\\\"subtext\\\" ng-if=\\\"tab.ShowConditions.length\\\"> {{tab.ShowConditions.length}} Show Condition(s) </span> <span class=\\\"subtext\\\" ng-if=\\\"tab.EnableConditions.length\\\"> {{tab.EnableConditions.length}} Enable Condition(s) </span> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==0\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\" ng-click=\\\"$.onTabSwapClick($index,$index-1)\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==$.tabs.length-1\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\" ng-click=\\\"$.onTabSwapClick($index,$index+1)\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <div class=\\\"b-multi-btns\\\"> <button type=\\\"button\\\" class=\\\"p-0\\\" ng-click=\\\"$.onEditTabClick(tab)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Edit Tab\\\"> <i class=\\\"codicon codicon-edit\\\"></i> </button> <button type=\\\"button\\\" ng-click=\\\"$.field.Settings.Tabs.splice($index,1)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Delete Tab\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddTabClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Tab </button> </div> </div> <div ng-repeat=\\\"tab in $.field.Settings.Tabs | orderBy:'ViewOrder'\\\" data-pane=\\\"TabsTab_{{tab.Name}}\\\" data-pane-title=\\\"{{tab.Name}} Pane\\\" data-parent-id=\\\"{{$.field.FieldID}}\\\"></div> <div ng-include=\\\"$.editTabWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/tabs.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\"> <textarea class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\" autocomplete=\\\"off\\\" rows=\\\"2\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/text-editor/editor.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Editor Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.EditorCssClass\\\" class=\\\"b-input form-control\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/text-editor/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Rows</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.Rows\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Textarea rows count\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Max Length</label> <input type=\\\"number\\\" ng-model=\\\"$.currentField.Settings.MaxLength\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Field max length\\\"/> </div> <div class=\\\"b-field\\\" ng-if=\\\"currentField.Settings.MaxLength\\\"> <label class=\\\"form-label\\\">Show Max Length</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ShowMaxLength\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Max Length Message</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MaxLengthMessage\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Max length message\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Regex</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMask\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask Options\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Type</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMaskType\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Options</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMaskOptions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask\\\"/> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textarea/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\"> <textarea class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\" autocomplete=\\\"off\\\" rows=\\\"2\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textarea/textarea.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Type</label> <select ng-model=\\\"$.currentField.Settings.InputType\\\" class=\\\"b-input form-control\\\" chosen required> <option value=\\\"text\\\">Text</option> <option value=\\\"number\\\">Number</option> <option value=\\\"password\\\">Password</option> <option value=\\\"email\\\">Email</option> <option value=\\\"search\\\">Search</option> <option value=\\\"date\\\">Date</option> <option value=\\\"datetime\\\">Date Time</option> <option value=\\\"tel\\\">Tel</option> <option value=\\\"time\\\">Time</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputCssClass\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input css class\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Regex</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMask\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask Options\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Type</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMaskType\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Mask Options</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputMaskOptions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Input Mask\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enter Action</label> <select ng-model=\\\"$.currentField.Settings.EnterAction\\\" class=\\\"b-input form-control\\\" ng-options=\\\"action.ActionID as action.ActionName for action in $.actions\\\" chosen> <option value=\\\"\\\">---None---</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enter Button Click</label> <select ng-model=\\\"$.currentField.Settings.EnterButtonClick\\\" class=\\\"b-input form-control\\\" ng-options=\\\"field.FieldID as field.FieldName for field in $.fields | filter: {FieldType:'Button'}\\\" chosen> <option value=\\\"\\\">---None---</option> </select> </div> <div ng-repeat=\\\"attr in $.currentField.Settings.Attributes\\\" style=\\\"padding:10px;margin-bottom:10px;border:solid 1px #ccc\\\"> <div class=\\\"b-field\\\"> <div class=\\\"col-xs-11\\\"> <label>Attribute Name</label> <input type=\\\"text\\\" ng-model=\\\"attr.Name\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"col-xs-11\\\"> <label>Attribute Value</label> <input type=\\\"text\\\" ng-model=\\\"attr.Value\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"col-xs-1\\\"> <span class=\\\"pull-right cursor-pointer\\\" ng-click=\\\"currentField.Settings.Thumbnails.splice($index,1)\\\"> <i class=\\\"zmdi zmdi-delete\\\"></i> </span> </div> <div class=\\\"clearfix\\\"></div> </div> </div> <div class=\\\"b-field\\\" ng-init=\\\"currentField.Settings.Attributes=currentField.Settings.Attributes||[]\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"currentField.Settings.Attributes.push({})\\\"> <i class=\\\"zmdi zmdi-plus\\\"></i> Add Attributes </button> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textbox/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-{{$.field.Settings.Icon}}\\\"></i></span> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textbox/textbox.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Placeholder</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.Placeholder\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Input Css Class</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.InputCssClass\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Icon Position</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.IconPosition\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Font Icon</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.FontIcon\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Clean Icon</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ShowCleanIcon\\\"/> <div class=\\\"slider\\\"></div> </label> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/typeahead-autocomplete/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<input type=\\\"text\\\" ng-model=\\\"$.field.Settings.Placeholder\\\" class=\\\"b-input form-control\\\" placeholder=\\\"{{$.field.Settings.Placeholder}}\\\"/>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/typeahead-autocomplete/typeahead.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Allow Upload Multiple File</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.currentField.Settings.AllowUploadMultipleFile\\\"> <span class=\\\"slider\\\"></span> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"currentField.Settings.AllowUploadMultipleFile\\\"> <label class=\\\"form-label\\\">Max File Count</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MaxFileCount\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Max File Count\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Max File Length(KB)</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MaxFileLength\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Max File Length\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Upload By</label> <select ng-model=\\\"$.currentField.Settings.UploadBy\\\" class=\\\"b-input form-control\\\" chosen required> <option value=\\\"angular\\\">Angular</option> <option value=\\\"jquery\\\">jquery</option> </select> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-file/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<input type=\\\"file\\\" class=\\\"b-input form-control\\\"/>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-file/upload-file.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Upload Label</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.UploadLabel\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Upload Label\\\"/> </div> <div class=\\\"mb-3 m-b-10\\\"> <label class=\\\"form-label\\\">Allow Upload Multiple File</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.AllowUploadMultipleFile\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.AllowUploadMultipleFile\\\"> <label class=\\\"form-label\\\">Max File Count</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MaxFileCount\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Max File Count\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Max File Length(KB)</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.MaxFileLength\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Max File Length\\\"/> </div> <div class=\\\"mb-3 m-b-10\\\"> <label class=\\\"form-label\\\">Resize Large Images</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ResizeLargeImage\\\"/> <div class=\\\"slider\\\"></div> </label> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ResizeLargeImage\\\"> <label class=\\\"form-label\\\">Resize Width</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LargeImageWidth\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Width\\\"/> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.currentField.Settings.ResizeLargeImage\\\"> <label class=\\\"form-label\\\">Resize Height(Auto Height = 0)</label> <input type=\\\"text\\\" ng-model=\\\"$.currentField.Settings.LargeImageHeight\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Height\\\"/> </div> <div ng-repeat=\\\"thumbnail in $.currentField.Settings.Thumbnails\\\" style=\\\"padding:10px;margin-bottom:10px;border:solid 1px #ccc\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\"> Thumbnail Name <span class=\\\"pull-right cursor-pointer\\\" ng-click=\\\"$.currentField.Settings.Thumbnails.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </span> </label> <input type=\\\"text\\\" ng-model=\\\"thumbnail.Name\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Width X Height (px)</label> <div class=\\\"col-xs-6 p-0\\\"> <input type=\\\"text\\\" ng-model=\\\"thumbnail.Width\\\" class=\\\"b-input form-control\\\"/> </div> <div class=\\\"col-xs-6 p-0\\\"> <input type=\\\"text\\\" ng-model=\\\"thumbnail.Height\\\" class=\\\"b-input form-control\\\"/> </div> <p class=\\\"pull-right m-t-5 small\\\">Height 0 : auto</p> <div class=\\\"clearfix\\\"></div> </div> </div> <div class=\\\"b-field\\\" ng-init=\\\"$.currentField.Settings.Thumbnails=$.currentField.Settings.Thumbnails||[]\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"$.currentField.Settings.Thumbnails.push({})\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Thumbnail </button> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Upload By</label> <select ng-model=\\\"$.currentField.Settings.UploadBy\\\" class=\\\"b-input form-control\\\" chosen required> <option value=\\\"angular\\\">Angular</option> <option value=\\\"jquery\\\">jquery</option> <option value=\\\"dnn\\\">dnn</option> </select> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-image/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"card b-custom-selective mb-4\\\"> <div class=\\\"card-body text-center\\\"> <i class=\\\"fs-1 codicon codicon-plus text-muted mb-4 d-block\\\"></i> <h5 class=\\\"card-title text-nowrap\\\">{{$.field.Settings.UploadLabel}}</h5> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-image/upload-image.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<b-right-widget ng-if=\\\"$.workingMode=='edit-step'\\\" data-title=\\\"Edit Step\\\" data-icon=\\\"notebook-template\\\" data-subtitle=\\\"Add or edit grid step\\\" data-await-action=\\\"$.awaitAction\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-7 b-splitter border-end pe-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Step Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtStepName\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.step.Name\\\" placeholder=\\\"Enter step name\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Step Title</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtStepTitle\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.step.Title\\\" placeholder=\\\"Enter step title\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div> <div class=\\\"col-5 ps-3\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Step Pane Css Class</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.step.PaneCssClass\\\" placeholder=\\\"Enter step pane css class\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Step Icon</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.step.Icon\\\" placeholder=\\\"Enter step icon\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">View Order</label> <div class=\\\"b-input-group\\\"> <input type=\\\"number\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.step.ViewOrder\\\" placeholder=\\\"Enter step view order\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-list-ordered\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Description</label> <div class=\\\"b-input-group\\\"> <textarea ng-model=\\\"$.step.Description\\\" class=\\\"b-input form-control\\\" rows=\\\"2\\\" placeholder=\\\"Enter step description\\\"></textarea> <span class=\\\"my-auto\\\"><i class=\\\"codicon codicon-debug-stackframe-active\\\"></i></span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Show Condition(s)</label> <b-condition-list ng-model=\\\"$.step.ShowConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Enable Condition(s)</label> <b-condition-list ng-model=\\\"$.step.EnableConditions\\\" data-source=\\\"['fields','form','variables','actionParams']\\\" data-variables=\\\"variables\\\" data-fields=\\\"fields\\\" data-action-params=\\\"$.action.Params\\\"></b-condition-list> </div> <hr class=\\\"mb-4\\\"/> <div class=\\\"mb-1 d-flex justify-content-end mt-auto\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSaveStepClick()\\\"> <i class=\\\"codicon codicon-save\\\"></i> Save Step </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.onCancelStepClick()\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </b-right-widget>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/edit-step.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Validate Step by Step</label> <label class=\\\"b-switch d-block\\\"> <input type=\\\"checkbox\\\" hidden=\\\"hidden\\\" ng-model=\\\"$.currentField.Settings.ValidateStepbyStep\\\"/> <div class=\\\"slider\\\"></div> </label> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/sidebar-settings.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \" <div class=\\\"b-table theme-gray mb-4\\\"> <div class=\\\"table-body pt-4\\\"> <div class=\\\"d-flex steps-name\\\"> <div class=\\\"col-2\\\">Step Name</div> <div class=\\\"col-3\\\">Step Title</div> <div class=\\\"col-4\\\">Condition(s)</div> <div class=\\\"col-2\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" disabled=\\\"disabled\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <i class=\\\"codicon codicon-ellipsis\\\"></i> </div> </div> <div class=\\\"d-flex table-row\\\" ng-repeat=\\\"step in $.field.Settings.Steps | orderBy:'ViewOrder'\\\" ng-style=\\\"{'order':($index+1)}\\\"> <div class=\\\"col-2 my-auto\\\"> {{step.Name}} </div> <div class=\\\"col-3 my-auto\\\"> <span class=\\\"text\\\"> {{step.Title}} </span> <span class=\\\"subtext\\\"> {{step.Description}} </span> </div> <div class=\\\"col-4 my-auto\\\"> <span class=\\\"subtext\\\" ng-if=\\\"step.ShowConditions.length\\\"> {{step.ShowConditions.length}} Show Condition(s) </span> <span class=\\\"subtext\\\" ng-if=\\\"step.EnableConditions.length\\\"> {{step.EnableConditions.length}} Enable Condition(s) </span> </div> <div class=\\\"col-2 my-auto\\\"> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==0\\\"> <i class=\\\"codicon codicon-arrow-up d-inline-block me-1\\\" ng-click=\\\"$.onStepSwapClick($index,$index-1)\\\"></i> </button> <button type=\\\"button\\\" class=\\\"b-clean text-light\\\" ng-disabled=\\\"$index==$.steps.length-1\\\"> <i class=\\\"codicon codicon-arrow-down d-inline-block\\\" ng-click=\\\"$.onStepSwapClick($index,$index+1)\\\"></i> </button> </div> <div class=\\\"col-1\\\"> <div class=\\\"b-multi-btns\\\"> <button type=\\\"button\\\" class=\\\"p-0\\\" ng-click=\\\"$.onEditStepClick(step)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Edit Step\\\"> <i class=\\\"codicon codicon-edit\\\"></i> </button> <button type=\\\"button\\\" ng-click=\\\"$.field.Settings.Steps.splice($index,1)\\\" b-custom-tooltip data-bs-placement=\\\"bottom\\\" title=\\\"Delete Step\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </div> </div> </div> </div> <div class=\\\"table-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddStepClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Step </button> </div> </div> <div ng-repeat=\\\"step in $.field.Settings.Steps | orderBy:'ViewOrder'\\\" data-pane=\\\"WizardStep_{{step.Name}}\\\" data-pane-title=\\\"{{step.Name}} Pane\\\" data-parent-id=\\\"{{$.field.FieldID}}\\\"></div> <div ng-include=\\\"$.editStepWidget\\\"></div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/wizard.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"create-data-source\\\"> <div class=\\\"d-flex justify-content-end\\\"> <div class=\\\"b-radio d-inline-block mb-3\\\" ng-model=\\\"$.bindEntityService.QueryType\\\" required> <label class=\\\"me-3\\\"> <input type=\\\"radio\\\" name=\\\"queryType{{$.bindEntityService.ServiceID}}\\\" ng-value=\\\"0\\\" ng-model=\\\"$.bindEntityService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Query Designer </label> <label> <input type=\\\"radio\\\" name=\\\"queryType{{$.bindEntityService.ServiceID}}\\\" ng-value=\\\"1\\\" ng-model=\\\"$.bindEntityService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Custom Query </label> </div> </div> <div ng-if=\\\"$.bindEntityService.QueryType==0\\\"> <div class=\\\"row\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDatabase\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Database </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDatabase\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Database Object Type</label> <select id=\\\"drpDatabaseObjectType\\\" ng-model=\\\"$.bindEntityService.DatabaseObjectType\\\" class=\\\"b-input form-select\\\" required> <option value=\\\"\\\" disabled=\\\"disabled\\\">Select database object type</option> <option ng-value=\\\"0\\\">Stored Procedure</option> <option ng-value=\\\"1\\\">Query Text</option> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.bindEntityService.DatabaseObjectType==0\\\"> <label class=\\\"form-label\\\">Database Object Name</label> <div class=\\\"b-input-group\\\"> <div class=\\\"b-input form-control d-flex\\\"> <div class=\\\"col-4\\\"> <input type=\\\"text\\\" id=\\\"txtSpPrefix\\\" ng-model=\\\"$.bindEntityService.Settings.StoredProcedurePrefixName\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Prefix name\\\" required/> </div> <div class=\\\"col-8\\\"> <input type=\\\"text\\\" id=\\\"txtSpPostfix\\\" ng-model=\\\"$.bindEntityService.Settings.StoredProcedurePostfixName\\\" ng-change=\\\"$.bindEntityService.Settings.StoredProcedureNameModified=true\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Example GetProducts\\\" autocomplete=\\\"off\\\" required/> </div> </div> <span><i class=\\\"codicon codicon-table\\\"></i></span> </div> </div> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpBaseQuery\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Base Query </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpBaseQuery\\\" class=\\\"group-content\\\"> <div class=\\\"b-field\\\"> <div class=\\\"row\\\"> <div monaco-editor ng-model=\\\"$.bindEntityService.BaseQuery\\\" data-language=\\\"sql\\\" data-height=\\\"150px\\\" required> </div> <button type=\\\"button\\\" class=\\\"b-btn justify-content-center mt-3 p-1\\\" ng-click=\\\"$.onResetBaseQueryClick()\\\"> Reset Query </button> </div> </div> </div> </div> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th>ViewOrder</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"d-flex\\\"> <div class=\\\"col-8 b-splitter border-end pe-2\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpMapToEntity\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Map To Entity </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpMapToEntity\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-header\\\"> <div class=\\\"header-label\\\"> <h4 class=\\\"header-title\\\">entity</h4> <span class=\\\"header-subtitle\\\">This service must mapped to a entity</span> </div> <div class=\\\"header-tools\\\"> <div class=\\\"col-11\\\"> <select id=\\\"drpEntityID\\\" ng-model=\\\"$.bindEntityService.EntityID\\\" class=\\\"b-input form-select b-btn btn-action text-start\\\" ng-options=\\\"entity.EntityID as entity.EntityName for entity in $.entities\\\" ng-change=\\\"$.onSelectedEntityChange()\\\" chosen placeholder-text-single=\\\"'Select entity'\\\" required> </select> </div> <div class=\\\"col-1\\\"> <i role=\\\"button\\\" class=\\\"codicon codicon-refresh text-light ms-2 mt-2\\\" ng-click=\\\"$.onRefreshEntityClick()\\\"></i> </div> </div> </div> <div class=\\\"table-body\\\" ng-if=\\\"$.bindEntityService.Entities.length\\\"> <div class=\\\"grid columns-name\\\"> <div class=\\\"g-col-1\\\"></div> <div class=\\\"g-col-3\\\">Column Name</div> <div class=\\\"g-col-3\\\">Value Type</div> <div class=\\\"g-col-5\\\">Value</div> </div> <div class=\\\"grid table-row\\\" ng-repeat=\\\"prop in $.bindEntityService.EntityColumns\\\"> <div class=\\\"g-col-1\\\"> <label class=\\\"b-checkbox\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"prop.IsSelected\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </div> <div class=\\\"g-col-3\\\"> {{prop.ColumnName}} </div> <div class=\\\"g-col-3\\\"> <select ng-model=\\\"prop.ValueType\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-disabled=\\\"!prop.IsSelected\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\">Value Type</option> <option value=\\\"DataSource\\\">Data Source</option> <option value=\\\"Custom\\\">Custom</option> </select> </div> <div class=\\\"g-col-5\\\" ng-if=\\\"prop.ValueType=='DataSource'\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"prop.EntityAliasName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities\\\" ng-change=\\\"$.onSelectedEntityAliasChange(prop)\\\" ng-disabled=\\\"!prop.IsSelected\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\">Entity</option> </select> </div> <div class=\\\"col-8 p-0\\\" ng-if=\\\"prop.Columns.length\\\"> <select ng-model=\\\"prop.ColumnName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"column.ColumnName as column.ColumnName for column in prop.Columns\\\" chosen placeholder-text-single=\\\"'Column'\\\" ng-disabled=\\\"!prop.IsSelected\\\"> </select> </div> </div> </div> <div class=\\\"g-col-5\\\" ng-if=\\\"prop.ValueType=='Custom'\\\"> <input type=\\\"text\\\" ng-model=\\\"prop.Value\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Column Value\\\" ng-disabled=\\\"!prop.IsSelected\\\"/> </div> </div> </div> <div class=\\\"table-footer\\\"> <div ng-if=\\\"!$.bindEntityService.EntityID\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No entity selected.</h4> <span class=\\\"subtext\\\"> Data source service must mapped to a entity. </span> </div> </div> <div ng-if=\\\"$.bindEntityService.EntityID && !$.bindEntityService.Entities.length\\\" class=\\\"b-notify notify-warning position-relative mb-4\\\"> <i class=\\\"codicon codicon-arrow-small-right position-absolute top-0 end-0\\\"></i> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No Entities selected.</h4> <span class=\\\"subtext\\\"> Before set entity columns select one or more entity. </span> </div> </div> <p class=\\\"b-invalid\\\">{{$.form.error.EntityColumns}}</p> </div> </div> </div> </div> </div> <div class=\\\"col ps-2\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpSelectEntities\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Select Entities </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpSelectEntities\\\" class=\\\"group-content selected-entities-diagram collapse show\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mb-4\\\" ng-click=\\\"$.onAddEntityClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Entity </button> <div ng-repeat=\\\"entity in $.bindEntityService.Entities\\\" class=\\\"entity-item\\\"> <div class=\\\"header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#pnlEntityColumns{{$index}}\\\" role=\\\"button\\\" ng-click=\\\"$.onEntityExpandClick(entity)\\\"> <div class=\\\"title\\\"> <label class=\\\"entity-name\\\">{{entity.EntityName}} as {{entity.AliasName}}</label> <span class=\\\"entity-alias\\\">({{entity.TableName}})</span> </div> <ul class=\\\"tools\\\"> <li> <a b-custom-tooltip data-bs-placement=\\\"left\\\" title=\\\"Refresh\\\"> <i class=\\\"codicon codicon-refresh\\\"></i> </a> </li> <li class=\\\"me-0\\\"> <a b-custom-tooltip data-bs-placement=\\\"left\\\" title=\\\"Close\\\" ng-click=\\\"$.onDeleteEntityClick(entity,$index)\\\"> <i class=\\\"codicon codicon-close\\\"></i></a> </li> </ul> </div> <div id=\\\"pnlEntityColumns{{$index}}\\\" class=\\\"columns collapse\\\"> <div class=\\\"b-list-group\\\"> <ul class=\\\"list\\\"> <li class=\\\"list-item\\\" ng-repeat=\\\"column in entity.Columns\\\"> <a class=\\\"item-label\\\"> <i ng-if=\\\"!column.IsSelected\\\" class=\\\"codicon codicon-chrome-maximize fs-4 text-start\\\"></i> <i ng-if=\\\"column.IsSelected\\\" class=\\\"codicon codicon-check fs-4 text-start\\\"></i> {{column.ColumnName}} </a> </li> </ul> </div> </div> <div ng-if=\\\"$.bindEntityService.Entities.length>1\\\" class=\\\"entity-join-relationships\\\" role=\\\"button\\\"> <i ng-if=\\\"entity.EnableJoin\\\" class=\\\"codicon codicon-diff-added add-join\\\" role=\\\"button\\\" ng-click=\\\"$.onAddJoinRelationshipClick(entity)\\\"></i> Join Relationships <label class=\\\"b-switch switch-sm position-absolute top-0 end-0 me-2 mt-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"entity.EnableJoin\\\"> <span class=\\\"slider\\\"></span> </label> <div ng-if=\\\"entity.EnableJoin\\\" ng-repeat=\\\"relationship in entity.JoinRelationships\\\" class=\\\"mb-2\\\"> <hr/> <div class=\\\"d-flex mb-1\\\"> <div class=\\\"col-4 p-0\\\"> <p class=\\\"b-input form-select mb-0\\\">{{entity.AliasName}}</p> </div> <div class=\\\"col-4 p-0\\\"> <select id=\\\"drpJoinType\\\" ng-model=\\\"relationship.JoinType\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Join</option> <option value=\\\"INNER JOIN\\\">Inner Join</option> <option value=\\\"LEFT JOIN\\\">Left Join</option> <option value=\\\"RIGHT JOIN\\\">Right Join</option> <option value=\\\"OUTER JOIN\\\">Outer Join</option> <option value=\\\"LEFT JOIN EXCLUDING INNER JOIN\\\">Left Join Excluding Inner Join </option> <option value=\\\"RIGHT JOIN EXCLUDING INNER JOIN\\\">Right Join Excluding Inner Join </option> <option value=\\\"OUTER JOIN EXCLUDING INNER JOIN\\\">Outer Join Excluding Inner Join </option> <option value=\\\"CROSS JOIN\\\">Cross Join</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select id=\\\"drpRightEntityAliasName\\\" ng-model=\\\"relationship.RightEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Right</option> </select> </div> </div> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtJoinConditions\\\" ng-model=\\\"relationship.JoinConditions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Example : u.UserID = r.UserID\\\"/> <span><i>on</i></span> </div> </div> </div> </div> <div ng-if=\\\"!$.bindEntityService.Entities.length\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No selected entities.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddEntityClick()\\\"> Add Entity </button> to add a entity!. </span> </div> </div> <p class=\\\"b-invalid\\\">{{$.form.error.Entities}}</p> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpJoinRelationships\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Join Relationships </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpJoinRelationships\\\" class=\\\"group-content selected-entities-diagram collapse show\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mb-4\\\" ng-click=\\\"$.onAddJoinRelationshipClick2()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Join Relationship </button> <div ng-repeat=\\\"relationship in $.bindEntityService.JoinRelationships\\\" class=\\\"mb-2\\\"> <div class=\\\"d-flex mb-1\\\"> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.LeftEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship,1)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Left</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.JoinType\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Join</option> <option value=\\\"INNER JOIN\\\">Inner Join</option> <option value=\\\"LEFT JOIN\\\">Left Join</option> <option value=\\\"RIGHT JOIN\\\">Right Join</option> <option value=\\\"OUTER JOIN\\\">Outer Join</option> <option value=\\\"LEFT JOIN EXCLUDING INNER JOIN\\\">Left Join Excluding Inner Join </option> <option value=\\\"RIGHT JOIN EXCLUDING INNER JOIN\\\">Right Join Excluding Inner Join </option> <option value=\\\"OUTER JOIN EXCLUDING INNER JOIN\\\">Outer Join Excluding Inner Join </option> <option value=\\\"CROSS JOIN\\\">Cross Join</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.RightEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship,2)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Right</option> </select> </div> </div> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtJoinConditions\\\" ng-model=\\\"relationship.JoinConditions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Example : u.UserID = r.UserID\\\"/> <span><i>on</i></span> </div> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.bindEntityService.JoinRelationships.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> <hr/> </div> </div> </div> </div> </div> <div ng-if=\\\"$.bindEntityService.Entities.length\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpFilters\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Filters <span ng-show=\\\"bindEntityService.Filters.length\\\">({{bindEntityService.Filters.length}})</span> </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpFilters\\\" class=\\\"group-content collapse\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Type</th> <th>Expression</th> <th>Condition Group</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"filter in $.bindEntityService.Filters\\\"> <td class=\\\"w-150\\\"> <select ng-model=\\\"filter.Type\\\" class=\\\"b-input form-select\\\"> <option disabled=\\\"disabled\\\" value=\\\"\\\">Type</option> <option ng-value=\\\"0\\\" disabled=\\\"disabled\\\">Standard</option> <option ng-value=\\\"1\\\">Custom</option> </select> </td> <td ng-if=\\\"filter.Type==0\\\"></td> <td ng-if=\\\"filter.Type==1\\\"> <input type=\\\"text\\\" ng-model=\\\"filter.CustomQuery\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Custom Query\\\" required/> </td> <td class=\\\"w-200\\\"> <input type=\\\"text\\\" ng-model=\\\"filter.ConditionGroupName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Custom Query\\\" required/> </td> <td> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.bindEntityService.Filters.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"20\\\"> <button type=\\\"button\\\" class=\\\"b-btn\\\" ng-click=\\\"$.onAddFilterClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </th> </tr> </tfoot> </table> </div> </div> </div> </div> <div ng-if=\\\"$.bindEntityService.QueryType==1\\\"> <div class=\\\"b-field\\\"> <div monaco-editor ng-model=\\\"$.bindEntityService.CustomQuery\\\" class=\\\"b-input form-control b-monaco\\\" data-language=\\\"sql\\\" data-height=\\\"350px\\\" required></div> </div> </div> </div> <div id=\\\"wnSelectEntity\\\" b-custom-modal class=\\\"modal fade b-modal-dark\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Add Entity </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\" ng-class=\\\"{'was-validated':$.selectedEntityForm.validated}\\\"> <div class=\\\"b-field mb-1\\\"> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" ng-model=\\\"$.searchEntities\\\" class=\\\"b-input form-control\\\" b-custom-focus=\\\"focusSearchEntity\\\" placeholder=\\\"Search by entity name\\\"/> <span><i class=\\\"codicon codicon-search\\\"></i></span> </div> </div> <div class=\\\"b-field mb-2\\\"> <div class=\\\"b-list-group\\\"> <ul class=\\\"list\\\"> <li class=\\\"list-item\\\" ng-repeat=\\\"entity in $.entities | filter:{'EntityName':$.searchEntities}\\\"> <a class=\\\"item-label\\\" ng-class=\\\"{'active':entity.IsSelected}\\\" ng-click=\\\"$.onEntityItemClick(entity)\\\">{{entity.EntityName}}</a> </li> </ul> </div> </div> <div class=\\\"b-field\\\"> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtselectedEntityAliasName\\\" ng-model=\\\"$.selectedEntity.AliasName\\\" class=\\\"b-input form-control\\\" b-custom-focus=\\\"focusEntityAliasName\\\" placeholder=\\\"Enter entity alias name\\\" required/> <span><i class=\\\"codicon codicon-bell\\\"></i></span> </div> </div> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSelectEntityClick()\\\" ng-disabled=\\\"$.running\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Entity </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" data-bs-dismiss=\\\"modal\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/bind-entity/bind-entity.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"create-custom-query\\\"> <div class=\\\"row\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDatabase\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Database </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDatabase\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Database Object Type</label> <select id=\\\"drpDatabaseObjectType\\\" ng-model=\\\"$.customQueryService.DatabaseObjectType\\\" class=\\\"b-input form-select\\\" required> <option value=\\\"\\\" disabled=\\\"disabled\\\">Select database object type</option> <option ng-value=\\\"0\\\">Stored Procedure</option> <option ng-value=\\\"1\\\">Query Text</option> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.customQueryService.DatabaseObjectType==0\\\"> <label class=\\\"form-label\\\">Database Object Name</label> <div class=\\\"b-input-group\\\"> <div class=\\\"b-input form-control d-flex\\\"> <div class=\\\"col-4\\\"> <input type=\\\"text\\\" id=\\\"txtSpPrefix\\\" ng-model=\\\"$.customQueryService.Settings.StoredProcedurePrefixName\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Prefix name\\\" required/> </div> <div class=\\\"col-8\\\"> <input type=\\\"text\\\" id=\\\"txtSpPostfix\\\" ng-model=\\\"$.customQueryService.Settings.StoredProcedurePostfixName\\\" ng-change=\\\"$.customQueryService.Settings.StoredProcedureNameModified=true\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Example GetProducts\\\" autocomplete=\\\"off\\\" required/> </div> </div> <span><i class=\\\"codicon codicon-table\\\"></i></span> </div> </div> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-dark\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" ng-if=\\\"$.customQueryService.DatabaseObjectType==1\\\" class=\\\"btn btn-sm btn-primary\\\" ng-click=\\\"$.onGDetectServiceParams()\\\"> Detect Params </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpSQLQuery\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> SQL Query </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpSQLQuery\\\" class=\\\"group-content collapse show\\\"> <label class=\\\"form-label\\\">Sql Query</label> <div id=\\\"editorSqlQuery\\\" monaco-editor ng-model=\\\"$.customQueryService.Query\\\" data-language=\\\"sql\\\" data-height=\\\"350px\\\" required> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/custom-qeury/custom-query.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"create-data-source\\\"> <div class=\\\"d-flex justify-content-end\\\"> <div class=\\\"b-radio d-inline-block mb-3\\\" ng-model=\\\"$.dataSourceService.QueryType\\\" required> <label class=\\\"me-3\\\"> <input type=\\\"radio\\\" name=\\\"queryType{{$.dataSourceService.ServiceID}}\\\" ng-value=\\\"0\\\" ng-model=\\\"$.dataSourceService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Query Designer </label> <label> <input type=\\\"radio\\\" name=\\\"queryType{{$.dataSourceService.ServiceID}}\\\" ng-value=\\\"1\\\" ng-model=\\\"$.dataSourceService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Custom Query </label> </div> </div> <div ng-if=\\\"$.dataSourceService.QueryType==0\\\"> <div class=\\\"row\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDatabase\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Database </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDatabase\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Database Object Type</label> <select id=\\\"drpDatabaseObjectType\\\" ng-model=\\\"$.dataSourceService.DatabaseObjectType\\\" class=\\\"b-input form-select\\\" required> <option value=\\\"\\\" disabled=\\\"disabled\\\">Select database object type</option> <option ng-value=\\\"0\\\">Stored Procedure</option> <option ng-value=\\\"1\\\">Query Text</option> </select> </div> <div class=\\\"b-field\\\" ng-if=\\\"$.dataSourceService.DatabaseObjectType==0\\\"> <label class=\\\"form-label\\\">Database Object Name</label> <div class=\\\"b-input-group\\\"> <div class=\\\"b-input form-control d-flex\\\"> <div class=\\\"col-4\\\"> <input type=\\\"text\\\" id=\\\"txtSpPrefix\\\" ng-model=\\\"$.dataSourceService.Settings.StoredProcedurePrefixName\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Prefix name\\\" required/> </div> <div class=\\\"col-8\\\"> <input type=\\\"text\\\" id=\\\"txtSpPostfix\\\" ng-model=\\\"$.dataSourceService.Settings.StoredProcedurePostfixName\\\" ng-change=\\\"$.dataSourceService.Settings.StoredProcedureNameModified=true\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Example GetProducts\\\" autocomplete=\\\"off\\\" required/> </div> </div> <span><i class=\\\"codicon codicon-table\\\"></i></span> </div> </div> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpBaseQuery\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Base Query </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpBaseQuery\\\" class=\\\"group-content\\\"> <div class=\\\"b-field\\\"> <div class=\\\"row\\\"> <div monaco-editor ng-model=\\\"$.dataSourceService.BaseQuery\\\" data-language=\\\"sql\\\" data-height=\\\"150px\\\" required> </div> <button type=\\\"button\\\" class=\\\"b-btn justify-content-center mt-3 p-1\\\" ng-click=\\\"$.onResetBaseQueryClick()\\\"> Reset Query </button> </div> </div> </div> </div> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th>ViewOrder</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"d-flex\\\"> <div class=\\\"col-8 b-splitter border-end pe-2\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpMapToViewModel\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Map To View Model </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpMapToViewModel\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-table theme-gray\\\"> <div class=\\\"table-header\\\"> <div class=\\\"header-label\\\"> <h4 class=\\\"header-title\\\">View Model</h4> <span class=\\\"header-subtitle\\\">This service must mapped to a view model</span> </div> <div class=\\\"header-tools\\\"> <div class=\\\"col-11\\\"> <select id=\\\"drpViewModelID\\\" ng-model=\\\"$.dataSourceService.ViewModelID\\\" class=\\\"b-input form-select b-btn btn-action text-start\\\" ng-options=\\\"vm.ViewModelID as vm.ViewModelName for vm in $.viewModels\\\" ng-change=\\\"$.onSelectedViewModelChange()\\\" chosen placeholder-text-single=\\\"'Select view model'\\\" required> </select> </div> <div class=\\\"col-1\\\"> <i role=\\\"button\\\" class=\\\"codicon codicon-refresh text-light ms-2 mt-2\\\" ng-click=\\\"$.onRefreshViewModelClick()\\\"></i> </div> </div> </div> <div class=\\\"table-body\\\" ng-if=\\\"$.dataSourceService.Entities.length\\\"> <div class=\\\"grid columns-name\\\"> <div class=\\\"g-col-1\\\"></div> <div class=\\\"g-col-3\\\">Property Name</div> <div class=\\\"g-col-3\\\">Value Type</div> <div class=\\\"g-col-5\\\">Value</div> </div> <div class=\\\"grid table-row\\\" ng-repeat=\\\"prop in $.dataSourceService.ViewModelProperties\\\"> <div class=\\\"g-col-1\\\"> <label class=\\\"b-checkbox\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"prop.IsSelected\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </div> <div class=\\\"g-col-3\\\"> {{prop.PropertyName}} </div> <div class=\\\"g-col-3\\\"> <select ng-model=\\\"prop.ValueType\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-disabled=\\\"!prop.IsSelected\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\">Value Type</option> <option value=\\\"DataSource\\\">Data Source</option> <option value=\\\"Custom\\\">Custom</option> </select> </div> <div class=\\\"g-col-5\\\" ng-if=\\\"prop.ValueType=='DataSource'\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"prop.EntityAliasName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities\\\" ng-change=\\\"$.onSelectedEntityAliasChange(prop)\\\" ng-disabled=\\\"!prop.IsSelected\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\">Entity</option> </select> </div> <div class=\\\"col-8 p-0\\\" ng-if=\\\"prop.Columns.length\\\"> <select ng-model=\\\"prop.ColumnName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"column.ColumnName as column.ColumnName for column in prop.Columns\\\" chosen placeholder-text-single=\\\"'Column'\\\" ng-disabled=\\\"!prop.IsSelected\\\"> </select> </div> </div> </div> <div class=\\\"g-col-5\\\" ng-if=\\\"prop.ValueType=='Custom'\\\"> <input type=\\\"text\\\" ng-model=\\\"prop.Value\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Property Value\\\" ng-disabled=\\\"!prop.IsSelected\\\"/> </div> </div> </div> <div class=\\\"table-footer\\\"> <div ng-if=\\\"!$.dataSourceService.ViewModelID\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No view model selected.</h4> <span class=\\\"subtext\\\"> Data source service must mapped to a view model. </span> </div> </div> <div ng-if=\\\"$.dataSourceService.ViewModelID && !$.dataSourceService.Entities.length\\\" class=\\\"b-notify notify-warning position-relative mb-4\\\"> <i class=\\\"codicon codicon-arrow-small-right position-absolute top-0 end-0\\\"></i> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No Entities selected.</h4> <span class=\\\"subtext\\\"> Before set view model properties select one or more entity. </span> </div> </div> <p class=\\\"b-invalid\\\">{{$.form.error.ViewModelProperties}}</p> </div> </div> </div> </div> </div> <div class=\\\"col ps-2\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpSelectEntities\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Select Entities </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpSelectEntities\\\" class=\\\"group-content selected-entities-diagram collapse show\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mb-4\\\" ng-click=\\\"$.onAddEntityClick()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Entity </button> <div ng-repeat=\\\"entity in $.dataSourceService.Entities\\\" class=\\\"entity-item\\\"> <div class=\\\"header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#pnlEntityColumns{{$index}}\\\" role=\\\"button\\\" ng-click=\\\"$.onEntityExpandClick(entity)\\\"> <div class=\\\"title\\\"> <label class=\\\"entity-name\\\">{{entity.EntityName}} as {{entity.AliasName}}</label> <span class=\\\"entity-alias\\\">({{entity.TableName}})</span> </div> <ul class=\\\"tools\\\"> <li> <a b-custom-tooltip data-bs-placement=\\\"left\\\" title=\\\"Refresh\\\"> <i class=\\\"codicon codicon-refresh\\\"></i> </a> </li> <li class=\\\"me-0\\\"> <a b-custom-tooltip data-bs-placement=\\\"left\\\" title=\\\"Close\\\" ng-click=\\\"$.onDeleteEntityClick(entity,$index)\\\"> <i class=\\\"codicon codicon-close\\\"></i></a> </li> </ul> </div> <div id=\\\"pnlEntityColumns{{$index}}\\\" class=\\\"columns collapse\\\"> <div class=\\\"b-list-group\\\"> <ul class=\\\"list\\\"> <li class=\\\"list-item\\\" ng-repeat=\\\"column in entity.Columns\\\"> <a class=\\\"item-label\\\"> <i ng-if=\\\"!column.IsSelected\\\" class=\\\"codicon codicon-chrome-maximize fs-4 text-start\\\"></i> <i ng-if=\\\"column.IsSelected\\\" class=\\\"codicon codicon-check fs-4 text-start\\\"></i> {{column.ColumnName}} </a> </li> </ul> </div> </div> <div ng-if=\\\"$.dataSourceService.Entities.length>1\\\" class=\\\"entity-join-relationships\\\" role=\\\"button\\\"> <i ng-if=\\\"entity.EnableJoin\\\" class=\\\"codicon codicon-diff-added add-join\\\" role=\\\"button\\\" ng-click=\\\"$.onAddJoinRelationshipClick(entity)\\\"></i> Join Relationships <label class=\\\"b-switch switch-sm position-absolute top-0 end-0 me-2 mt-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"entity.EnableJoin\\\"> <span class=\\\"slider\\\"></span> </label> <div ng-if=\\\"entity.EnableJoin\\\" ng-repeat=\\\"relationship in entity.JoinRelationships\\\" class=\\\"mb-2\\\"> <hr/> <div class=\\\"d-flex mb-1\\\"> <div class=\\\"col-4 p-0\\\"> <p class=\\\"b-input form-select mb-0\\\">{{entity.AliasName}}</p> </div> <div class=\\\"col-4 p-0\\\"> <select id=\\\"drpJoinType\\\" ng-model=\\\"relationship.JoinType\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Join</option> <option value=\\\"INNER JOIN\\\">Inner Join</option> <option value=\\\"LEFT JOIN\\\">Left Join</option> <option value=\\\"RIGHT JOIN\\\">Right Join</option> <option value=\\\"OUTER JOIN\\\">Outer Join</option> <option value=\\\"LEFT JOIN EXCLUDING INNER JOIN\\\">Left Join Excluding Inner Join </option> <option value=\\\"RIGHT JOIN EXCLUDING INNER JOIN\\\">Right Join Excluding Inner Join </option> <option value=\\\"OUTER JOIN EXCLUDING INNER JOIN\\\">Outer Join Excluding Inner Join </option> <option value=\\\"CROSS JOIN\\\">Cross Join</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select id=\\\"drpRightEntityAliasName\\\" ng-model=\\\"relationship.RightEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Right</option> </select> </div> </div> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtJoinConditions\\\" ng-model=\\\"relationship.JoinConditions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Example : u.UserID = r.UserID\\\"/> <span><i>on</i></span> </div> </div> </div> </div> <div ng-if=\\\"!$.dataSourceService.Entities.length\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No selected entities.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddEntityClick()\\\"> Add Entity </button> to add a entity!. </span> </div> </div> <p class=\\\"b-invalid\\\">{{$.form.error.Entities}}</p> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpJoinRelationships\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Join Relationships </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpJoinRelationships\\\" class=\\\"group-content selected-entities-diagram collapse show\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mb-4\\\" ng-click=\\\"$.onAddJoinRelationshipClick2()\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Join Relationship </button> <div ng-repeat=\\\"relationship in $.dataSourceService.JoinRelationships\\\" class=\\\"mb-2\\\"> <div class=\\\"d-flex mb-1\\\"> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.LeftEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship,1)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Left</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.JoinType\\\" class=\\\"b-input form-select\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Join</option> <option value=\\\"INNER JOIN\\\">Inner Join</option> <option value=\\\"LEFT JOIN\\\">Left Join</option> <option value=\\\"RIGHT JOIN\\\">Right Join</option> <option value=\\\"OUTER JOIN\\\">Outer Join</option> <option value=\\\"LEFT JOIN EXCLUDING INNER JOIN\\\">Left Join Excluding Inner Join </option> <option value=\\\"RIGHT JOIN EXCLUDING INNER JOIN\\\">Right Join Excluding Inner Join </option> <option value=\\\"OUTER JOIN EXCLUDING INNER JOIN\\\">Outer Join Excluding Inner Join </option> <option value=\\\"CROSS JOIN\\\">Cross Join</option> </select> </div> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"relationship.RightEntityAliasName\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities\\\" ng-change=\\\"$.onJoinRelationshipEntityChange(relationship,2)\\\" required> <option disabled=\\\"disabled\\\" value=\\\"\\\">Right</option> </select> </div> </div> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtJoinConditions\\\" ng-model=\\\"relationship.JoinConditions\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Example : u.UserID = r.UserID\\\"/> <span><i>on</i></span> </div> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.dataSourceService.JoinRelationships.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> <hr/> </div> </div> </div> </div> </div> <div ng-if=\\\"$.dataSourceService.Entities.length\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpFilters\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Filters <span ng-show=\\\"dataSourceService.Filters.length\\\">({{dataSourceService.Filters.length}})</span> </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpFilters\\\" class=\\\"group-content collapse\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Type</th> <th>Expression</th> <th>Condition Group</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"filter in $.dataSourceService.Filters\\\"> <td class=\\\"w-150\\\"> <select ng-model=\\\"filter.Type\\\" class=\\\"b-input form-select\\\"> <option disabled=\\\"disabled\\\" value=\\\"\\\">Type</option> <option ng-value=\\\"0\\\" disabled=\\\"disabled\\\">Standard</option> <option ng-value=\\\"1\\\">Custom</option> </select> </td> <td ng-if=\\\"filter.Type==0\\\"></td> <td ng-if=\\\"filter.Type==1\\\"> <input type=\\\"text\\\" ng-model=\\\"filter.CustomQuery\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Custom Query\\\" required/> </td> <td class=\\\"w-200\\\"> <input type=\\\"text\\\" ng-model=\\\"filter.ConditionGroupName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Custom Query\\\" required/> </td> <td> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.dataSourceService.Filters.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"20\\\"> <button type=\\\"button\\\" class=\\\"b-btn\\\" ng-click=\\\"$.onAddFilterClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpSortItems\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Sorting </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpSortItems\\\" class=\\\"group-content collapse\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Type</th> <th>Column Name</th> <th>Sort Type</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"sortItem in $.dataSourceService.SortItems\\\"> <td class=\\\"w-150\\\"> <select ng-model=\\\"sortItem.Type\\\" class=\\\"b-input form-select\\\"> <option disabled=\\\"disabled\\\" value=\\\"\\\">Type</option> <option ng-value=\\\"0\\\">Standard</option> <option ng-value=\\\"1\\\">Custom</option> </select> </td> <td ng-if=\\\"sortItem.Type==0\\\"> <div class=\\\"d-flex\\\"> <div class=\\\"col-4 p-0\\\"> <select ng-model=\\\"sortItem.EntityAliasName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities\\\" ng-change=\\\"$.onSortItemSelectedEntityAliasChange(sortItem)\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\">Entity</option> </select> </div> <div class=\\\"col-8 p-0\\\" ng-if=\\\"sortItem.Columns.length\\\"> <select ng-model=\\\"sortItem.ColumnName\\\" class=\\\"b-input form-select ps-2 pe-3\\\" ng-options=\\\"column.ColumnName as column.ColumnName for column in sortItem.Columns\\\" chosen placeholder-text-single=\\\"'Column'\\\"> </select> </div> </div> </td> <td ng-if=\\\"sortItem.Type==1\\\"> <input type=\\\"text\\\" ng-model=\\\"sortItem.CustomColumn\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Column Name\\\" required/> </td> <td ng-if=\\\"sortItem.Type==0\\\"> <select ng-model=\\\"sortItem.SortType\\\" class=\\\"b-input form-select\\\" chosen placeholder-text-single=\\\"'Select sort type'\\\"> <option disabled=\\\"disabled\\\" value=\\\"\\\"></option> <option value=\\\"Asc\\\">Asc</option> <option value=\\\"Desc\\\">Desc</option> </select> </td> <td> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" ng-click=\\\"$.dataSourceService.SortItems.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"20\\\"> <button type=\\\"button\\\" class=\\\"b-btn\\\" ng-click=\\\"$.onAddSortItemClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <p class=\\\"b-invalid\\\">{{$.form.error.SortItems}}</p> <div ng-if=\\\"$.service.ResultType == 'List'\\\" class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpPaging\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Paging </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpPaging\\\" class=\\\"group-content collapse\\\"> <div class=\\\"b-field\\\"> <label class=\\\"b-checkbox\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.dataSourceService.EnablePaging\\\" ng-change=\\\"$.onEnablePagingChange()\\\"/> <i class=\\\"checkbox-icon\\\"></i> Enable Paging </label> </div> <div ng-if=\\\"$.dataSourceService.EnablePaging\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Index Param</label> <select ng-model=\\\"$.dataSourceService.PageIndexParam\\\" class=\\\"b-input form-control\\\" ng-options=\\\"param.ParamName as param.ParamName for param in $.service.Params\\\"> <option value=\\\"\\\">Page Index Param</option> </select> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Page Size Param</label> <select ng-model=\\\"$.dataSourceService.PageSizeParam\\\" class=\\\"b-input form-control\\\" ng-options=\\\"param.ParamName as param.ParamName for param in $.service.Params\\\"> <option value=\\\"\\\">Page Size Param</option> </select> </div> </div> </div> </div> </div> </div> <div ng-if=\\\"$.dataSourceService.QueryType==1\\\"> <div class=\\\"b-field\\\"> <div monaco-editor ng-model=\\\"$.dataSourceService.CustomQuery\\\" class=\\\"b-input form-control b-monaco\\\" data-language=\\\"sql\\\" data-height=\\\"350px\\\" required></div> </div> </div> </div> <div id=\\\"wnSelectEntity\\\" b-custom-modal class=\\\"modal fade b-modal-dark\\\" tabindex=\\\"-1\\\"> <div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\"> Add Entity </h5> <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button> </div> <div class=\\\"modal-body\\\" ng-class=\\\"{'was-validated':$.selectedEntityForm.validated}\\\"> <div class=\\\"b-field mb-1\\\"> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" ng-model=\\\"$.searchEntities\\\" class=\\\"b-input form-control\\\" b-custom-focus=\\\"focusSearchEntity\\\" placeholder=\\\"Search by entity name\\\"/> <span><i class=\\\"codicon codicon-search\\\"></i></span> </div> </div> <div class=\\\"b-field mb-2\\\"> <div class=\\\"b-list-group\\\"> <ul class=\\\"list\\\"> <li class=\\\"list-item\\\" ng-repeat=\\\"entity in $.entities | filter:{'EntityName':$.searchEntities}\\\"> <a class=\\\"item-label\\\" ng-class=\\\"{'active':entity.IsSelected}\\\" ng-click=\\\"$.onEntityItemClick(entity)\\\">{{entity.EntityName}}</a> </li> </ul> </div> </div> <div class=\\\"b-field\\\"> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" id=\\\"txtselectedEntityAliasName\\\" ng-model=\\\"$.selectedEntity.AliasName\\\" class=\\\"b-input form-control\\\" b-custom-focus=\\\"focusEntityAliasName\\\" placeholder=\\\"Enter entity alias name\\\" required/> <span><i class=\\\"codicon codicon-bell\\\"></i></span> </div> </div> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-submit me-2\\\" ng-click=\\\"$.onSelectEntityClick()\\\" ng-disabled=\\\"$.running\\\"> <i class=\\\"codicon codicon-plus\\\"></i> Add Entity </button> <button type=\\\"button\\\" class=\\\"b-btn btn-cancel\\\" data-bs-dismiss=\\\"modal\\\"> <i class=\\\"codicon codicon-circle-slash\\\"></i> Cancel </button> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/data-source/data-source.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"create-submit-entity\\\"> <div class=\\\"d-flex justify-content-end\\\"> <div class=\\\"b-radio d-inline-block mb-3\\\" ng-model=\\\"$.submitEntityService.QueryType\\\" required> <label class=\\\"me-3\\\"> <input type=\\\"radio\\\" name=\\\"queryType{{$.submitEntityService.ServiceID}}\\\" ng-value=\\\"0\\\" ng-model=\\\"$.submitEntityService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Query Designer </label> <label> <input type=\\\"radio\\\" name=\\\"queryType{{$.submitEntityService.ServiceID}}\\\" ng-value=\\\"1\\\" ng-model=\\\"$.submitEntityService.QueryType\\\" ng-change=\\\"$.onQueryTypeChange()\\\" required/> <i class=\\\"input-helper\\\"></i> Custom Query </label> </div> </div> <div ng-if=\\\"$.submitEntityService.QueryType==0\\\"> <div class=\\\"b-radio b-required b-notify notify-warning position-relative p-3 mb-3\\\" ng-model=\\\"$.submitEntityService.ActionType\\\" required> <label class=\\\"me-3\\\"> <input id=\\\"rdActionType\\\" type=\\\"radio\\\" name=\\\"actionType\\\" ng-value=\\\"0\\\" ng-model=\\\"$.submitEntityService.ActionType\\\" ng-change=\\\"$.onActionTypeChange(0)\\\"/> <i class=\\\"input-helper\\\"></i> Insert & Update </label> <label class=\\\"me-3\\\"> <input type=\\\"radio\\\" name=\\\"actionType\\\" ng-value=\\\"1\\\" ng-model=\\\"$.submitEntityService.ActionType\\\" ng-change=\\\"$.onActionTypeChange(1)\\\"/> <i class=\\\"input-helper\\\"></i> Insert </label> <label> <input type=\\\"radio\\\" name=\\\"actionType\\\" ng-value=\\\"2\\\" ng-model=\\\"$.submitEntityService.ActionType\\\" ng-change=\\\"$.onActionTypeChange(2)\\\"/> <i class=\\\"input-helper\\\"></i> Update </label> </div> <div ng-if=\\\"$.submitEntityService.ActionType>=0\\\"> <div class=\\\"mb-3\\\"> <label class=\\\"form-label\\\">Select Entity</label> <div class=\\\"d-flex\\\"> <div class=\\\"col-6\\\"> <select id=\\\"drpEntityID\\\" ng-model=\\\"$.submitEntityService.EntityID\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.EntityID as entity.EntityName for entity in $.entities\\\" ng-change=\\\"$.onSelectedEntityChange()\\\" chosen inherit-select-classes=\\\"true\\\" placeholder-text-single=\\\"'Select entity'\\\" required> </select> </div> <div class=\\\"col-auto ms-2 me-2\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action me-2\\\" ng-click=\\\"$.onUpdateEntityColumnsClick()\\\"> <i class=\\\"codicon codicon-refresh\\\"></i> </button> </div> <div class=\\\"col-auto\\\" ng-if=\\\"$.submitEntityService.Entity\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddColumnsAsParamsClick()\\\"> Add Columns As Params </button> </div> </div> </div> <hr> <div class=\\\"row\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpDatabase\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Database </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpDatabase\\\" class=\\\"group-content collapse show\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Database Object Type</label> <select id=\\\"drpDatabaseObjectType\\\" ng-model=\\\"$.submitEntityService.DatabaseObjectType\\\" class=\\\"b-input form-select\\\" required> <option value=\\\"\\\" disabled=\\\"disabled\\\">Select database object type</option> <option ng-value=\\\"0\\\">Stored Procedure</option> <option ng-value=\\\"1\\\">Query Text</option> </select> </div> <div ng-if=\\\"$.submitEntityService.DatabaseObjectType==0\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Database Object Name</label> <div class=\\\"b-input-group\\\"> <div class=\\\"b-input form-control d-flex\\\"> <div class=\\\"col-4\\\"> <input type=\\\"text\\\" id=\\\"txtSpPrefix\\\" ng-model=\\\"$.submitEntityService.Settings.StoredProcedurePrefixName\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Prefix name\\\" required/> </div> <div class=\\\"col-8\\\"> <input type=\\\"text\\\" id=\\\"txtSpPostfix\\\" ng-model=\\\"$.submitEntityService.Settings.StoredProcedurePostfixName\\\" ng-change=\\\"$.submitEntityService.StoredProcedureNameModified=true\\\" class=\\\"b-input-nobg\\\" placeholder=\\\"Example GetProducts\\\" autocomplete=\\\"off\\\" required/> </div> </div> <span><i class=\\\"codicon codicon-table\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mt-3\\\"> <i class=\\\"codicon codicon-light-bulb\\\"></i> Check SP is selectable </button> </div> </div> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpBaseQuery\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Base Query </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpBaseQuery\\\" class=\\\"group-content\\\"> <div class=\\\"b-field\\\"> <div class=\\\"row\\\"> <div monaco-editor ng-model=\\\"$.submitEntityService.BaseQuery\\\" data-language=\\\"sql\\\" data-height=\\\"180px\\\" required> </div> <div class=\\\"sol-12\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-full mt-3\\\" ng-click=\\\"$.onResetBaseQueryClick()\\\"> Reset Query </button> </div> </div> </div> </div> </div> </div> </div> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:50px\\\"> <button class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"mb-3\\\"> <label class=\\\"form-label\\\">Select Entity</label> <div class=\\\"d-flex\\\"> <div class=\\\"col-6\\\"> <select id=\\\"drpEntityID\\\" ng-model=\\\"$.submitEntityService.EntityID\\\" class=\\\"b-input form-select\\\" ng-options=\\\"entity.EntityID as entity.EntityName for entity in $.entities\\\" ng-change=\\\"$.onSelectedEntityChange()\\\" chosen placeholder-text-single=\\\"'Select entity'\\\" required> </select> </div> <div class=\\\"col-auto ms-2 me-2\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action me-2\\\" ng-click=\\\"$.onUpdateEntityColumnsClick()\\\"> <i class=\\\"codicon codicon-refresh\\\"></i> </button> </div> <div class=\\\"col-auto\\\" ng-if=\\\"$.submitEntityService.Entity\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action\\\" ng-click=\\\"$.onAddColumnsAsParamsClick()\\\"> Add Columns As Params </button> </div> </div> </div> <hr/> <div ng-if=\\\"$.submitEntityService.Entity\\\"> <div ng-if=\\\"$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==1\\\" class=\\\"row clearfix\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpInsertColumns\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Insert Columns </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpInsertColumns\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th style=\\\"width:50px\\\"> <label class=\\\"b-checkbox ps-3 ms-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.submitEntityService.Entity.AllSelectedForInsert\\\" ng-change=\\\"$.onSelectedInsertEntityAllColumnsChange()\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </th> <th>Column Name</th> <th>Value</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"column in $.submitEntityService.Entity.InsertColumns\\\"> <td> <label class=\\\"b-checkbox ps-3 ms-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"column.IsSelected\\\" ng-change=\\\"$.onSelectedInsertEntityColumnChange(column)\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </td> <td>{{column.ColumnName}}</td> <td> <input type=\\\"text\\\" ng-model=\\\"column.ColumnValue\\\" ng-disabled=\\\"!column.IsSelected\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Enter column value\\\"/> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"5\\\"> <p class=\\\"b-invalid\\\">{{$.form.error.Entity.InsertColumns}}</p> </th> </tr> </tfoot> </table> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpInsertConditions\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Insert Conditions </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpInsertConditions\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Sql Query Condition</th> <th>Group Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"condition in $.submitEntityService.Entity.InsertConditions\\\"> <td> <div monaco-editor ng-model=\\\"condition.SqlQuery\\\" data-language=\\\"sql\\\" data-height=\\\"80px\\\" required></div> </td> <td style=\\\"width:130px\\\"> <input type=\\\"text\\\" ng-model=\\\"condition.GroupName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Enter group name\\\"/> </td> <td style=\\\"width:50px\\\"> <button class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.$.submitEntityService.Entity.InsertConditions.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.$.submitEntityService.Entity.InsertConditions.push({GroupName:'Group'+($.submitEntityService.Entity.InsertConditions.length+1)})\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> <div ng-if=\\\"$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==2\\\" class=\\\"row clearfix\\\"> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpUpdateColumns\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Update Columns </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpUpdateColumns\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th style=\\\"width:50px\\\"> <label class=\\\"b-checkbox ps-3 ms-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.submitEntityService.Entity.AllSelectedForUpdate\\\" ng-change=\\\"$.onSelectedUpdateEntityAllColumnsChange()\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </th> <th>Column Name</th> <th>Value</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"column in $.submitEntityService.Entity.UpdateColumns\\\"> <td> <label class=\\\"b-checkbox ps-3 ms-2\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"column.IsSelected\\\" ng-change=\\\"$.onSelectedUpdateEntityColumnChange(column)\\\"/> <i class=\\\"checkbox-icon\\\"></i> </label> </td> <td>{{column.ColumnName}}</td> <td> <input type=\\\"text\\\" ng-model=\\\"column.ColumnValue\\\" ng-disabled=\\\"!column.IsSelected\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Enter column value\\\"/> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"5\\\"> <p class=\\\"b-invalid\\\">{{$.form.error.Entity.UpdateColumns}}</p> </th> </tr> </tfoot> </table> </div> </div> </div> <div class=\\\"col-6\\\"> <div class=\\\"b-group\\\" ng-if=\\\"$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==2\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpUpdateConditions\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Update Conditions </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpUpdateConditions\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Sql Query Condition</th> <th>Group Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"condition in $.submitEntityService.Entity.UpdateConditions\\\"> <td> <div monaco-editor ng-model=\\\"condition.SqlQuery\\\" data-language=\\\"sql\\\" data-height=\\\"80px\\\" required></div> </td> <td style=\\\"width:130px\\\"> <input type=\\\"text\\\" ng-model=\\\"condition.GroupName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Enter group name\\\"/> </td> <td style=\\\"width:50px\\\"> <button class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.$.submitEntityService.Entity.UpdateConditions.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-action btn-sm\\\" ng-click=\\\"$.$.submitEntityService.Entity.UpdateConditions.push({GroupName:'Group'+($.submitEntityService.Entity.UpdateConditions.length+1)})\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> </div> </div> </div> <div ng-if=\\\"$.submitEntityService.QueryType==1\\\"> <div class=\\\"b-field\\\"> <div monaco-editor ng-model=\\\"$.submitEntityService.CustomQuery\\\" data-language=\\\"sql\\\" data-height=\\\"350px\\\" required></div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/submit-entity/submit-entity.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"b-btn btn-action\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Username</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Username\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">User ID</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.UserID\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/approve-user/approve-user.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"b-btn btn-action\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Username</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Username\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Password</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Password\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/login-user/login-user.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">First Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.FirstName\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Last Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.LastName\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Display Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.DisplayName\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Email</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Email\\\" autocomplete=\\\"off\\\"/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Username</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Username\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Password</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Password\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Repeat Password</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.RepeatPassword\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <div class=\\\"form-label\\\">Is Approved</div> <label class=\\\"b-switch\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$.service.Settings.IsApproved\\\"> <span class=\\\"slider\\\"></span> </label> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/register-user/register-user.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"b-btn btn-action\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash me-0\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Username</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Username\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Password</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Password\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/reset-password/reset-password.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Columns</label> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/import-excel/import-excel.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Email</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Email\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Subject</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Subject\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Body</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Body\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/send-email/send-email.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"send-sms-service\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Provider Name</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Provider\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Mobile</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Mobile\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Message</label> <div class=\\\"b-input-group\\\"> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" ng-model=\\\"$.service.Settings.Message\\\" autocomplete=\\\"off\\\" required/> <span><i class=\\\"codicon codicon-gear\\\"></i></span> </div> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Tokens</label> <div class=\\\"b-input-group\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Token Name</th> <th>Token Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Settings.Tokens | orderBy : 'TokenType'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.TokenName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.TokenType\\\" class=\\\"b-input form-control\\\" min=\\\"0\\\" max=\\\"255\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.TokenValue\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Settings.Tokens.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceTokensClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/send-sms/send-sms.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"create-service-webservice\\\"> <div class=\\\"b-group\\\"> <div class=\\\"group-header\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#grpServiceParams\\\"> <h3 class=\\\"group-label\\\"> <span class=\\\"group-icon\\\"> <i class=\\\"codicon codicon-server-process\\\"></i> </span> Service Params </h3> <span class=\\\"group-collapse\\\"> <i class=\\\"codicon codicon-chevron-up\\\"></i> </span> </div> <div id=\\\"grpServiceParams\\\" class=\\\"group-content collapse show\\\"> <table class=\\\"table table-bordered table-dark table-columns-vmiddle\\\"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"param in $.service.Params | orderBy : 'ViewOrder'\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamName\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.ParamType\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"text\\\" ng-model=\\\"param.DefaultValue\\\" class=\\\"b-input form-control\\\"/> </td> <td> <input type=\\\"number\\\" ng-model=\\\"param.ViewOrder\\\" class=\\\"b-input form-control\\\"/> </td> <td style=\\\"width:25px\\\"> <button class=\\\"btn btn-sm btn-default\\\" ng-click=\\\"$.service.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"b-btn btn-sm\\\" ng-click=\\\"$.onAddServiceParamClick()\\\"> <i class=\\\"codicon codicon-plus me-0\\\"></i> </button> </td> </tr> </tfoot> </table> <div ng-if=\\\"!$.service.Params.length&&1==2\\\" class=\\\"b-notify notify-warning mb-4\\\"> <i class=\\\"codicon codicon-info b-icon-2\\\"></i> <div class=\\\"text\\\"> <h4 class=\\\"label\\\">No service params.</h4> <span class=\\\"subtext\\\"> Click <button type=\\\"button\\\" class=\\\"b-btn btn-sm ms-2 me-2\\\" ng-click=\\\"$.onAddServiceParamClick()\\\">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class=\\\"d-flex mb-3\\\"> <div class=\\\"col-2\\\"> <select class=\\\"b-input form-select border-end-0 rounded-0 rounded-start\\\" ng-model=\\\"$.service.Settings.Method\\\"> <option value=\\\"\\\">Service method</option> <option value=\\\"GET\\\">GET</option> <option value=\\\"POST\\\">POST</option> </select> </div> <div class=\\\"col-10\\\"> <input type=\\\"text\\\" ng-model=\\\"$.service.Settings.Url\\\" class=\\\"b-input form-control rounded-0 rounded-end\\\" placeholder=\\\"Service url\\\"> </div> </div> <div class=\\\"tabs-container pb-3\\\"> <ul class=\\\"nav nav-tabs b-tab\\\" role=\\\"tablist\\\"> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link active\\\" id=\\\"params-tab{{$.service.ServiceID}}\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#params{{$.service.ServiceID}}\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"params{{$.service.ServiceID}}\\\" aria-selected=\\\"true\\\">Params</button> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link\\\" id=\\\"authorization-tab{{$.service.ServiceID}}\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#authorization{{$.service.ServiceID}}\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"authorization{{$.service.ServiceID}}\\\" aria-selected=\\\"false\\\">Authorization</button> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link\\\" id=\\\"headers-tab{{$.service.ServiceID}}\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#headers{{$.service.ServiceID}}\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"headers{{$.service.ServiceID}}\\\" aria-selected=\\\"false\\\">Headers</button> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <button class=\\\"nav-link\\\" id=\\\"body-tab{{$.service.ServiceID}}\\\" data-bs-toggle=\\\"tab\\\" data-bs-target=\\\"#body{{$.service.ServiceID}}\\\" type=\\\"button\\\" role=\\\"tab\\\" aria-controls=\\\"body{{$.service.ServiceID}}\\\" aria-selected=\\\"false\\\">Body</button> </li> </ul> <div class=\\\"tab-content p-0 mb-4\\\"> <div class=\\\"tab-pane p-5 fade show active\\\" id=\\\"params{{$.service.ServiceID}}\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"params-tab{{$.service.ServiceID}}\\\"> <div class=\\\"mt-4\\\"> <h6 class=\\\"mb-3\\\">Query Params</h6> <table class=\\\"table table-dark table-bordered b-table-light\\\"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width=\\\"45px\\\">...</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"item in $.service.Settings.Params\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"item.ParamName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Key\\\"> </td> <td> <input type=\\\"text\\\" ng-model=\\\"item.ParamValue\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Value\\\"> </td> <td> <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"$.service.Settings.Params.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"$.service.Settings.Params.push({})\\\"> <i class=\\\"codicon codicon-add\\\"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <div class=\\\"tab-pane p-5 fade\\\" id=\\\"authorization{{$.service.ServiceID}}\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"authorization-tab{{$.service.ServiceID}}\\\"> <div class=\\\"mt-4\\\"> <div class=\\\"row align-items-center\\\"> <div class=\\\"col-6 border-end\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Type</label> <select ng-model=\\\"$.service.Settings.Authorization.Type\\\" class=\\\"b-input form-select mb-2\\\"> <option value=\\\"\\\">No Auth</option> <option value=\\\"Bearer\\\">Bearer Token</option> <option value=\\\"Basic\\\">Basic Auth</option> </select> <small ng-if=\\\"$.service.Settings.Authorization.Type=='Bearer'\\\"> The authorization header will be automatically generated when you send the request. </small> <small ng-if=\\\"$.service.Settings.Authorization.Type=='Basic'\\\"> The authorization header will be automatically generated when you send the request. </small> </div> </div> <div class=\\\"col-6\\\"> <small ng-if=\\\"!$.service.Settings.Authorization.Type\\\" class=\\\"authorization-description\\\"> This request does not use any authorization. </small> <div ng-if=\\\"$.service.Settings.Authorization.Type=='Bearer'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Token</label> <textarea ng-model=\\\"$.service.Settings.Authorization.Bearer\\\" class=\\\"b-input form-control\\\" rows=\\\"2\\\" placeholder=\\\"Token\\\"></textarea> </div> </div> <div ng-if=\\\"$.service.Settings.Authorization.Type=='Basic'\\\"> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Username</label> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Username\\\" ng-model=\\\"$.service.Settings.Authorization.BasicAuth.Username\\\"> </div> <div class=\\\"b-field\\\"> <label class=\\\"form-label\\\">Password</label> <input type=\\\"password\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Password\\\" ng-model=\\\"$.service.Settings.Authorization.BasicAuth.Password\\\"> </div> </div> </div> </div> </div> </div> <div class=\\\"tab-pane p-5 fade\\\" id=\\\"headers{{$.service.ServiceID}}\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headers-tab{{$.service.ServiceID}}\\\"> <div class=\\\"mt-4\\\"> <div class=\\\"form-section theme-default\\\"> <input type=\\\"checkbox\\\" checked=\\\"checked\\\"/> <div class=\\\"header\\\"> <h6 class=\\\"pb-2\\\">Default Headers</h6> </div> <fieldset> <table class=\\\"table table-dark table-bordered b-table-light\\\"> <thead> <tr> <th width=\\\"32px\\\"></th> <th>KEY</th> <th>VALUE</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"item in $.service.Settings.Headers | filter:{IsSystem: true}\\\"> <td> <div class=\\\"b-checkbox\\\"> <label> <input type=\\\"checkbox\\\" ng-model=\\\"item.IsSelected\\\"/> <i class=\\\"input-helper\\\"></i> </label> </div> </td> <td><span>{{item.ParamName}}</span></td> <td> <input type=\\\"text\\\" ng-model=\\\"item.ParamValue\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Value\\\"/> </td> </tr> </tbody> </table> </fieldset> </div> <div class=\\\"form-section theme-default\\\"> <input type=\\\"checkbox\\\"/> <div class=\\\"header\\\"> <h6 class=\\\"pb-2\\\">Custom Headers</h6> </div> <fieldset> <table class=\\\"table table-dark table-bordered b-table-light\\\"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width=\\\"45px\\\">...</th> </tr> </thead> <tbody> <tr ng-repeat=\\\"item in $.service.Settings.Headers\\\" ng-if=\\\"!item.IsSystem\\\"> <td> <input type=\\\"text\\\" ng-model=\\\"item.ParamName\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Key\\\"> </td> <td> <input type=\\\"text\\\" ng-model=\\\"item.ParamValue\\\" class=\\\"b-input form-control\\\" placeholder=\\\"Value\\\"> </td> <td> <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"$.service.Settings.Headers.splice($index,1)\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"$.service.Settings.Headers.push({})\\\"> <i class=\\\"codicon codicon-add\\\"></i> </button> </th> </tr> </tfoot> </table> </fieldset> </div> </div> </div> <div class=\\\"tab-pane p-5 fade\\\" id=\\\"body{{$.service.ServiceID}}\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"body-tab{{$.service.ServiceID}}\\\"> <div class=\\\"mt-4\\\"> <div class=\\\"b-radio\\\"> <label class=\\\"mr-3\\\"> <input type=\\\"radio\\\" name=\\\"WebserviceBodyTab\\\" ng-value=\\\"\\\" ng-model=\\\"$.service.Settings.BodyType\\\"/> <i class=\\\"input-helper\\\"></i>none </label> <label class=\\\"mr-3\\\"> <input type=\\\"radio\\\" name=\\\"WebserviceBodyTab\\\" ng-value=\\\"'FormData'\\\" ng-model=\\\"$.service.Settings.BodyType\\\"/> <i class=\\\"input-helper\\\"></i>form-data </label> <label> <input type=\\\"radio\\\" name=\\\"WebserviceBodyTab\\\" ng-value=\\\"'Raw'\\\" ng-model=\\\"$.service.Settings.BodyType\\\"/> <i class=\\\"input-helper\\\"></i>row </label> </div> <hr class=\\\"mb-4 mt-0\\\"/> <div> <small ng-if=\\\"!$.service.Settings.BodyType\\\">this request does not have a body</small> <div ng-if=\\\"$.service.Settings.BodyType=='FormData'\\\"> <table class=\\\"table table-dark table-bordered b-table-light\\\"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width=\\\"45px\\\">...</th> </tr> </thead> <tbody> <tr> <td> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" placeholder=\\\"key\\\"> </td> <td> <input type=\\\"text\\\" class=\\\"b-input form-control\\\" placeholder=\\\"value\\\"> </td> <td> <button type=\\\"button\\\" class=\\\"btn btn-default\\\"> <i class=\\\"codicon codicon-trash text-white\\\"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan=\\\"3\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"> <i class=\\\"codicon codicon-add\\\"></i> </button> </th> </tr> </tfoot> </table> </div> <div class=\\\"mb-3\\\" ng-if=\\\"$.service.Settings.BodyType=='Raw'\\\"> <textarea ng-model=\\\"$.service.Settings.BodyRaw\\\" class=\\\"b-input form-control\\\" rows=\\\"3\\\"></textarea> </div> </div> </div> </div> </div> </div> </div>\";\n// Exports\nvar _module_exports =code;;\nvar path = 'D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/webservice/restful/restful.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","import template from \"./wizard.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport editStepWidget from \"./edit-step.html\";\r\n\r\nclass WizardFieldController {\r\n    constructor($scope, $timeout, $q) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n        this.$q = $q;\r\n\r\n        this.editStepWidget = editStepWidget;\r\n\r\n        $scope.$on(\"onGetWizardFieldPanes\", (e, task, args) => {\r\n            this.getWizardPanes.apply(this, [task, args]);\r\n        });\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n\r\n        this.field.Settings = this.field.Settings || {};\r\n        this.field.Settings.ValidationMethod = 'bWizard_onValidateMatrix';\r\n    }\r\n\r\n    onAddStepClick() {\r\n        this.workingMode = \"edit-step\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n        this.step = { IsNew: true };\r\n    }\r\n\r\n    onEditStepClick(step) {\r\n        this.stepBackup = step;\r\n        this.step = _.clone(step);\r\n\r\n        this.workingMode = \"edit-step\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n    }\r\n\r\n    onSaveStepClick() {\r\n        this.field.Settings.Steps = this.field.Settings.Steps || [];\r\n\r\n        if (this.step.IsNew) {\r\n            delete this.step.IsNew;\r\n            this.field.Settings.Steps.push(this.step);\r\n        } else {\r\n            this.field.Settings.Steps[\r\n                this.field.Settings.Steps.indexOf(this.stepBackup)\r\n            ] = this.step;\r\n        }\r\n\r\n        console.log(this.field.Settings.Steps);\r\n\r\n        let newList = [];\r\n        newList.push(...(_.orderBy(this.field.Settings.Steps, ['ViewOrder'])));\r\n\r\n        this.field.Settings.Steps = _.clone(newList);\r\n\r\n        console.log(this.field.Settings.Steps);\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onCancelStepClick() {\r\n        this.field.Settings.Steps[\r\n            this.field.Settings.Steps.indexOf(this.stepBackup)\r\n        ] = this.stepBackup;\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    disposeWorkingMode() {\r\n        this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n        this.$timeout(() => {\r\n            delete this.workingMode;\r\n        }, 200);\r\n    }\r\n\r\n    getWizardPanes(task, args) {\r\n        task.wait(() => {\r\n            const defer = this.$q.defer();\r\n            const field = args.field;\r\n            const layout = args.layout;\r\n\r\n            var panes = [];\r\n\r\n            if (layout.indexOf('[[[') >= 0) {\r\n                const itemHtml = this.getHtmlfromLayout(1, layout);\r\n                const paneHtml = this.getHtmlfromLayout(2, layout);\r\n\r\n                var index = 0;\r\n                _.forEach(field.Settings.Steps, (step) => {\r\n                    let pane = paneHtml.replace(/\\${(.[^}]+)}/gm, function(match, group) {\r\n                        return eval(group)\r\n                    });\r\n\r\n                    var item = itemHtml.replace(/\\[STEP\\]/g, `[FIELD].Settings.Steps[${index++}]`);\r\n                    item = item.replace('[STEPPANE]', pane);\r\n                    panes.push(item);\r\n                });\r\n\r\n                const renderedLayout = this.getRenderedLayout(layout, panes.join(\" \"));\r\n\r\n                defer.resolve({ type: 0, html: renderedLayout });\r\n            } else {\r\n                _.forEach(field.Settings.Steps, (step) => {\r\n                    const pane = `<div id=\"WizardStep_${step.Name}\" data-pane=\"WizardStep_${step.Name}\" data-pane-title=\"${step.Name} Pane\" data-parent-id=\"${field.FieldID}\" ng-show=\"[FIELD].Settings.CurrentStep=='${step.Name}'\" class=\"${step.PaneCssClass}\" ng-class=\"{'active':[FIELD].Settings.CurrentStep=='${step.Name}','disabled':![FIELD].Step['${step.Name}'].IsEnable}\"></div>`;\r\n\r\n                    panes.push(pane);\r\n                });\r\n\r\n                defer.resolve({ type: 1, html: panes.join(\" \") });\r\n            }\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    getHtmlfromLayout(type, layout) {\r\n        var startBroketType = type == 1 ? '-[[[' : '*[[[';\r\n        var endBroketType = type == 1 ? ']]]-' : ']]]*';\r\n\r\n        const start = layout.indexOf(startBroketType);\r\n        const end = layout.indexOf(endBroketType);\r\n        const html = layout.substr(start + 4, end - start - 4);\r\n\r\n        return html;\r\n    }\r\n\r\n    getRenderedLayout(layout, panesHtml) {\r\n        const startItemBroket = layout.indexOf('-[[[');\r\n        const endItemBroket = layout.indexOf(']]]-');\r\n        const startPaneBroket = layout.indexOf('*[[[');\r\n\r\n        const header = layout.substr(0, startItemBroket);\r\n        const footer = layout.substr(endItemBroket + 4, startPaneBroket - endItemBroket);\r\n\r\n        return header + panesHtml + footer;\r\n    }\r\n}\r\n\r\nconst WizardFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: WizardFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default WizardFieldComponent;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import template from \"./submit-entity.html\";\r\nimport { baseQuery_insert, baseQuery_insertupdate, baseQuery_update } from './sql-query-template.js';\r\n\r\nclass SubmitEntityServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        this.baseQueryInsertTemplate = baseQuery_insert;\r\n        this.baseQueryInsertUpdateTemplate = baseQuery_insertupdate;\r\n        this.baseQueryUpdateTemplate = baseQuery_update;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {\r\n        this.apiService\r\n            .getApi(\r\n                \"BusinessEngineBasicServices\",\r\n                \"Service\",\r\n                \"GetSubmitEntityService\", {\r\n                    serviceID: this.service.ServiceID,\r\n                }\r\n            )\r\n            .then((data) => {\r\n                this.submitEntityService = data;\r\n\r\n                if (!this.service.ServiceID) {\r\n                    this.submitEntityService.ActionType = undefined;\r\n\r\n                    _.filter(this.scenarios, (s) => {\r\n                        return s.ScenarioID == this.service.ScenarioID;\r\n                    }).map((s) => {\r\n                        this.submitEntityService.Settings = {\r\n                            StoredProcedurePrefixName: s.DatabaseObjectPrefix,\r\n                            StoredProcedurePostfixName: this.service.ServiceName,\r\n                        };\r\n                    });\r\n                }\r\n\r\n                _.filter(this.entities, (e) => {\r\n                    return this.submitEntityService.EntityID == e.EntityID;\r\n                }).map((ee) => {\r\n                    e.Columns = ee.Columns;\r\n                });\r\n            });\r\n    }\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                DatabaseObjectType: {\r\n                    id: \"drpDatabaseObjectType\",\r\n                    required: true,\r\n                },\r\n                ActionType: {\r\n                    id: \"rdActionType\",\r\n                    required: true,\r\n                },\r\n                EntityID: {\r\n                    id: \"drpEntityID\",\r\n                    required: true,\r\n                },\r\n                Entity: {\r\n                    required: true,\r\n                },\r\n                \"Entity.InsertColumns\": {\r\n                    rule: (value) => {\r\n                        if (\r\n                            (this.submitEntityService.ActionType == 0 ||\r\n                                this.submitEntityService.ActionType == 1) &&\r\n                            _.filter(value || [], (c) => {\r\n                                return c.IsSelected;\r\n                            }).length == 0\r\n                        )\r\n                            return \"Select column(s) for insert query.\";\r\n                        else return true;\r\n                    },\r\n                },\r\n                \"Entity.UpdateColumns\": {\r\n                    rule: (value) => {\r\n                        if (\r\n                            (this.submitEntityService.ActionType == 0 ||\r\n                                this.submitEntityService.ActionType == 2) &&\r\n                            _.filter(value || [], (c) => {\r\n                                return c.IsSelected;\r\n                            }).length == 0\r\n                        )\r\n                            return \"Select column(s) for update query.\";\r\n                        else return true;\r\n                    },\r\n                },\r\n                \"Settings.StoredProcedurePrefixName\": {\r\n                    rule: (value) => {\r\n                        if (this.submitEntityService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp prefix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPrefix\",\r\n                },\r\n                \"Settings.StoredProcedurePostfixName\": {\r\n                    rule: (value) => {\r\n                        if (this.submitEntityService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp postfix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPostfix\",\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.submitEntityService\"\r\n        );\r\n    }\r\n\r\n    onResetBaseQueryClick() {\r\n        this.submitEntityService.BaseQuery = '';\r\n        this.onActionTypeChange();\r\n    }\r\n\r\n    onQueryTypeChange() {\r\n        if (\r\n            this.submitEntityService.QueryType == 1 &&\r\n            !this.submitEntityService.CustomQuery\r\n        )\r\n            this.datasourceservice.CustomQuery =\r\n            \"CREATE PROCEDURE {Schema}.{ProcedureName}\\nAS BEGIN\\n\\t\\nEND\";\r\n    }\r\n\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    onAddColumnsAsParamsClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        _.forEach(this.submitEntityService.Entity.Columns, (c) => {\r\n            var paramName = \"@\" + c.ColumnName;\r\n            if (\r\n                _.filter(this.service.Params, (p) => {\r\n                    return p.ParamName == paramName;\r\n                }).length == 0\r\n            ) {\r\n                this.service.Params.push({\r\n                    ParamName: paramName,\r\n                    ParamType: c.ColumnType,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onSelectedEntityChange() {\r\n        _.filter(this.entities, (e) => {\r\n            return e.EntityID == this.submitEntityService.EntityID;\r\n        }).map((e) => {\r\n            this.submitEntityService.Entity = e;\r\n\r\n            this.submitEntityService.Entity.InsertColumns = [];\r\n            this.submitEntityService.Entity.UpdateColumns = [];\r\n\r\n            this.service.Params = this.service.Params || [];\r\n\r\n            _.forEach(e.Columns, (c) => {\r\n                var paramName = \"@\" + c.ColumnName;\r\n                if (\r\n                    _.filter(this.service.Params, (p) => {\r\n                        return p.ParamName == paramName;\r\n                    }).length == 0\r\n                ) {\r\n                    this.service.Params.push({\r\n                        ParamName: paramName,\r\n                        ParamType: c.ColumnType,\r\n                    });\r\n                }\r\n            });\r\n\r\n            _.filter(e.Columns, (c) => {\r\n                return c.IsPrimary;\r\n            }).map((c) => {\r\n                this.submitEntityService.Entity.PrimaryKeyParam = \"@\" + c.ColumnName;\r\n\r\n                this.submitEntityService.Entity.InsertConditions = [{\r\n                    SqlQuery: \"NOT EXISTS(\\n\\t\\tSELECT [\" +\r\n                        c.ColumnName +\r\n                        \"] FROM {Schema}.{TableName} \\n\\t\\tWHERE [\" +\r\n                        c.ColumnName +\r\n                        \"] = @\" +\r\n                        c.ColumnName +\r\n                        \"\\n\\t)\",\r\n                    GroupName: \"Group1\",\r\n                }, ];\r\n\r\n                this.submitEntityService.Entity.UpdateConditions = [{\r\n                    SqlQuery: \"[\" + c.ColumnName + \"] = @\" + c.ColumnName,\r\n                    GroupName: \"Group1\",\r\n                }, ];\r\n            });\r\n\r\n            _.forEach(e.Columns, (c) => {\r\n                if (!c.IsIdentity) {\r\n                    this.submitEntityService.Entity.InsertColumns.push(angular.copy(c));\r\n                    this.submitEntityService.Entity.UpdateColumns.push(angular.copy(c));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    onUpdateEntityColumnsClick() {\r\n        _.filter(this.entities, (e) => {\r\n            return e.EntityID == this.submitEntityService.EntityID;\r\n        }).map((e) => {\r\n            _.filter(e.Columns, (c) => {\r\n                return !c.IsIdentity;\r\n            }).map((c) => {\r\n                var result = _.filter(\r\n                    this.submitEntityService.Entity.InsertColumns,\r\n                    (i) => {\r\n                        return i.ColumnID == c.ColumnID;\r\n                    }\r\n                );\r\n                if (!result.length)\r\n                    this.submitEntityService.Entity.InsertColumns.push(angular.copy(c));\r\n\r\n                result = _.filter(\r\n                    this.submitEntityService.Entity.UpdateColumns,\r\n                    (u) => {\r\n                        return u.ColumnID == c.ColumnID;\r\n                    }\r\n                );\r\n                if (!result.length)\r\n                    this.submitEntityService.Entity.UpdateColumns.push(angular.copy(c));\r\n            });\r\n        });\r\n    }\r\n\r\n    onActionTypeChange(actionType) {\r\n        if (!this.submitEntityService.BaseQuery || this.submitEntityService.ActionType != actionType) {\r\n            switch (actionType) {\r\n                case 0:\r\n                    this.submitEntityService.BaseQuery = this.baseQueryInsertUpdateTemplate;\r\n                    break;\r\n                case 1:\r\n                    this.submitEntityService.BaseQuery = this.baseQueryInsertTemplate;\r\n                    break;\r\n                case 2:\r\n                    this.submitEntityService.BaseQuery = this.baseQueryUpdateTemplate;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onSelectedInsertEntityAllColumnsChange() {\r\n        _.forEach(this.submitEntityService.Entity.InsertColumns, (c) => {\r\n            c.IsSelected = !c.IsSelected;\r\n\r\n            this.onSelectedInsertEntityColumnChange(c);\r\n        });\r\n    }\r\n\r\n    onSelectedInsertEntityColumnChange(c) {\r\n        var paramName = \"@\" + c.ColumnName;\r\n\r\n        if (\r\n            c.IsSelected &&\r\n            _.filter(this.service.Params, (p) => {\r\n                return p.ParamName == paramName;\r\n            }).length\r\n        ) {\r\n            c.ColumnValue = paramName;\r\n        }\r\n    }\r\n\r\n    onSelectedUpdateEntityAllColumnsChange() {\r\n        _.forEach(this.submitEntityService.Entity.UpdateColumns, (c) => {\r\n            c.IsSelected = !c.IsSelected;\r\n\r\n            this.onSelectedUpdateEntityColumnChange(c);\r\n        });\r\n    }\r\n\r\n    onSelectedUpdateEntityColumnChange(c) {\r\n        var paramName = \"@\" + c.ColumnName;\r\n\r\n        if (\r\n            c.IsSelected &&\r\n            _.filter(this.service.Params, (p) => {\r\n                return p.ParamName == paramName;\r\n            }).length\r\n        ) {\r\n            c.ColumnValue = paramName;\r\n        }\r\n    }\r\n\r\n    //Service Params\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.submitEntityService);\r\n            if (this.form.valid) defer.resolve(true);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.submitEntityService.Service = this.service;\r\n            this.submitEntityService.StoredProcedureName =\r\n                this.submitEntityService.Settings.StoredProcedurePrefixName +\r\n                this.submitEntityService.Settings.StoredProcedurePostfixName;\r\n            this.submitEntityService.ServiceID = this.service.ServiceID;\r\n\r\n            this.apiService\r\n                .postApi(\r\n                    \"BusinessEngineBasicServices\",\r\n                    \"Service\",\r\n                    \"CreatesubmitEntityService\",\r\n                    this.submitEntityService, { isNewService: args.isNewService }\r\n                )\r\n                .then(\r\n                    (data) => {\r\n                        this.submitEntityService.ItemID = data;\r\n\r\n                        defer.resolve(data);\r\n                    },\r\n                    (error) => {\r\n                        defer.reject(error);\r\n                    }\r\n                );\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst SubmitEntityService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n        entities: \"<\",\r\n        viewModels: \"<\",\r\n    },\r\n    controller: SubmitEntityServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default SubmitEntityService;","export const baseQuery_insert = `\r\n    CREATE PROCEDURE {Schema}.{ProcedureName}\r\n    {SpParams}\r\n    AS BEGIN\r\n        IF {InsertConditions}\r\n        BEGIN\r\n            INSERT INTO {Schema}.[{TableName}]\r\n                    ({InsertColumns})\t\r\n                VALUES\r\n                    ({InsertParams})\r\n\r\n            SELECT Scope_Identity();\r\n        END\r\n    END\r\n`;\r\n\r\nexport const baseQuery_insertupdate = `\r\n    CREATE PROCEDURE {Schema}.{ProcedureName}\r\n    {SpParams}\r\n    AS BEGIN\r\n        IF {InsertConditions}\r\n        BEGIN\r\n            INSERT INTO {Schema}.[{TableName}]\r\n                    ({InsertColumns})\t\r\n                VALUES\r\n                    ({InsertParams})\r\n\r\n            SET {PrimaryKeyParam} = (SELECT Scope_Identity());\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            UPDATE {Schema}.{TableName} \r\n                Set\t{UpdateParams}\r\n            WHERE {UpdateConditions}\r\n        END\r\n\r\n        SELECT {PrimaryKeyParam}\r\n    END\r\n`;\r\n\r\nexport const baseQuery_update = `\r\n    CREATE PROCEDURE {Schema}.{ProcedureName}\r\n    {SpParams}\r\n    AS BEGIN\r\n        UPDATE {Schema}.{TableName} \r\n                Set\t{UpdateParams}\r\n        WHERE {UpdateConditions}\r\n    END\r\n`;","import template from \"./data-source.html\";\r\nimport { baseQuery } from './sql-query-template.js';\r\n\r\nclass DataSourceServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        this.baseQueryTemplate = baseQuery;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {\r\n        this.apiService\r\n            .getApi(\r\n                \"BusinessEngineBasicServices\",\r\n                \"Service\",\r\n                \"GetDataSourceService\", {\r\n                    serviceID: this.service.ServiceID,\r\n                }\r\n            )\r\n            .then((data) => {\r\n                this.dataSourceService = data;\r\n\r\n                if (!this.service.ServiceID) {\r\n                    this.dataSourceService.BaseQuery = this.baseQueryTemplate;\r\n\r\n                    if (this.service.ResultType == 2) {\r\n                        this.service.Params = [\r\n                            { ParamName: \"@PageIndex\", ParamType: \"int\", DefaultValue: 1 },\r\n                            { ParamName: \"@PageSize\", ParamType: \"int\", DefaultValue: 10 },\r\n                        ];\r\n\r\n                        this.dataSourceService.EnablePaging = true;\r\n                        this.dataSourceService.PageIndexParam = \"@PageIndex\";\r\n                        this.dataSourceService.PageSizeParam = \"@PageSize\";\r\n                    }\r\n\r\n                    _.filter(this.scenarios, (s) => {\r\n                        return s.ScenarioID == this.service.ScenarioID;\r\n                    }).map((s) => {\r\n                        this.dataSourceService.Settings = {\r\n                            StoredProcedurePrefixName: s.DatabaseObjectPrefix,\r\n                            StoredProcedurePostfixName: this.service.ServiceName,\r\n                        };\r\n                    });\r\n                } else if (!this.dataSourceService.BaseQuery) this.dataSourceService.BaseQuery = this.baseQueryTemplate;\r\n\r\n                (this.dataSourceService.Entities || []).forEach((e) => {\r\n                    _.filter(this.entities, (ee) => {\r\n                        return ee.EntityID == e.EntityID;\r\n                    }).map((ee) => {\r\n                        e.Columns = ee.Columns;\r\n                    });\r\n                });\r\n\r\n                (this.dataSourceService.ViewModelProperties || []).forEach((prop) => {\r\n                    this.onSelectedEntityAliasChange(prop);\r\n                });\r\n\r\n                (this.dataSourceService.SortItems || []).forEach((s) => {\r\n                    this.onSortItemSelectedEntityAliasChange(s);\r\n                });\r\n            });\r\n    }\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                DatabaseObjectType: {\r\n                    id: \"drpDatabaseObjectType\",\r\n                    required: true,\r\n                },\r\n                Entities: {\r\n                    rule: (value) => {\r\n                        if (value && value.length) {\r\n                            return true;\r\n                        }\r\n                    },\r\n                    required: true,\r\n                },\r\n                ViewModelID: {\r\n                    id: \"drpViewModelID\",\r\n                    required: true,\r\n                },\r\n                ViewModelProperties: {\r\n                    rule: (value) => {\r\n                        if (value && value.length) {\r\n                            return true;\r\n                        }\r\n                    },\r\n                },\r\n                // SortItems: {\r\n                //   rule: (value) => {\r\n                //     if (this.service.ResultType == 2 && value && value.length) {\r\n                //       return true;\r\n                //     }\r\n\r\n                //     return true;\r\n                //   },\r\n                // },\r\n                \"Settings.StoredProcedurePrefixName\": {\r\n                    rule: (value) => {\r\n                        if (this.dataSourceService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp prefix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPrefix\",\r\n                },\r\n                \"Settings.StoredProcedurePostfixName\": {\r\n                    rule: (value) => {\r\n                        if (this.dataSourceService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp postfix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPostfix\",\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.dataSourceService\"\r\n        );\r\n\r\n        this.selectedEntityForm = this.validationService.init({\r\n                EntityName: {\r\n                    required: true,\r\n                },\r\n                AliasName: {\r\n                    id: \"txtselectedEntityAliasName\",\r\n                    required: true,\r\n                },\r\n                TableName: {\r\n                    required: true,\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.selectedEntity\"\r\n        );\r\n\r\n        this.entityJoinRelationshipForm = this.validationService.init({\r\n            JoinType: {\r\n                id: \"drpJoinType\",\r\n                required: true,\r\n            },\r\n            RightEntityAliasName: {\r\n                id: \"drpRightEntityAliasName\",\r\n                required: true,\r\n            },\r\n            JoinConditions: {\r\n                rule: (value) => {\r\n                    return true;\r\n                },\r\n                id: \"txtJoinConditions\",\r\n                required: true,\r\n            },\r\n        });\r\n    }\r\n\r\n    onResetBaseQueryClick() {\r\n        this.dataSourceService.BaseQuery = this.baseQueryTemplate;\r\n    }\r\n\r\n    onQueryTypeChange() {\r\n        if (this.dataSourceService.QueryType == 1 && !this.dataSourceService.CustomQuery)\r\n            this.datasourceservice.CustomQuery = \"CREATE PROCEDURE {Schema}.{ProcedureName}\\nAS BEGIN\\n\\t\\nEND\";\r\n    }\r\n\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    onSelectedViewModelChange() {\r\n        this.onRefreshViewModelClick();\r\n    }\r\n\r\n    onRefreshViewModelClick() {\r\n        var result = [];\r\n\r\n        const viewModel = _.find(this.viewModels, (v) => {\r\n            return v.ViewModelID == this.dataSourceService.ViewModelID;\r\n        });\r\n\r\n        _.forEach(viewModel.Properties, (prop) => {\r\n            var property = {\r\n                PropertyID: prop.PropertyID,\r\n                PropertyName: prop.PropertyName,\r\n                ValueType: \"DataSource\",\r\n            };\r\n\r\n            _.filter(this.dataSourceService.ViewModelProperties, (p) => {\r\n                return p.PropertyID == prop.PropertyID;\r\n            }).map((p) => {\r\n                property.IsSelected = p.IsSelected;\r\n                property.ValueType = p.ValueType;\r\n                property.EntityAliasName = p.EntityAliasName;\r\n                property.ColumnName = p.ColumnName;\r\n                property.Value = p.Value;\r\n            });\r\n\r\n            result.push(property);\r\n        });\r\n\r\n        this.dataSourceService.ViewModelProperties = result;\r\n    }\r\n\r\n    onSelectedEntityAliasChange(prop) {\r\n        _.filter(this.dataSourceService.Entities, (e) => {\r\n            return e.AliasName == prop.EntityAliasName;\r\n        }).map((e) => {\r\n            prop.Columns = e.Columns;\r\n        });\r\n    }\r\n\r\n    onAddEntityClick() {\r\n        this.selectedEntity = {};\r\n        this.searchEntities = \"\";\r\n        this.entities.forEach((e) => {\r\n            e.IsSelected = false;\r\n        });\r\n\r\n        window[\"wnSelectEntity\"].show();\r\n\r\n        this.$timeout(() => {\r\n            this.$scope.$broadcast(\"focusSearchEntity\");\r\n        }, 500);\r\n    }\r\n\r\n    onEntityItemClick(entity) {\r\n        this.entities.forEach((e) => {\r\n            e.IsSelected = false;\r\n        });\r\n\r\n        entity.IsSelected = !entity.IsSelected;\r\n\r\n        this.selectedEntity.EntityID = entity.EntityID;\r\n        this.selectedEntity.TableName = entity.TableName;\r\n        this.selectedEntity.EntityName = entity.EntityName;\r\n        this.selectedEntity.Columns = entity.Columns;\r\n\r\n        this.$scope.$broadcast(\"focusEntityAliasName\");\r\n    }\r\n\r\n    onSelectEntityClick() {\r\n        this.selectedEntityForm.validated = true;\r\n        this.selectedEntityForm.validator(this.selectedEntity);\r\n        if (this.selectedEntityForm.valid) {\r\n            if (\r\n                _.filter(this.dataSourceService.Entities, (e) => {\r\n                    return e.AliasName == this.selectedEntity.AliasName;\r\n                }).length == 0\r\n            ) {\r\n                this.dataSourceService.Entities = this.dataSourceService.Entities || [];\r\n                this.dataSourceService.Entities.push(angular.copy(this.selectedEntity));\r\n\r\n                delete this.selectedEntity;\r\n            }\r\n\r\n            window[\"wnSelectEntity\"].hide();\r\n        }\r\n    }\r\n\r\n    onEntityExpandClick(entity) {\r\n        _.filter(this.entities, (e) => {\r\n            return e.EntityID == entity.EntityID;\r\n        }).map((e) => {\r\n            entity.Columns = e.Columns;\r\n        });\r\n    }\r\n\r\n    onDeleteEntityClick(entity, $index) {\r\n        this.dataSourceService.Entities.splice($index, 1);\r\n    }\r\n\r\n    onAddJoinRelationshipClick(entity) {\r\n        entity.JoinRelationships = entity.JoinRelationships || [];\r\n        entity.JoinRelationships.push({});\r\n    }\r\n\r\n    onAddJoinRelationshipClick2() {\r\n        this.dataSourceService.JoinRelationships =\r\n            this.dataSourceService.JoinRelationships || [];\r\n        this.dataSourceService.JoinRelationships.push({});\r\n    }\r\n\r\n    onJoinRelationshipEntityChange(relationship, type) {\r\n        _.filter(this.dataSourceService.Entities, (e) => {\r\n            return (\r\n                (type == 1 && e.AliasName == relationship.LeftEntityAliasName) ||\r\n                (type == 2 && e.AliasName == relationship.RightEntityAliasName)\r\n            );\r\n        }).map((e) => {\r\n            if (type == 1) relationship.LeftEntityTableName = e.TableName;\r\n            else if (type == 2) relationship.RightEntityTableName = e.TableName;\r\n        });\r\n    }\r\n\r\n    onAddFilterClick() {\r\n        this.dataSourceService.Filters = this.dataSourceService.Filters || [];\r\n        this.dataSourceService.Filters.push({\r\n            Type: 1,\r\n            ConditionGroupName: \"ConditionGroup\" + (this.dataSourceService.Filters.length + 1),\r\n        });\r\n    }\r\n\r\n    onAddSortItemClick() {\r\n        this.dataSourceService.SortItems = this.dataSourceService.SortItems || [];\r\n        this.dataSourceService.SortItems.push({ Type: 0, SortType: \"Asc\" });\r\n    }\r\n\r\n    onSortItemSelectedEntityAliasChange(sortItem) {\r\n        _.filter(this.dataSourceService.Entities, (e) => {\r\n            return e.AliasName == sortItem.EntityAliasName;\r\n        }).map((e) => {\r\n            sortItem.Columns = e.Columns;\r\n        });\r\n    }\r\n\r\n    onEnablePagingChange() {\r\n        if (this.dataSourceService.EnablePaging) {\r\n            if (\r\n                _.filter(this.service.Params, (p) => {\r\n                    return p.ParamName.toLowerCase() == \"@pageindex\";\r\n                }).length == 0\r\n            )\r\n                this.service.Params.push({\r\n                    ParamName: \"@PageIndex\",\r\n                    ParamType: \"int\",\r\n                    DefaultValue: 1,\r\n                    IsSystemParam: true,\r\n                });\r\n\r\n            if (\r\n                _.filter(this.service.Params, (p) => {\r\n                    return p.ParamName.toLowerCase() == \"@pagesize\";\r\n                }).length == 0\r\n            )\r\n                this.service.Params.push({\r\n                    ParamName: \"@PageSize\",\r\n                    ParamType: \"int\",\r\n                    DefaultValue: 1,\r\n                    IsSystemParam: true,\r\n                });\r\n        } else {\r\n            _.filter(this.service.Params, (p) => {\r\n                return p.ParamName.toLowerCase() == \"@pageindex\";\r\n            }).map((p) => {\r\n                this.service.Params.splice(this.service.Params.indexOf(p), 1);\r\n            });\r\n\r\n            _.filter(this.service.Params, (p) => {\r\n                return p.ParamName.toLowerCase() == \"@pagesize\";\r\n            }).map((p) => {\r\n                this.service.Params.splice(this.service.Params.indexOf(p), 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    validationJoinRelationship() {\r\n        var isValid = true;\r\n\r\n        var existsEntities = [];\r\n\r\n        (this.dataSourceService.Entities || []).forEach((e) => {\r\n            e.JoinRelationships || [].forEach((r) => {\r\n                this.entityJoinRelationshipForm.validated = true;\r\n                this.entityJoinRelationshipForm.validator(r);\r\n                if (!this.entityJoinRelationshipForm.valid ||\r\n                    existsEntities.indexOf(e.AliasName) >= 0 ||\r\n                    existsEntities.indexOf(e.RightEntityAliasName) >= 0\r\n                )\r\n                    isValid = false;\r\n\r\n                existsEntities = existsEntities.concat([\r\n                    e.AliasName,\r\n                    r.RightEntityAliasName,\r\n                ]);\r\n            });\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.dataSourceService);\r\n            if (this.form.valid && this.validationJoinRelationship())\r\n                defer.resolve(true);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.dataSourceService.Service = this.service;\r\n            this.dataSourceService.StoredProcedureName =\r\n                this.dataSourceService.Settings.StoredProcedurePrefixName +\r\n                this.dataSourceService.Settings.StoredProcedurePostfixName;\r\n            this.dataSourceService.ServiceID = this.service.ServiceID;\r\n\r\n            this.apiService\r\n                .postApi(\r\n                    \"BusinessEngineBasicServices\",\r\n                    \"Service\",\r\n                    \"CreatedataSourceService\",\r\n                    this.dataSourceService, { isNewService: args.isNewService }\r\n                )\r\n                .then(\r\n                    (data) => {\r\n                        this.dataSourceService.ItemID = data;\r\n\r\n                        defer.resolve(data);\r\n                    },\r\n                    (error) => {\r\n                        defer.reject(error);\r\n                    }\r\n                );\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst DataSourceService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n        entities: \"<\",\r\n        viewModels: \"<\",\r\n    },\r\n    controller: DataSourceServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default DataSourceService;","export const baseQuery = `\r\n    CREATE PROCEDURE {Schema}.{ProcedureName}\r\n    {SpParams}\r\n    AS BEGIN\r\n        SELECT\r\n            {SelectedColumns}[STARTPAGING],{TotalCountColumnName}[ENDPAGING]\r\n        FROM \r\n            {Entities}\r\n        [STARTPAGING]CROSS APPLY (SELECT COUNT(*) as {TotalCountColumnName} FROM {Entities} {Filters}) as {TotalCountAliasName}[ENDPAGING]\r\n        {Filters}\r\n        {SortingQuery}\r\n        {PagingQuery}\r\n    END\r\n`;","import template from \"./custom-query.html\";\r\n\r\nclass CustomQueryServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$watch('$.service.ServiceName', (newVal, oldVal) => {\r\n            if (newVal != oldVal && !this.customQueryService.Settings.StoredProcedureNameModified) this.customQueryService.Settings.StoredProcedurePostfixName = newVal;\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {\r\n        if (!this.service.ServiceID) {\r\n            this.customQueryService = {\r\n                DatabaseObjectType: 0,\r\n                Query: \"CREATE PROCEDURE {Schema}.{ProcedureName}\\nAS BEGIN\\n\\t\\nEND\",\r\n                Settings: {},\r\n            };\r\n\r\n            _.filter(this.scenarios, (s) => {\r\n                return s.ScenarioID == this.service.ScenarioID;\r\n            }).map((s) => {\r\n                this.customQueryService.Settings = {\r\n                    StoredProcedurePrefixName: s.DatabaseObjectPrefix,\r\n                    StoredProcedurePostfixName: this.service.ServiceName,\r\n                };\r\n            });\r\n        } else {\r\n            this.apiService\r\n                .getApi(\"BusinessEngineBasicServices\", \"Service\", \"GetCustomQuery\", {\r\n                    serviceID: this.service.ServiceID,\r\n                })\r\n                .then((data) => {\r\n                    this.globalService.parseJsonItems(data);\r\n                    this.customQueryService = data;\r\n                });\r\n        }\r\n    }\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                DatabaseObjectType: {\r\n                    id: \"drpDatabaseObjectType\",\r\n                    required: true,\r\n                },\r\n                Query: {\r\n                    id: \"editorSqlQuery\",\r\n                    required: true,\r\n                },\r\n                \"Settings.StoredProcedurePrefixName\": {\r\n                    rule: (value) => {\r\n                        if (this.customQueryService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp prefix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPrefix\",\r\n                },\r\n                \"Settings.StoredProcedurePostfixName\": {\r\n                    rule: (value) => {\r\n                        if (this.customQueryService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp postfix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPostfix\",\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.customQueryService\"\r\n        );\r\n    }\r\n\r\n    onGDetectServiceParams() {\r\n        this.service.Params = this.globalService.getParamsFromSqlQuery(\r\n            this.customQueryService.Query\r\n        );\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.customQueryService);\r\n            if (this.form.valid) defer.resolve(true);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            if (this.customQueryService.DatabaseObjectType == 1) {\r\n                this.service.Params = this.globalService.getParamsFromSqlQuery(\r\n                    this.customQueryService.Query\r\n                );\r\n            }\r\n\r\n            this.customQueryService.Service = this.service;\r\n            this.customQueryService.StoredProcedureName =\r\n                this.customQueryService.Settings.StoredProcedurePrefixName +\r\n                this.customQueryService.Settings.StoredProcedurePostfixName;\r\n\r\n            this.apiService\r\n                .postApi(\r\n                    \"BusinessEngineBasicServices\",\r\n                    \"Service\",\r\n                    \"CreateCustomQuery\",\r\n                    this.customQueryService, { isNewService: args.isNewService }\r\n                )\r\n                .then(\r\n                    (data) => {\r\n                        this.customQueryService.ItemID = data.ItemID;\r\n                        this.service.Params = data.ServiceParams;\r\n                        defer.resolve(data);\r\n                    },\r\n                    (error) => {\r\n                        defer.reject(error);\r\n                    }\r\n                );\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst CustomQueryService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n    },\r\n    controller: CustomQueryServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default CustomQueryService;","import template from \"./bind-entity.html\";\r\nimport { bindEntity_baseQuery } from './sql-query-template.js';\r\n\r\nclass BindEntityServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        this.baseQueryTemplate = bindEntity_baseQuery;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {\r\n        this.apiService\r\n            .getApi(\r\n                \"BusinessEngineBasicServices\",\r\n                \"Service\",\r\n                \"GetBindEntityService\", {\r\n                    serviceID: this.service.ServiceID,\r\n                }\r\n            )\r\n            .then((data) => {\r\n                this.bindEntityService = data;\r\n\r\n                if (!this.service.ServiceID) {\r\n                    this.bindEntityService.BaseQuery = this.baseQueryTemplate;\r\n\r\n                    _.filter(this.scenarios, (s) => {\r\n                        return s.ScenarioID == this.service.ScenarioID;\r\n                    }).map((s) => {\r\n                        this.bindEntityService.Settings = {\r\n                            StoredProcedurePrefixName: s.DatabaseObjectPrefix,\r\n                            StoredProcedurePostfixName: this.service.ServiceName,\r\n                        };\r\n                    });\r\n                } else if (!this.bindEntityService.BaseQuery) this.bindEntityService.BaseQuery = this.baseQueryTemplate;\r\n\r\n                (this.bindEntityService.Entities || []).forEach((e) => {\r\n                    _.filter(this.entities, (ee) => {\r\n                        return ee.EntityID == e.EntityID;\r\n                    }).map((ee) => {\r\n                        e.Columns = ee.Columns;\r\n                    });\r\n                });\r\n\r\n                (this.bindEntityService.EntityColumns || []).forEach((prop) => {\r\n                    this.onSelectedEntityAliasChange(prop);\r\n                });\r\n            });\r\n    }\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                DatabaseObjectType: {\r\n                    id: \"drpDatabaseObjectType\",\r\n                    required: true,\r\n                },\r\n                Entities: {\r\n                    rule: (value) => {\r\n                        if (value && value.length) {\r\n                            return true;\r\n                        }\r\n                    },\r\n                    required: true,\r\n                },\r\n                EntityID: {\r\n                    id: \"drpEntityID\",\r\n                    required: true,\r\n                },\r\n                EntityColumns: {\r\n                    rule: (value) => {\r\n                        if (value && value.length) {\r\n                            return true;\r\n                        }\r\n                    },\r\n                },\r\n                \"Settings.StoredProcedurePrefixName\": {\r\n                    rule: (value) => {\r\n                        if (this.bindEntityService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp prefix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPrefix\",\r\n                },\r\n                \"Settings.StoredProcedurePostfixName\": {\r\n                    rule: (value) => {\r\n                        if (this.bindEntityService.DatabaseObjectType == 0 && !value)\r\n                            return \"Sp postfix is required.!\";\r\n                        else return true;\r\n                    },\r\n                    id: \"txtSpPostfix\",\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.bindEntityService\"\r\n        );\r\n\r\n        this.selectedEntityForm = this.validationService.init({\r\n                EntityName: {\r\n                    required: true,\r\n                },\r\n                AliasName: {\r\n                    id: \"txtselectedEntityAliasName\",\r\n                    required: true,\r\n                },\r\n                TableName: {\r\n                    required: true,\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.selectedEntity\"\r\n        );\r\n\r\n        this.entityJoinRelationshipForm = this.validationService.init({\r\n            JoinType: {\r\n                id: \"drpJoinType\",\r\n                required: true,\r\n            },\r\n            RightEntityAliasName: {\r\n                id: \"drpRightEntityAliasName\",\r\n                required: true,\r\n            },\r\n            JoinConditions: {\r\n                rule: (value) => {\r\n                    return true;\r\n                },\r\n                id: \"txtJoinConditions\",\r\n                required: true,\r\n            },\r\n        });\r\n    }\r\n\r\n    onQueryTypeChange() {\r\n        if (\r\n            this.bindEntityService.QueryType == 1 &&\r\n            !this.bindEntityService.CustomQuery\r\n        )\r\n            this.datasourceservice.CustomQuery =\r\n            \"CREATE PROCEDURE {Schema}.{ProcedureName}\\nAS BEGIN\\n\\t\\nEND\";\r\n    }\r\n\r\n    onResetBaseQueryClick() {\r\n        this.bindEntityService.BaseQuery = this.baseQueryTemplate;\r\n    }\r\n\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    onSelectedEntityChange() {\r\n        this.onRefreshEntityClick();\r\n    }\r\n\r\n    onRefreshEntityClick() {\r\n        var result = [];\r\n\r\n        const entity = _.find(this.entities, (v) => {\r\n            return v.EntityID == this.bindEntityService.EntityID;\r\n        });\r\n\r\n        _.forEach(entity.Columns, (prop) => {\r\n            var column = {\r\n                ColumnID: prop.ColumnID,\r\n                ColumnName: prop.ColumnName,\r\n                ValueType: \"DataSource\",\r\n            };\r\n\r\n            _.filter(this.bindEntityService.EntityColumns, (p) => {\r\n                return p.ColumnID == prop.ColumnID;\r\n            }).map((p) => {\r\n                column.IsSelected = p.IsSelected;\r\n                column.ValueType = p.ValueType;\r\n                column.EntityAliasName = p.EntityAliasName;\r\n                column.ColumnName = p.ColumnName;\r\n                column.Value = p.Value;\r\n            });\r\n\r\n            result.push(column);\r\n        });\r\n\r\n        this.bindEntityService.EntityColumns = result;\r\n    }\r\n\r\n    onSelectedEntityAliasChange(prop) {\r\n        _.filter(this.bindEntityService.Entities, (e) => {\r\n            return e.AliasName == prop.EntityAliasName;\r\n        }).map((e) => {\r\n            prop.Columns = e.Columns;\r\n        });\r\n    }\r\n\r\n    onAddEntityClick() {\r\n        this.selectedEntity = {};\r\n        this.searchEntities = \"\";\r\n        this.entities.forEach((e) => {\r\n            e.IsSelected = false;\r\n        });\r\n\r\n        window[\"wnSelectEntity\"].show();\r\n\r\n        this.$timeout(() => {\r\n            this.$scope.$broadcast(\"focusSearchEntity\");\r\n        }, 500);\r\n    }\r\n\r\n    onEntityItemClick(entity) {\r\n        this.entities.forEach((e) => {\r\n            e.IsSelected = false;\r\n        });\r\n\r\n        entity.IsSelected = !entity.IsSelected;\r\n\r\n        this.selectedEntity.EntityID = entity.EntityID;\r\n        this.selectedEntity.TableName = entity.TableName;\r\n        this.selectedEntity.EntityName = entity.EntityName;\r\n        this.selectedEntity.Columns = entity.Columns;\r\n\r\n        this.$scope.$broadcast(\"focusEntityAliasName\");\r\n    }\r\n\r\n    onSelectEntityClick() {\r\n        this.selectedEntityForm.validated = true;\r\n        this.selectedEntityForm.validator(this.selectedEntity);\r\n        if (this.selectedEntityForm.valid) {\r\n            if (\r\n                _.filter(this.bindEntityService.Entities, (e) => {\r\n                    return e.AliasName == this.selectedEntity.AliasName;\r\n                }).length == 0\r\n            ) {\r\n                this.bindEntityService.Entities = this.bindEntityService.Entities || [];\r\n                this.bindEntityService.Entities.push(angular.copy(this.selectedEntity));\r\n\r\n                delete this.selectedEntity;\r\n            }\r\n\r\n            window[\"wnSelectEntity\"].hide();\r\n        }\r\n    }\r\n\r\n    onEntityExpandClick(entity) {\r\n        _.filter(this.entities, (e) => {\r\n            return e.EntityID == entity.EntityID;\r\n        }).map((e) => {\r\n            entity.Columns = e.Columns;\r\n        });\r\n    }\r\n\r\n    onDeleteEntityClick(entity, $index) {\r\n        this.bindEntityService.Entities.splice($index, 1);\r\n    }\r\n\r\n    onAddJoinRelationshipClick(entity) {\r\n        entity.JoinRelationships = entity.JoinRelationships || [];\r\n        entity.JoinRelationships.push({});\r\n    }\r\n\r\n    onAddJoinRelationshipClick2() {\r\n        this.bindEntityService.JoinRelationships =\r\n            this.bindEntityService.JoinRelationships || [];\r\n        this.bindEntityService.JoinRelationships.push({});\r\n    }\r\n\r\n    onJoinRelationshipEntityChange(relationship, type) {\r\n        _.filter(this.bindEntityService.Entities, (e) => {\r\n            return (\r\n                (type == 1 && e.AliasName == relationship.LeftEntityAliasName) ||\r\n                (type == 2 && e.AliasName == relationship.RightEntityAliasName)\r\n            );\r\n        }).map((e) => {\r\n            if (type == 1) relationship.LeftEntityTableName = e.TableName;\r\n            else if (type == 2) relationship.RightEntityTableName = e.TableName;\r\n        });\r\n    }\r\n\r\n    onAddFilterClick() {\r\n        this.bindEntityService.Filters = this.bindEntityService.Filters || [];\r\n        this.bindEntityService.Filters.push({\r\n            Type: 1,\r\n            ConditionGroupName: \"ConditionGroup\" + (this.bindEntityService.Filters.length + 1),\r\n        });\r\n    }\r\n\r\n    validationJoinRelationship() {\r\n        var isValid = true;\r\n\r\n        var existsEntities = [];\r\n\r\n        (this.bindEntityService.Entities || []).forEach((e) => {\r\n            e.JoinRelationships || [].forEach((r) => {\r\n                this.entityJoinRelationshipForm.validated = true;\r\n                this.entityJoinRelationshipForm.validator(r);\r\n                if (!this.entityJoinRelationshipForm.valid ||\r\n                    existsEntities.indexOf(e.AliasName) >= 0 ||\r\n                    existsEntities.indexOf(e.RightEntityAliasName) >= 0\r\n                )\r\n                    isValid = false;\r\n\r\n                existsEntities = existsEntities.concat([\r\n                    e.AliasName,\r\n                    r.RightEntityAliasName,\r\n                ]);\r\n            });\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.bindEntityService);\r\n            if (this.form.valid && this.validationJoinRelationship())\r\n                defer.resolve(true);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.bindEntityService.Service = this.service;\r\n            this.bindEntityService.StoredProcedureName = this.bindEntityService.Settings.StoredProcedurePrefixName + this.bindEntityService.Settings.StoredProcedurePostfixName;\r\n            this.bindEntityService.ServiceID = this.service.ServiceID;\r\n\r\n            this.apiService.postApi(\"BusinessEngineBasicServices\", \"Service\", \"CreateBindEntityService\", this.bindEntityService, { isNewService: args.isNewService }).then(\r\n                (data) => {\r\n                    this.bindEntityService.ItemID = data;\r\n\r\n                    defer.resolve(data);\r\n                },\r\n                (error) => {\r\n                    defer.reject(error);\r\n                }\r\n            );\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst BindEntityService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n        entities: \"<\",\r\n        entities: \"<\",\r\n    },\r\n    controller: BindEntityServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default BindEntityService;","export const bindEntity_baseQuery = `\r\n    CREATE PROCEDURE {Schema}.{ProcedureName}\r\n    {SpParams}\r\n    AS BEGIN\r\n        SELECT\r\n            {SelectedColumns}\r\n        FROM \r\n            {Entities}\r\n        {Filters}\r\n    END\r\n`;","import template from \"./login-user.html\";\r\n\r\nclass LoginUserServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Username: {\r\n          required: true,\r\n        },\r\n        Password: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.service.Settings\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service.Settings);\r\n      if (this.form.valid) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst LoginUserService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: LoginUserServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default LoginUserService;\r\n","import template from \"./register-user.html\";\r\n\r\nclass RegisterUserServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Username: {\r\n          required: true,\r\n        },\r\n        Password: {\r\n          required: true,\r\n        },\r\n        RepeatPassword: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.service.Settings\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service.Settings);\r\n      if (this.form.valid) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n\r\n  saveService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      defer.resolve(data);\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst RegisterUserService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: RegisterUserServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default RegisterUserService;\r\n","import template from \"./approve-user.html\";\r\n\r\nclass ApproveUserServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Username: {\r\n          required: true,\r\n        },\r\n        Password: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.service.Settings\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service.Settings);\r\n      if (this.form.valid) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst ApproveUserService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: ApproveUserServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ApproveUserService;\r\n","import template from \"./reset-password.html\";\r\n\r\nclass ResetPasswordServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Username: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.service.Settings\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service.Settings);\r\n      if (this.form.valid) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst ResetPasswordService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: ResetPasswordServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ResetPasswordService;\r\n","import template from \"./send-sms.html\";\r\n\r\nclass SendSmsServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() { }\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Provider: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.customQueryService\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  onAddServiceTokensClick() {\r\n    this.service.Settings.Tokens = this.service.Settings.Tokens || [];\r\n\r\n    this.service.Settings.Tokens.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service);\r\n      if (this.form.valid || 1 == 1) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n\r\n  saveService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      defer.resolve(data);\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst SendSmsService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: SendSmsServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default SendSmsService;\r\n","import template from \"./send-email.html\";\r\n\r\nclass SendEmailServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {}\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                Provider: {\r\n                    required: true,\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.customQueryService\"\r\n        );\r\n    }\r\n\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.service);\r\n            if (this.form.valid || 1 == 1) defer.resolve(true);\r\n\r\n            this.service.Settings.SaveParams = true;\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            defer.resolve(data);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst SendEmailService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n    },\r\n    controller: SendEmailServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default SendEmailService;","import template from \"./import-excel.html\";\r\n\r\nclass ImportExcelServiceController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n\r\n    $scope.$on(\"onValidateService\", (e, task, args) => {\r\n      this.validateService.apply(this, [task, args]);\r\n    });\r\n\r\n    $scope.$on(\"onSaveService\", (e, task, args) => {\r\n      this.saveService.apply(this, [task, args]);\r\n    });\r\n\r\n    this.setForm();\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n\r\n  setForm() {\r\n    this.form = this.validationService.init(\r\n      {\r\n        Provider: {\r\n          required: true,\r\n        },\r\n      },\r\n      true,\r\n      this.$scope,\r\n      \"$.customQueryService\"\r\n    );\r\n  }\r\n\r\n  onAddServiceParamClick() {\r\n    this.service.Params = this.service.Params || [];\r\n\r\n    this.service.Params.push({});\r\n  }\r\n\r\n  validateService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      this.form.validated = true;\r\n      this.form.validator(this.service);\r\n      if (this.form.valid || 1 == 1) defer.resolve(true);\r\n\r\n      this.service.Settings.SaveParams = true;\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n\r\n  saveService(task, args) {\r\n    task.wait(() => {\r\n      var defer = this.$q.defer();\r\n\r\n      defer.resolve(data);\r\n\r\n      return defer.promise;\r\n    });\r\n  }\r\n}\r\n\r\nconst ImportExcelService = {\r\n  bindings: {\r\n    service: \"<\",\r\n    scenarios: \"<\",\r\n  },\r\n  controller: ImportExcelServiceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ImportExcelService;\r\n","import template from \"./restful.html\";\r\n\r\nclass RestFulServiceController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n\r\n        $scope.$on(\"onValidateService\", (e, task, args) => {\r\n            this.validateService.apply(this, [task, args]);\r\n        });\r\n\r\n        $scope.$on(\"onSaveService\", (e, task, args) => {\r\n            this.saveService.apply(this, [task, args]);\r\n        });\r\n\r\n        this.setForm();\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {\r\n        if (!this.service.ServiceID) {\r\n            this.service.Settings.WebServiceOptions = {\r\n                Params: [],\r\n                Authorization: {\r\n                    BasicAuth: {}\r\n                },\r\n                Headers: [\r\n                    { ParamName: 'Content-Type', ParamValue: 'application/json', IsSelected: true, IsSystem: true },\r\n                    { ParamName: 'Content-Length', IsSystem: true },\r\n                    { ParamName: 'Accept', IsSystem: true },\r\n                    { ParamName: 'Connection', IsSystem: true },\r\n                    { ParamName: 'Date', IsSystem: true },\r\n                    { ParamName: 'Expect', IsSystem: true },\r\n                    { ParamName: 'Host', IsSystem: true },\r\n                    { ParamName: 'If-Modified-Since', IsSystem: true },\r\n                    { ParamName: 'Range', IsSystem: true },\r\n                    { ParamName: 'Referer', IsSystem: true },\r\n                    { ParamName: 'Transfer-Encoding', IsSystem: true },\r\n                    { ParamName: 'User-Agent', IsSystem: true },\r\n                    { ParamName: 'Proxy-Connection', IsSystem: true }\r\n                ],\r\n                BodyFormDataItems: [],\r\n            };\r\n        }\r\n    }\r\n\r\n    setForm() {\r\n        this.form = this.validationService.init({\r\n                Provider: {\r\n                    required: true,\r\n                },\r\n            },\r\n            true,\r\n            this.$scope,\r\n            \"$.customQueryService\"\r\n        );\r\n    }\r\n\r\n    onAddServiceParamClick() {\r\n        this.service.Params = this.service.Params || [];\r\n\r\n        this.service.Params.push({});\r\n    }\r\n\r\n    validateService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            this.form.validated = true;\r\n            this.form.validator(this.service);\r\n            if (this.form.valid || 1 == 1) defer.resolve(true);\r\n\r\n            this.service.Settings.SaveParams = true;\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n\r\n    saveService(task, args) {\r\n        task.wait(() => {\r\n            var defer = this.$q.defer();\r\n\r\n            defer.resolve(data);\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst RestFulService = {\r\n    bindings: {\r\n        service: \"<\",\r\n        scenarios: \"<\",\r\n    },\r\n    controller: RestFulServiceController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default RestFulService;","const __WEBPACK_NAMESPACE_OBJECT__ = _;","import template from \"./run-service.component.html\";\r\nimport _ from \"lodash\";\r\n\r\nclass DatabaseActionController {\r\n    constructor(\r\n        $scope,\r\n        $q,\r\n        $timeout,\r\n        $deferredEmit,\r\n        globalService,\r\n        apiService,\r\n        validationService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$q = $q;\r\n        this.$timeout = $timeout;\r\n        this.$deferredEmit = $deferredEmit;\r\n        this.globalService = globalService;\r\n        this.apiService = apiService;\r\n        this.validationService = validationService;\r\n    }\r\n\r\n    $onInit() {\r\n        this.onPageLoad();\r\n    }\r\n\r\n    onPageLoad() {}\r\n}\r\n\r\nconst DatabaseAction = {\r\n    bindings: {\r\n        controller: \"<\",\r\n        action: \"<\",\r\n        scenarios: \"<\",\r\n        actions: \"<\",\r\n        services: \"<\",\r\n        serviceType: \"@\",\r\n        datasource: \"@\",\r\n        variables: \"<\",\r\n        fields: \"<\",\r\n        viewModels: \"<\",\r\n    },\r\n    controller: DatabaseActionController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default DatabaseAction;","import template from \"./javascript.component.html\";\r\n\r\nclass JavascriptActionController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n}\r\n\r\nconst JavascriptAction = {\r\n  bindings: {\r\n    action: \"<\",\r\n    scenarios: \"<\",\r\n    actions: \"<\",\r\n    services: \"<\",\r\n    variables: \"<\",\r\n  },\r\n  controller: JavascriptActionController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default JavascriptAction;\r\n","import template from \"./set-variable.component.html\";\r\n\r\nclass SetVariableActionController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n}\r\n\r\nconst SetVariableAction = {\r\n  bindings: {\r\n    action: \"<\",\r\n    scenarios: \"<\",\r\n    actions: \"<\",\r\n    services: \"<\",\r\n    variables: \"<\",\r\n  },\r\n  controller: SetVariableActionController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default SetVariableAction;\r\n","import template from \"./update-field-data-source.html\";\r\n\r\nclass UpdateFieldDataSourceController {\r\n  constructor() {\r\n    \"ngInject\";\r\n  }\r\n\r\n  $onInit() {}\r\n}\r\n\r\nconst UpdateFieldDataSource = {\r\n  bindings: {\r\n    action: \"<\",\r\n    fields: \"<\",\r\n  },\r\n  controller: UpdateFieldDataSourceController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default UpdateFieldDataSource;\r\n","import template from \"./call-action.html\";\r\n\r\nclass CallActionController {\r\n  constructor(\r\n    $scope,\r\n    $q,\r\n    $timeout,\r\n    $deferredEmit,\r\n    globalService,\r\n    apiService,\r\n    validationService\r\n  ) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$deferredEmit = $deferredEmit;\r\n    this.globalService = globalService;\r\n    this.apiService = apiService;\r\n    this.validationService = validationService;\r\n  }\r\n\r\n  $onInit() {\r\n    this.onPageLoad();\r\n  }\r\n\r\n  onPageLoad() {}\r\n}\r\n\r\nconst CallAction = {\r\n  bindings: {\r\n    action: \"<\",\r\n    scenarios: \"<\",\r\n    actions: \"<\",\r\n    moduleActions: \"<\",\r\n    services: \"<\",\r\n    variables: \"<\",\r\n  },\r\n  controller: CallActionController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default CallAction;\r\n","import template from \"./group-studio.component.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass GroupFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst GroupFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: GroupFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default GroupFieldComponent;\r\n","import template from \"./textbox.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass TextboxFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst TextboxFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n    actions: \"<\",\r\n  },\r\n  controller: TextboxFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default TextboxFieldComponent;\r\n","import template from \"./textarea.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass TextareaFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst TextareaFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: TextareaFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default TextareaFieldComponent;\r\n","﻿import template from \"./editor.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass TextEditorFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst TextEditorFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: TextEditorFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default TextEditorFieldComponent;\r\n","import template from \"./content.html\";\r\n\r\nclass ContentFieldController {\r\n  constructor() {\r\n    \"ngInject\";\r\n  }\r\n\r\n  $onInit() {}\r\n}\r\n\r\nconst ContentFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: ContentFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ContentFieldComponent;\r\n","﻿import template from \"./switch-button.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass SwitchButtonFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst SwitchButtonComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: SwitchButtonFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default SwitchButtonComponent;\r\n","import template from \"./grid.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport editColumnWidget from \"./edit-column.html\";\r\n\r\nclass GridFieldController {\r\n    constructor($scope, $timeout, globalService) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n        this.globalService = globalService;\r\n\r\n        this.editColumnWidget = editColumnWidget;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n\r\n    onAddColumnClick() {\r\n        this.workingMode = \"edit-column\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n        this.column = { IsNew: true };\r\n    }\r\n\r\n    onEditColumnClick(column) {\r\n        this.columnBackup = column;\r\n        this.column = _.clone(column);\r\n\r\n        this.workingMode = \"edit-column\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n    }\r\n\r\n    onDeleteColumnClick(column) {\r\n        if (confirm(\"Are you sure for delete this column!?\")) {\r\n            this.field.Settings.Columns.splice(\r\n                this.field.Settings.Columns.indexOf(column),\r\n                1\r\n            );\r\n        }\r\n    }\r\n\r\n    onAddContentItemClick() {\r\n        this.column.ContentItems = this.column.ContentItems || [];\r\n        this.column.ContentItems.push({});\r\n    }\r\n\r\n    onShowContentItemConditionsClick(item) {\r\n        this.contentItem = item;\r\n\r\n        window[\"wnContentItemConditions\"].show();\r\n    }\r\n\r\n    onSaveContentItemConditionsClick() {\r\n        window[\"wnContentItemConditions\"].hide();\r\n    }\r\n\r\n    onColumnShowConditionsClick() {\r\n        window[\"wnColumnShowConditions\"].show();\r\n    }\r\n\r\n    onActionChange() {\r\n        this.column.ActionParams = this.column.ActionParams || [];\r\n    }\r\n\r\n    onAddActionItemClick() {\r\n        this.column.ActionItems = this.column.ActionItems || [];\r\n        this.column.ActionItems.push({});\r\n    }\r\n\r\n    onSetActionParamsClick(item) {\r\n        const action = _.find(this.actions, (a) => {\r\n            return a.ActionID == item.ActionID;\r\n        });\r\n\r\n        item.ActionParams = _.assign(\r\n            _.cloneDeep(action.Params),\r\n            item.ActionParams || []\r\n        );\r\n        this.$scope.$broadcast(\"onReinitActionParams\");\r\n\r\n        this.actionItem = item;\r\n\r\n        window[\"wnActionParams\"].show();\r\n    }\r\n\r\n    onSetShowConditionsClick(item) {\r\n        this.contentItem = item;\r\n\r\n        window[\"wnContentItemConditions\"].show();\r\n    }\r\n\r\n    onSaveColumnClick() {\r\n        this.field.Settings.Columns = this.field.Settings.Columns || [];\r\n\r\n        if (this.column.IsNew) {\r\n            delete this.column.IsNew;\r\n            this.field.Settings.Columns.push(this.column);\r\n        } else {\r\n            this.field.Settings.Columns[\r\n                this.field.Settings.Columns.indexOf(this.columnBackup)\r\n            ] = this.column;\r\n        }\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onCancelColumnClick() {\r\n        this.field.Settings.Columns[\r\n            this.field.Settings.Columns.indexOf(this.columnBackup)\r\n        ] = this.columnBackup;\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onEditFieldDataSourceClick() {\r\n        this.$scope.$emit(\"onShowFieldDataSource\", { field: this.field });\r\n    }\r\n\r\n    disposeWorkingMode() {\r\n        this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n        this.$timeout(() => {\r\n            delete this.workingMode;\r\n        }, 200);\r\n    }\r\n}\r\n\r\nconst GridFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n        actions: \"<\",\r\n    },\r\n    controller: GridFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default GridFieldComponent;","import template from \"./matrix.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport editColumnWidget from \"./edit-column.html\";\r\n\r\nclass MatrixFieldController {\r\n    constructor($scope, $timeout, globalService) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n        this.globalService = globalService;\r\n\r\n        this.editColumnWidget = editColumnWidget;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n\r\n    onAddColumnClick() {\r\n        this.workingMode = \"edit-column\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n        this.column = { IsNew: true };\r\n    }\r\n\r\n    onEditColumnClick(column) {\r\n        this.columnBackup = column;\r\n        this.column = _.clone(column);\r\n\r\n        this.workingMode = \"edit-column\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n    }\r\n\r\n    onDeleteColumnClick(column) {\r\n        if (confirm(\"Are you sure for delete this column!?\")) {\r\n            this.field.Settings.Columns.splice(\r\n                this.field.Settings.Columns.indexOf(column),\r\n                1\r\n            );\r\n        }\r\n    }\r\n\r\n    onAddContentItemClick() {\r\n        this.column.ContentItems = this.column.ContentItems || [];\r\n        this.column.ContentItems.push({});\r\n    }\r\n\r\n    onShowContentItemConditionsClick(item) {\r\n        this.contentItem = item;\r\n\r\n        window[\"wnContentItemConditions\"].show();\r\n    }\r\n\r\n    onSaveContentItemConditionsClick() {\r\n        window[\"wnContentItemConditions\"].hide();\r\n    }\r\n\r\n    onColumnShowConditionsClick() {\r\n        window[\"wnColumnShowConditions\"].show();\r\n    }\r\n\r\n    onActionChange() {\r\n        this.column.ActionParams = this.column.ActionParams || [];\r\n    }\r\n\r\n    onAddActionItemClick() {\r\n        this.column.ActionItems = this.column.ActionItems || [];\r\n        this.column.ActionItems.push({});\r\n    }\r\n\r\n    onSetActionParamsClick(item) {\r\n        const action = _.find(this.actions, (a) => {\r\n            return a.ActionID == item.ActionID;\r\n        });\r\n\r\n        item.ActionParams = _.assign(\r\n            _.cloneDeep(action.Params),\r\n            item.ActionParams || []\r\n        );\r\n        this.$scope.$broadcast(\"onReinitActionParams\");\r\n\r\n        this.actionItem = item;\r\n\r\n        window[\"wnActionParams\"].show();\r\n    }\r\n\r\n    onSaveColumnClick() {\r\n        this.field.Settings.Columns = this.field.Settings.Columns || [];\r\n\r\n        if (this.column.IsNew) {\r\n            delete this.column.IsNew;\r\n            this.field.Settings.Columns.push(this.column);\r\n        } else {\r\n            this.field.Settings.Columns[\r\n                this.field.Settings.Columns.indexOf(this.columnBackup)\r\n            ] = this.column;\r\n        }\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onCancelColumnClick() {\r\n        this.field.Settings.Columns[\r\n            this.field.Settings.Columns.indexOf(this.columnBackup)\r\n        ] = this.columnBackup;\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onEditFieldDataSourceClick() {\r\n        this.$scope.$emit(\"onShowFieldDataSource\", { field: this.field });\r\n    }\r\n\r\n    disposeWorkingMode() {\r\n        this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n        this.$timeout(() => {\r\n            delete this.workingMode;\r\n        }, 200);\r\n    }\r\n}\r\n\r\nconst MatrixFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n        actions: \"<\",\r\n    },\r\n    controller: MatrixFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default MatrixFieldComponent;","﻿import template from \"./custom-list.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport listBuilder from \"./list-builder.html\";\r\nimport customTemplate from \"./custom-template.html\";\r\n\r\nclass CustomListFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n\r\n    this.listBuilder = listBuilder;\r\n    this.customTemplate = customTemplate;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n\r\n  onShowListBuilderClick() {\r\n    window[\"wnListBuilder\"].show();\r\n  }\r\n\r\n  onShowDataSourceClick() {\r\n    this.$scope.$emit(\"onShowFieldDataSource\", { field: this.field });\r\n  }\r\n}\r\n\r\nconst CustomListFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: CustomListFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default CustomListFieldComponent;\r\n","import template from \"./tabs.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport editTabWidget from \"./edit-tab.html\";\r\n\r\nclass TabsFieldController {\r\n    constructor($scope, $timeout, $q) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n        this.$q = $q;\r\n\r\n        this.editTabWidget = editTabWidget;\r\n\r\n        $scope.$on(\"onGetTabsFieldPanes\", (e, task, args) => {\r\n            this.getTabsPanes.apply(this, [task, args]);\r\n        });\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n\r\n    onAddTabClick() {\r\n        this.workingMode = \"edit-tab\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n        this.tab = { IsNew: true };\r\n    }\r\n\r\n    onEditTabClick(tab) {\r\n        this.tabBackup = tab;\r\n        this.tab = _.clone(tab);\r\n\r\n        this.workingMode = \"edit-tab\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n    }\r\n\r\n    onSaveTabClick() {\r\n        this.field.Settings.Tabs = this.field.Settings.Tabs || [];\r\n\r\n        if (this.tab.IsNew) {\r\n            delete this.tab.IsNew;\r\n            this.field.Settings.Tabs.push(this.tab);\r\n        } else {\r\n            this.field.Settings.Tabs[\r\n                this.field.Settings.Tabs.indexOf(this.tabBackup)\r\n            ] = this.tab;\r\n        }\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    onCancelTabClick() {\r\n        this.field.Settings.Tabs[this.field.Settings.Tabs.indexOf(this.tabBackup)] =\r\n            this.tabBackup;\r\n\r\n        this.disposeWorkingMode();\r\n    }\r\n\r\n    disposeWorkingMode() {\r\n        this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n        this.$timeout(() => {\r\n            delete this.workingMode;\r\n        }, 200);\r\n    }\r\n\r\n    getTabsPanes(task, args) {\r\n        task.wait(() => {\r\n            const defer = this.$q.defer();\r\n\r\n            var panes = [];\r\n            var index = 0;\r\n            const field = args.field;\r\n            const attrs = args.attrs;\r\n\r\n            _.forEach(field.Settings.Tabs, (tab) => {\r\n                const pane = `<div data-pane=\"TabsTab_${tab.Name}\" data-pane-title=\"${\r\n          tab.Name\r\n        } Pane\" \r\n            data-parent-id=\"${\r\n              field.FieldID\r\n            }\" ng-show=\"[FIELD].Settings.CurrentTab=='${tab.Name}'\" \r\n            class=\"${\r\n              tab.PaneCssClass\r\n            }\" ng-class=\"{'active':[FIELD].Settings.CurrentTab=='${\r\n          tab.Name\r\n        }','disabled':![FIELD].Tab['${tab.Name}'].IsEnable}\"\r\n            id=\"bTab${field.FieldName}${index++}\" ${attrs ? attrs : \"\"}></div>`;\r\n\r\n                panes.push(pane);\r\n            });\r\n\r\n            defer.resolve({ type: 0, html: panes.join(\" \") });\r\n\r\n            return defer.promise;\r\n        });\r\n    }\r\n}\r\n\r\nconst TabsFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: TabsFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default TabsFieldComponent;","import template from \"./button.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass ButtonFieldController {\r\n    constructor($scope, $timeout) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n\r\n    onShowLoadingConditionsClick() {\r\n        this.field.Settings.LoadingConditions =\r\n            this.field.Settings.LoadingConditions || [];\r\n\r\n        window[\"wnButtonLoadingConditions\" + this.field.FieldName].show();\r\n    }\r\n\r\n    onAddFieldActionClick() {\r\n        this.$scope.$emit(\"onGotoPage\", {\r\n            page: \"create-action\",\r\n            parentID: this.field.FieldID,\r\n            subParams: { type: \"field\" },\r\n        });\r\n    }\r\n}\r\n\r\nconst ButtonFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: ButtonFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default ButtonFieldComponent;","import template from \"./checkbox-list.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass CheckboxListFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxListFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: CheckboxListFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default CheckboxListFieldComponent;\r\n","﻿import template from \"./chosen-dropdown.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass ChosenDropDownFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst ChosenDropDownFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: ChosenDropDownFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ChosenDropDownFieldComponent;\r\n","﻿import template from \"./select2.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass Select2FieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst Select2FieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: Select2FieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default Select2FieldComponent;\r\n","﻿import template from \"./selectize.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass SelectizeFieldController {\r\n    constructor($scope, $timeout) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nconst SelectizeFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: SelectizeFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default SelectizeFieldComponent;","﻿import template from \"./nice-select.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass NiceSelectFieldController {\r\n    constructor($scope, $timeout) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nconst NiceSelectFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: NiceSelectFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default NiceSelectFieldComponent;","﻿import template from \"./typeahead.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass TypeaheadAutocompleteFieldController {\r\n    constructor($scope, $timeout) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    $onInit() {\r\n        this.$scope.$on(\r\n            \"onBindFieldSettings_\" + this.field.FieldName,\r\n            (e, args) => {\r\n                this.field.CustomSettings = sidebarSettingsTemplate;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nconst TypeaheadAutocompleteFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: TypeaheadAutocompleteFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default TypeaheadAutocompleteFieldComponent;","﻿import template from \"./selectable-list.html\";\r\nimport editTemplatesWidget from \"./edit-templates.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass SelectableListFieldController {\r\n    constructor($scope, $timeout) {\r\n        \"ngInject\";\r\n\r\n        this.$scope = $scope;\r\n        this.$timeout = $timeout;\r\n\r\n        this.editTemplatesWidget = editTemplatesWidget;\r\n    }\r\n\r\n    $onInit() {\r\n        debugger\r\n        this.$scope.$on(\"onBindFieldSettings_\" + this.field.FieldName, (e, args) => {\r\n            debugger\r\n            this.field.CustomSettings = sidebarSettingsTemplate;\r\n        });\r\n    }\r\n\r\n    onEditTemplatesClick() {\r\n        this.workingMode = \"selectable-list-edit-templates\";\r\n        this.$scope.$emit(\"onShowRightWidget\");\r\n    }\r\n}\r\n\r\nconst SelectableListFieldComponent = {\r\n    bindings: {\r\n        field: \"<\",\r\n    },\r\n    controller: SelectableListFieldController,\r\n    controllerAs: \"$\",\r\n    templateUrl: template,\r\n};\r\n\r\nexport default SelectableListFieldComponent;","import template from \"./dashboard-menu.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass DashboardMenuFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst DashboardMenuFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: DashboardMenuFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default DashboardMenuFieldComponent;\r\n","import template from \"./dashboard-link.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass DashboardLinkFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst DashboardLinkFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: DashboardLinkFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default DashboardLinkFieldComponent;\r\n","import template from \"./upload-file.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass UploadFileFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst UploadFileFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: UploadFileFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default UploadFileFieldComponent;\r\n","import template from \"./upload-image.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass UploadImageFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst UploadImageFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: UploadImageFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default UploadImageFieldComponent;\r\n","import template from \"./property.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass PropertyFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst PropertyFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: PropertyFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default PropertyFieldComponent;\r\n","import template from \"./message-box.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass MessageBoxFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n\r\n  onAddMessageClick() {\r\n    if (this.message) return;\r\n\r\n    this.field.Settings.Messages = this.field.Settings.Messages || [];\r\n    this.field.Settings.Messages.push({\r\n      IsNew: true,\r\n      IsEdited: true,\r\n    });\r\n\r\n    this.messageIndex = this.field.Settings.Messages.length - 1;\r\n    this.message = _.clone(this.field.Settings.Messages[this.messageIndex]);\r\n\r\n    this.workingMode = \"edit-message\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n  }\r\n\r\n  onEditMessageClick(message, $index) {\r\n    if (this.message) return;\r\n\r\n    message.IsEdited = true;\r\n\r\n    this.messageIndex = $index;\r\n    this.message = _.clone(message);\r\n    this.message.IsEdited = true;\r\n    this.message.IsNew = false;\r\n\r\n    this.workingMode = \"edit-message\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n  }\r\n\r\n  onSaveMessageClick() {\r\n    this.message.IsEdited = false;\r\n\r\n    this.field.Settings.Messages[this.messageIndex] = _.clone(this.message);\r\n\r\n    delete this.message;\r\n\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onCancelEditMessageClick() {\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  disposeWorkingMode() {\r\n    this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n    this.$timeout(() => {\r\n      delete this.workingMode;\r\n    }, 200);\r\n  }\r\n}\r\n\r\nconst MessageBoxFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: MessageBoxFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default MessageBoxFieldComponent;\r\n","import template from \"./dashboard-breadcrumb.html\";\r\n\r\nclass DashboardBreadcrumbFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSetTemplateClick() {\r\n    this.workingMode = \"edit-template\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n  }\r\n\r\n  onSaveTemplateClick() {\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onCancelEditTemplateClick() {\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  disposeWorkingMode() {\r\n    this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n    this.$timeout(() => {\r\n      delete this.workingMode;\r\n    }, 200);\r\n  }\r\n}\r\n\r\nconst DashboardBreadcrumbFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: DashboardBreadcrumbFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default DashboardBreadcrumbFieldComponent;\r\n","import template from \"./persian-date-time-picker.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass PersianDateTimePickerFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst PersianDateTimePickerFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: PersianDateTimePickerFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default PersianDateTimePickerFieldComponent;\r\n","﻿import template from \"./choices-combobox.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass ChoicesComboboxFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst ChoicesComboboxFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: ChoicesComboboxFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ChoicesComboboxFieldComponent;\r\n","﻿import template from \"./leafletjs-map.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass LeafletjsMapFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst LeafletjsMapComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: LeafletjsMapFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default LeafletjsMapComponent;\r\n","import template from \"./slider.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport settingsWidget from \"./settings.html\";\r\n\r\nclass SwiperSliderFieldController {\r\n  constructor($scope, $timeout, globalService) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n    this.globalService = globalService;\r\n\r\n    this.settingsWidget = settingsWidget;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditSettingsClick() {\r\n    this.workingMode = \"edit-settings\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n  }\r\n\r\n  onSaveSettingsClick() {\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onCancelSettingsClick() {\r\n    // this.field.Settings.Columns[\r\n    //   this.field.Settings.Columns.indexOf(this.columnBackup)\r\n    // ] = this.columnBackup;\r\n\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  disposeWorkingMode() {\r\n    this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n    this.$timeout(() => {\r\n      delete this.workingMode;\r\n    }, 200);\r\n  }\r\n}\r\n\r\nconst SwiperSliderFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n    actions: \"<\",\r\n  },\r\n  controller: SwiperSliderFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default SwiperSliderFieldComponent;\r\n","import template from \"./import-excel.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass ImportExcelFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst ImportExcelFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n    actions: \"<\",\r\n  },\r\n  controller: ImportExcelFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ImportExcelFieldComponent;\r\n","﻿import template from \"./leafletjs-map-routing.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\n\r\nclass LeafletjsMapRoutingFieldController {\r\n  constructor($scope, $timeout) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n\r\n\r\n\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n        if (this.field.Settings.ToolTipFromText === undefined) {\r\n          this.field.Settings.ToolTipFromText = \"آیا از انتخاب مبدا اطمینان دارید؟\"\r\n        }\r\n\r\n        if (this.field.Settings.ToolTipToText === undefined) {\r\n          this.field.Settings.ToolTipToText = \"آیا از انتخاب مقصد اطمینان دارید؟\"\r\n        }\r\n\r\n        if (this.field.Settings.ToolTipClearText === undefined) {\r\n          this.field.Settings.ToolTipClearText = \"آیا از حذف مسیر اطمینان دارید؟\"\r\n        }\r\n\r\n        if (this.field.Settings.ToolTipOKText === undefined) {\r\n          this.field.Settings.ToolTipOKText = \"بله\"\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst LeafletjsMapRoutingComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: LeafletjsMapRoutingFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default LeafletjsMapRoutingComponent;\r\n","﻿import template from \"./chart.html\";\r\nimport sidebarSettingsTemplate from \"./sidebar-settings.html\";\r\nimport editColumnWidget from \"./edit-column.html\";\r\nimport editLabelWidget from \"./edit-label.html\";\r\n\r\nclass ChartFieldController {\r\n  constructor($scope, $timeout, globalService) {\r\n    \"ngInject\";\r\n\r\n    this.$scope = $scope;\r\n    this.$timeout = $timeout;\r\n    this.globalService = globalService;\r\n    this.editColumnWidget = editColumnWidget;\r\n    this.editLabelWidget = editLabelWidget;\r\n  }\r\n\r\n  $onInit() {\r\n    this.$scope.$on(\r\n      \"onBindFieldSettings_\" + this.field.FieldName,\r\n      (e, args) => {\r\n        this.field.CustomSettings = sidebarSettingsTemplate;\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditFieldDataSourceClick() {\r\n    this.$scope.$emit(\"onShowFieldDataSource\", { field: this.field });\r\n  }\r\n\r\n  onAddColumnClick() {\r\n    this.workingMode = \"edit-column\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n    this.column = { IsNew: true };\r\n    \r\n    \r\n    \r\n    console.log({sss:this.field.Settings.Columns.length,vv:this.column.BorderColor,ss:this.column})\r\n    switch (this.field.Settings.Columns.length) {\r\n      case 0:\r\n        this.column.BorderColor = '#36a2eb';\r\n        this.column.BackgroundColor = '#36a2eb';\r\n        break;\r\n      case 1:\r\n        this.column.BorderColor = '#ff6384';\r\n        this.column.BackgroundColor = '#ff6384';\r\n        break;\r\n      case 2:\r\n        this.column.BorderColor = '#4bc0c0';\r\n        this.column.BackgroundColor = '#4bc0c0';\r\n        break;\r\n      case 3:\r\n        this.column.BorderColor = '#ff9f40';\r\n        this.column.BackgroundColor = '#ff9f40';\r\n        break;\r\n      case 4:\r\n        this.column.BorderColor = '#9966ff';\r\n        this.column.BackgroundColor = '#9966ff';\r\n        break;\r\n      case 5:\r\n        this.column.BorderColor = '#ffcd56';\r\n        this.column.BackgroundColor = '#ffcd56';\r\n        break;\r\n      case 6:\r\n        this.column.BorderColor = '#c9cbcf';\r\n        this.column.BackgroundColor = '#c9cbcf';\r\n        break;\r\n      default:\r\n        this.column.BorderColor = '#36a2eb';\r\n        this.column.BackgroundColor = '#36a2eb';\r\n        break;\r\n    }\r\n  }\r\n\r\n  onAddLabelClick() {\r\n    this.workingMode = \"edit-label\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n\r\n    //this.customLables = { IsNew: true };\r\n  }\r\n\r\n  onSaveColumnClick() {\r\n    this.field.Settings.Columns = this.field.Settings.Columns || [];\r\n\r\n    if (this.column.IsNew) {\r\n      delete this.column.IsNew;\r\n      this.field.Settings.Columns.push(this.column);\r\n    } else {\r\n      this.field.Settings.Columns[\r\n        this.field.Settings.Columns.indexOf(this.columnBackup)\r\n      ] = this.column;\r\n    }\r\n\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onCancelColumnClick() {\r\n    this.field.Settings.Columns[\r\n      this.field.Settings.Columns.indexOf(this.columnBackup)\r\n    ] = this.columnBackup;\r\n\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onEditColumnClick(column) {\r\n    this.columnBackup = column;\r\n    this.column = _.clone(column);\r\n\r\n    this.workingMode = \"edit-column\";\r\n    this.$scope.$emit(\"onShowRightWidget\");\r\n  }\r\n\r\n  onDeleteColumnClick(column) {\r\n    if (confirm(\"Are you sure for delete this column!?\")) {\r\n      this.field.Settings.Columns.splice(\r\n        this.field.Settings.Columns.indexOf(column),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  onAddCustomLablesClick(){\r\n    this.field.Settings.CustomLables = this.field.Settings.CustomLables || [];\r\n    this.field.Settings.BindLable =this.field.Settings.BindLable || {};\r\n    this.field.Settings.CustomLables.push({});\r\n  }\r\n\r\n  onSaveLableClick() {\r\n    debugger\r\n    if (this.field.Settings.LableType == 'BindToProperty') {\r\n      this.field.Settings.BindLable = this.field.Settings.BindLable;\r\n    }\r\n    else {\r\n      this.field.Settings.CustomLables = this.field.Settings.CustomLables || [];\r\n\r\n      //if (this.customLables.IsNew) {\r\n      //delete this.customLables.IsNew;\r\n      this.field.Settings.CustomLables = this.field.Settings.CustomLables;\r\n      // } else {\r\n      //   this.field.Settings.CustomLables[\r\n      //     this.field.Settings.CustomLables.indexOf(this.customLablesBackup)\r\n      //   ] = this.customLables;\r\n      // }\r\n    }\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  onCancelLableClick() {\r\n    this.field.Settings.CustomLables[\r\n      this.field.Settings.CustomLables.indexOf(this.customLablesBackup)\r\n    ] = this.customLablesBackup;\r\n\r\n    this.disposeWorkingMode();\r\n  }\r\n\r\n  disposeWorkingMode() {\r\n    this.$scope.$emit(\"onHideRightWidget\");\r\n\r\n    this.$timeout(() => {\r\n      delete this.workingMode;\r\n    }, 200);\r\n  }\r\n}\r\n\r\n\r\n\r\nconst ChartFieldComponent = {\r\n  bindings: {\r\n    field: \"<\",\r\n  },\r\n  controller: ChartFieldController,\r\n  controllerAs: \"$\",\r\n  templateUrl: template,\r\n};\r\n\r\nexport default ChartFieldComponent;\r\n","import \"./app.css\";\r\n\r\nconst app = window[\"app\"];\r\n\r\n//  register business engine service components\r\n//database services\r\nimport SubmitEntityService from \"./services-types/database/submit-entity/submit-entity.component\";\r\nimport DataSourceService from \"./services-types/database/data-source/data-source.component\";\r\nimport CustomQueryService from \"./services-types/database/custom-qeury/custom-query.component\";\r\nimport BindEntityService from \"./services-types/database/bind-entity/bind-entity.component\";\r\n\r\n//dnn services\r\nimport LoginUserService from \"./services-types/dnn-services/login-user/login-user.component\";\r\nimport RegisterUserService from \"./services-types/dnn-services/register-user/register-user.component\";\r\nimport ApproveUserService from \"./services-types/dnn-services/approve-user/approve-user.component\";\r\nimport ResetPasswordService from \"./services-types/dnn-services/reset-password/reset-password.component\";\r\n\r\n//public services\r\nimport SendSmsService from \"./services-types/public-services/send-sms/send-sms.component\";\r\nimport SendEmailService from \"./services-types/public-services/send-email/send-email.component\";\r\nimport ImportExcelService from \"./services-types/public-services/import-excel/import-excel.component\";\r\nimport RestFulService from \"./services-types/webservice/restful/restful.component\";\r\n\r\n//  register business engine action components\r\n//database actions\r\nimport RunServiceAction from \"./action-types/run-service/run-service.component\";\r\n\r\n//programming actions\r\nimport JavascriptAction from \"./action-types/programming/javascript.component\";\r\n\r\n//form actions\r\nimport SetVariableAction from \"./action-types/form/set-variable.component\";\r\nimport UpdateFieldDataSource from \"./action-types/form/update-field-data-source.component\";\r\nimport CallAction from \"./action-types/form/call-action.component\";\r\n\r\n//  register business engine field components\r\nimport GroupFieldComponent from \"./field-types/group/group-studio.component\";\r\nimport TextboxFieldComponent from \"./field-types/textbox/textbox.component\";\r\nimport TextareaFieldComponent from \"./field-types/textarea/textarea.component\";\r\nimport TextEditorFieldComponent from \"./field-types/text-editor/editor.component\";\r\nimport ContentFieldComponent from \"./field-types/content/content.component\";\r\nimport SwitchButtonComponent from \"./field-types/switch-button/switch-button.compoment\";\r\nimport GridFieldComponent from \"./field-types/grid/grid.component\";\r\nimport MatrixFieldComponent from \"./field-types/matrix/matrix.component\";\r\nimport CustomListFieldComponent from \"./field-types/custom-list/custom-list.component\";\r\nimport WizardFieldComponent from \"./field-types/wizard/wizard.component\";\r\nimport TabsFieldComponent from \"./field-types/tabs/tabs.component\";\r\nimport ButtonFieldComponent from \"./field-types/button/button.component\";\r\nimport CheckboxListFieldComponent from \"./field-types/checkbox-list/checkbox-list.component\";\r\nimport ChosenDropDownFieldComponent from \"./field-types/chosen-dropdown/chosen-dropdown.component\";\r\nimport Select2FieldComponent from \"./field-types/select2/select2.component\";\r\nimport SelectizeFieldComponent from \"./field-types/selectize/selectize.component\";\r\nimport NiceSelectFieldComponent from \"./field-types/nice-select/nice-select.component\";\r\nimport TypeaheadAutocompleteFieldComponent from \"./field-types/typeahead-autocomplete/typeahead.component\";\r\nimport SelectableListFieldComponent from \"./field-types/selectable-list/selectable-list.component\";\r\nimport DashboardMenuFieldComponent from \"./field-types/dashboard-menu/dashboard-menu.component\";\r\nimport DashboardLinkFieldComponent from \"./field-types/dashboard-link/dashboard-link.component\";\r\nimport UploadFileFieldComponent from \"./field-types/upload-file/upload-file.component\";\r\nimport UploadImageFieldComponent from \"./field-types/upload-image/upload-image.component\";\r\nimport PropertyFieldComponent from \"./field-types/property/property.component\";\r\nimport MessageBoxFieldComponent from \"./field-types/message-box/message-box.component\";\r\nimport DashboardBreadcrumbFieldComponent from \"./field-types/dashboard-breadcrumb/dashboard-breadcrumb.component\";\r\nimport PersianDateTimePickerFieldComponent from \"./field-types/persian-date-time-picker/persian-date-time-picker.component\";\r\nimport ChoicesComboboxFieldComponent from \"./field-types/Choices-combobox/Choices-combobox.component\";\r\nimport LeafletjsMapComponent from \"./field-types/leafletjs-map/leafletjs-map.compoment\";\r\nimport SwiperSliderFieldComponent from \"./field-types/swiper-slider/slider.component\";\r\nimport ImportExcelFieldComponent from \"./field-types/import-excel/import-excel.component\";\r\nimport LeafletjsMapRoutingComponent from \"./field-types/leafletjs-map-routing/leafletjs-map-routing.compoment\";\r\nimport ChartFieldComponent from \"./field-types/chart/chart.component\";\r\n\r\napp.component(\"bServiceCustomQuery\", CustomQueryService);\r\napp.component(\"bServiceSubmitEntity\", SubmitEntityService);\r\napp.component(\"bServiceBindEntity\", BindEntityService);\r\napp.component(\"bServiceDataSource\", DataSourceService);\r\napp.component(\"bServiceSendSms\", SendSmsService);\r\napp.component(\"bServiceSendEmail\", SendEmailService);\r\napp.component(\"bServiceImportExcel\", ImportExcelService);\r\napp.component(\"bLoginUser\", LoginUserService);\r\napp.component(\"bRegisterUser\", RegisterUserService);\r\napp.component(\"bApproveUser\", ApproveUserService);\r\napp.component(\"bResetPassword\", ResetPasswordService);\r\napp.component(\"bServiceRestful\", RestFulService);\r\napp.component(\"bActionRunService\", RunServiceAction);\r\napp.component(\"bActionRunJavascript\", JavascriptAction);\r\napp.component(\"bActionSetVariable\", SetVariableAction);\r\napp.component(\"bActionCallAction\", CallAction);\r\napp.component(\"bActionUpdateFieldDataSource\", UpdateFieldDataSource);\r\napp.component(\"bFieldGroup\", GroupFieldComponent);\r\napp.component(\"bFieldTextbox\", TextboxFieldComponent);\r\napp.component(\"bFieldTextarea\", TextareaFieldComponent);\r\napp.component(\"bFieldTextEditor\", TextEditorFieldComponent);\r\napp.component(\"bFieldContent\", ContentFieldComponent);\r\napp.component(\"bFieldSwitchButton\", SwitchButtonComponent);\r\napp.component(\"bFieldGrid\", GridFieldComponent);\r\napp.component(\"bFieldMatrix\", MatrixFieldComponent);\r\napp.component(\"bFieldCustomList\", CustomListFieldComponent);\r\napp.component(\"bFieldWizard\", WizardFieldComponent);\r\napp.component(\"bFieldTabs\", TabsFieldComponent);\r\napp.component(\"bFieldButton\", ButtonFieldComponent);\r\napp.component(\"bFieldCheckboxList\", CheckboxListFieldComponent);\r\napp.component(\"bFieldChosenDropdown\", ChosenDropDownFieldComponent);\r\napp.component(\"bFieldChoisecCombobox\", ChoicesComboboxFieldComponent);\r\napp.component(\"bFieldSelect2\", Select2FieldComponent);\r\napp.component(\"bFieldSelectize\", SelectizeFieldComponent);\r\napp.component(\"bFieldNiceSelect\", NiceSelectFieldComponent);\r\napp.component(\"bFieldTypeaheadAutocomplete\", TypeaheadAutocompleteFieldComponent);\r\napp.component(\"bFieldSelectableList\", SelectableListFieldComponent);\r\napp.component(\"bFieldDashboardMenu\", DashboardMenuFieldComponent);\r\napp.component(\"bFieldDashboardLink\", DashboardLinkFieldComponent);\r\napp.component(\"bFieldUploadFile\", UploadFileFieldComponent);\r\napp.component(\"bFieldUploadImage\", UploadImageFieldComponent);\r\napp.component(\"bFieldProperty\", PropertyFieldComponent);\r\napp.component(\"bFieldMessageBox\", MessageBoxFieldComponent);\r\napp.component(\"bFieldDashboardBreadcrumb\", DashboardBreadcrumbFieldComponent);\r\napp.component(\"bFieldLeafletjsMap\", LeafletjsMapComponent);\r\napp.component(\"bFieldLeafletjsMapRouting\", LeafletjsMapRoutingComponent);\r\napp.component(\"bFieldSwiperSlider\", SwiperSliderFieldComponent);\r\napp.component(\"bFieldImportExcel\", ImportExcelFieldComponent);\r\napp.component(\r\n    \"bFieldPersianDateTimePicker\",\r\n    PersianDateTimePickerFieldComponent\r\n);\r\napp.component(\"bFieldChart\", ChartFieldComponent);"],"names":["path","window","angular","module","run","c","put","exports","WizardFieldController","constructor","$scope","$timeout","$q","this","editStepWidget","$on","e","task","args","getWizardPanes","apply","$onInit","field","FieldName","CustomSettings","Settings","ValidationMethod","onAddStepClick","workingMode","$emit","step","IsNew","onEditStepClick","stepBackup","_","clone","onSaveStepClick","Steps","push","indexOf","console","log","newList","orderBy","disposeWorkingMode","onCancelStepClick","wait","defer","layout","panes","itemHtml","getHtmlfromLayout","paneHtml","index","forEach","pane","replace","match","group","eval","item","renderedLayout","getRenderedLayout","join","resolve","type","html","Name","FieldID","PaneCssClass","promise","startBroketType","endBroketType","start","end","substr","panesHtml","startItemBroket","endItemBroket","startPaneBroket","WizardFieldComponent","bindings","controller","controllerAs","templateUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","service","scenarios","entities","viewModels","SubmitEntityServiceController","$deferredEmit","globalService","apiService","validationService","baseQueryInsertTemplate","baseQueryInsertUpdateTemplate","baseQueryUpdateTemplate","validateService","saveService","setForm","onPageLoad","getApi","serviceID","ServiceID","then","data","submitEntityService","ActionType","filter","s","ScenarioID","map","StoredProcedurePrefixName","DatabaseObjectPrefix","StoredProcedurePostfixName","ServiceName","EntityID","ee","Columns","form","init","DatabaseObjectType","id","required","Entity","rule","value","IsSelected","length","onResetBaseQueryClick","BaseQuery","onActionTypeChange","onQueryTypeChange","QueryType","CustomQuery","datasourceservice","onAddServiceParamClick","Params","onAddColumnsAsParamsClick","paramName","ColumnName","p","ParamName","ParamType","ColumnType","onSelectedEntityChange","InsertColumns","UpdateColumns","IsPrimary","PrimaryKeyParam","InsertConditions","SqlQuery","GroupName","UpdateConditions","IsIdentity","copy","onUpdateEntityColumnsClick","result","i","ColumnID","u","actionType","onSelectedInsertEntityAllColumnsChange","onSelectedInsertEntityColumnChange","ColumnValue","onSelectedUpdateEntityAllColumnsChange","onSelectedUpdateEntityColumnChange","validated","validator","valid","Service","StoredProcedureName","postApi","isNewService","ItemID","error","reject","DataSourceService","DataSourceServiceController","baseQueryTemplate","dataSourceService","ResultType","DefaultValue","EnablePaging","PageIndexParam","PageSizeParam","Entities","ViewModelProperties","onSelectedEntityAliasChange","SortItems","onSortItemSelectedEntityAliasChange","ViewModelID","selectedEntityForm","EntityName","AliasName","TableName","entityJoinRelationshipForm","JoinType","RightEntityAliasName","JoinConditions","onSelectedViewModelChange","onRefreshViewModelClick","viewModel","find","v","Properties","property","PropertyID","PropertyName","ValueType","EntityAliasName","Value","onAddEntityClick","selectedEntity","searchEntities","show","$broadcast","onEntityItemClick","entity","onSelectEntityClick","hide","onEntityExpandClick","onDeleteEntityClick","$index","splice","onAddJoinRelationshipClick","JoinRelationships","onAddJoinRelationshipClick2","onJoinRelationshipEntityChange","relationship","LeftEntityAliasName","LeftEntityTableName","RightEntityTableName","onAddFilterClick","Filters","Type","ConditionGroupName","onAddSortItemClick","SortType","sortItem","onEnablePagingChange","toLowerCase","IsSystemParam","validationJoinRelationship","isValid","existsEntities","r","concat","CustomQueryServiceController","$watch","newVal","oldVal","customQueryService","StoredProcedureNameModified","parseJsonItems","Query","onGDetectServiceParams","getParamsFromSqlQuery","ServiceParams","BindEntityServiceController","bindEntityService","EntityColumns","onRefreshEntityClick","column","LoginUserServiceController","Username","Password","SaveParams","RegisterUserServiceController","RepeatPassword","ApproveUserServiceController","ResetPasswordServiceController","SendSmsServiceController","Provider","onAddServiceTokensClick","Tokens","SendEmailServiceController","ImportExcelServiceController","RestFulServiceController","WebServiceOptions","Authorization","BasicAuth","Headers","ParamValue","IsSystem","BodyFormDataItems","action","actions","services","serviceType","datasource","variables","fields","DatabaseActionController","JavascriptActionController","SetVariableActionController","UpdateFieldDataSourceController","moduleActions","CallActionController","GroupFieldController","TextboxFieldController","TextareaFieldController","TextEditorFieldController","ContentFieldController","SwitchButtonFieldController","GridFieldController","editColumnWidget","onAddColumnClick","onEditColumnClick","columnBackup","onDeleteColumnClick","confirm","onAddContentItemClick","ContentItems","onShowContentItemConditionsClick","contentItem","onSaveContentItemConditionsClick","onColumnShowConditionsClick","onActionChange","ActionParams","onAddActionItemClick","ActionItems","onSetActionParamsClick","ActionID","assign","cloneDeep","actionItem","onSetShowConditionsClick","onSaveColumnClick","onCancelColumnClick","onEditFieldDataSourceClick","MatrixFieldController","CustomListFieldController","listBuilder","customTemplate","onShowListBuilderClick","onShowDataSourceClick","TabsFieldController","editTabWidget","getTabsPanes","onAddTabClick","tab","onEditTabClick","tabBackup","onSaveTabClick","Tabs","onCancelTabClick","attrs","ButtonFieldController","onShowLoadingConditionsClick","LoadingConditions","onAddFieldActionClick","page","parentID","subParams","CheckboxListFieldController","ChosenDropDownFieldController","Select2FieldController","SelectizeFieldController","NiceSelectFieldController","TypeaheadAutocompleteFieldController","SelectableListFieldController","editTemplatesWidget","onEditTemplatesClick","DashboardMenuFieldController","DashboardLinkFieldController","UploadFileFieldController","UploadImageFieldController","PropertyFieldController","MessageBoxFieldController","onAddMessageClick","message","Messages","IsEdited","messageIndex","onEditMessageClick","onSaveMessageClick","onCancelEditMessageClick","DashboardBreadcrumbFieldController","sidebarSettingsTemplate","onSetTemplateClick","onSaveTemplateClick","onCancelEditTemplateClick","PersianDateTimePickerFieldController","ChoicesComboboxFieldController","LeafletjsMapFieldController","SwiperSliderFieldController","settingsWidget","onEditSettingsClick","onSaveSettingsClick","onCancelSettingsClick","ImportExcelFieldController","LeafletjsMapRoutingFieldController","ToolTipFromText","ToolTipToText","ToolTipClearText","ToolTipOKText","ChartFieldController","editLabelWidget","sss","vv","BorderColor","ss","BackgroundColor","onAddLabelClick","onAddCustomLablesClick","CustomLables","BindLable","onSaveLableClick","LableType","onCancelLableClick","customLablesBackup","app","component"],"sourceRoot":""}