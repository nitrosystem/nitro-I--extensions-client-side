(()=>{var __webpack_modules__={7660:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/call-action.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label d-block">Reset Action Params</label> <label class="b-switch"> <input type="checkbox" ng-model="$.action.Settings.ResetActionParams"> <span class="slider"></span> </label> </div> <b-select-action ng-model="$.action.Settings" actions="$.moduleActions" services="$.services" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields"> </b-select-action>')}]),module.exports=path},4539:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/set-variable.component.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-property-list ng-model="$.action.Results" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-property-list>')}]),module.exports=path},6053:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/form/update-field-data-source.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Field</label> <div class="b-input-group"> <select id="drpField" ng-model="$.action.Settings.FieldID" class="b-input form-select" ng-options="field.FieldID as field.FieldName for field in $.fields" chosen placeholder-text-single="\'Select field\'" required> </select> <span><i class="codicon codicon-plus"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Page Index</label> <div monaco-editor ng-model="$.action.Settings.PageIndex" data-language="bProperties" data-one-line="true"></div> </div> <div class="b-field"> <label class="form-label">Page Size</label> <div monaco-editor ng-model="$.action.Settings.PageSize" data-language="bProperties" data-one-line="true"></div> </div>')}]),module.exports=path},3678:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/programming/javascript.component.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"<div monaco-editor ng-model=\"$.action.Settings.Code\" data-source=\"['fields','form','_b','variables','actionParams']\" data-language=\"javascript\" data-height=\"350px\" required> </div>")}]),module.exports=path},4889:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/action-types/run-service/run-service.component.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-select-service controller="$.controller" action="$.action" services="$.services" service-type="{{$.serviceType}}" data-datasource="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="$.variables" data-view-models="$.viewModels" data-fields="$.fields"></b-select-service>')}]),module.exports=path},7128:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/Choices-combobox/choices-combobox.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select ng-model="$.field.Value" class="b-input form-control" placeholder-text-single="$.field.Settings.Placeholder" chosen> <option ng-repeat="option in $.field.DataSource.Items" ng-value="option[$.field.Settings.DataSource.ValueField]"> {{option[$.field.Settings.DataSource.TextField]}}</option> </select>')}]),module.exports=path},5915:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/Choices-combobox/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Dropdown Css Class</label> <input type="text" ng-model="$.currentField.Settings.DropdownCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div>')}]),module.exports=path},2920:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/button/button.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field mb-3"> <button type="button" class="b-btn btn-action"> <i class="{{$.field.Settings.FontIcon}}"></i> {{$.field.Settings.ButtonText}} </button> </div> <div class="b-field mb-3"> <label class="form-label">Loading Conditions</label> <div class="b-input form-control position-relative" role="button" ng-click="$.onShowLoadingConditionsClick()"> <span ng-if="!$.field.Settings.LoadingConditions.length">No Loading Conditions</span> <span ng-if="$.field.Settings.LoadingConditions.length"> {{$.field.Settings.LoadingConditions.length}} Loading Conditions</span> <i class="codicon codicon-ellipsis position-absolute top-0 end-0 mt-2 me-2"></i> </div> </div> <div class="b-field"> <button type="button" class="b-btn btn-action" ng-click="$.onAddFieldActionClick()"> <i class="codicon codicon-plus"></i> Add Action </button> </div> <div id="wnButtonLoadingConditions{{$.field.FieldName}}" ng-if="$.field.Settings.LoadingConditions" b-custom-modal class="modal fade b-modal-dark" tabindex="-1"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Button Loading Conditions </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-condition-list ng-model="$.field.Settings.LoadingConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div>')}]),module.exports=path},4356:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/button/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Button Type</label> <select ng-model="$.currentField.Settings.ButtonType" class="b-input form-select" chosen required> <option value="button">Standard Button</option> <option value="submit">Submit Button</option> </select> </div> <div class="b-field" ng-if="$.currentField.Settings.ButtonType==\'button\'"> <label class="form-label">Validation Groups</label> <select ng-model="$.currentField.Settings.ValidationGroups" class="b-input form-select" ng-options="field.FieldID as field.FieldName for field in $.fields | filter: {IsGroup:true}" multiple="multiple" chosen required> </select> </div> <div class="b-field" ng-if="$.currentField.Settings.ButtonType==\'button\'"> <label class="form-label">Validation Panes</label> <select ng-model="$.currentField.Settings.ValidationPanes" class="b-input form-select" ng-options="pane.paneName as pane.paneTitle for pane in $.panes" multiple="multiple" chosen required> </select> </div> <div class="b-field"> <label class="form-label">Button Css Class</label> <input type="text" ng-model="$.currentField.Settings.ButtonCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Button Text</label> <input type="text" ng-model="$.currentField.Settings.ButtonText" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Loading Css Class</label> <input type="text" ng-model="$.currentField.Settings.LoadingCssClass" class="b-input form-control"/> </div>')}]),module.exports=path},3665:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/chart.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-table theme-gray mb-3"> <div class="table-body pt-4"> <div class="d-flex columns-name"> <div class="col-2">Title</div> <div class="col-2">Type</div> </div> <div class="d-flex table-row" ng-repeat="column in $.field.Settings.Columns | orderBy:\'ViewOrder\'" ng-style="{\'order\':($index+1)}"> <div class="col-2 my-auto"> {{column.Title}} </div> <div class="col-2 my-auto"> {{column.ColumnType}} </div> <div class="col-1"> <div class="b-multi-btns"> <button type="button" class="p-0" ng-click="$.onEditColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Edit Column"> <i class="codicon codicon-edit me-0"></i> </button> <button type="button" ng-click="$.onDeleteColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Delete Column"> <i class="codicon codicon-trash me-0"></i> </button> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddColumnClick()"> <i class="codicon codicon-plus"></i> Add Column </button> </div> <div class="table-body pt-4"> <div class="d-flex columns-name"> <div class="col-2">Lables Type<span ng-if="$.field.Settings.LableType" style="font-weight:700">: {{$.field.Settings.LableType == "CustomLable"? "Custom Lable": "Bind To Property"}}</span></div> </div> <div class="d-flex table-row" ng-if="$.field.Settings.LableType ==\'CustomLable\'"> <span ng-repeat="label in $.field.Settings.CustomLables"> {{\',\' + label.LableName}}</span> </div> <div class="d-flex table-row" ng-if="$.field.Settings.LableType ==\'BindToProperty\'"> <span>Bind to {{$.field.Settings.BindLable.Content}}</span> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddLabelClick()"> <i class="codicon codicon-plus"></i> Add Label </button> </div> </div> <div class="b-field"> <label class="form-label">Data Source</label> <div ng-if="$.field.Settings.DataSource" role="button" ng-click="$.onEditFieldDataSourceClick()"> <div class="b-notify notify-warning mb-3"> <i class="codicon codicon-combine icon-sm"></i> <div class="text"> <span class="subtext"> Type : <label ng-if="$.field.Settings.DataSource.Type==0">Standard(Static items)</label> <label ng-if="$.field.Settings.DataSource.Type==1">Use Defined List</label> <label ng-if="$.field.Settings.DataSource.Type==2">Data Source Service </label> </span> </div> </div> </div> </div> <div class="b-field" ng-if="!$.field.Settings.DataSource"> <button type="button" class="b-btn btn-action" ng-click="$.onEditFieldDataSourceClick()"> <i class="codicon codicon-plus"></i> Set Data Source </button> </div> <div ng-include="$.editColumnWidget"></div> <div ng-include="$.editLabelWidget"></div>')}]),module.exports=path},7824:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/edit-column.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-column\'" data-title="Edit Column" data-icon="notebook-template" data-subtitle="Add or edit grid column" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-7 b-splitter border-end pe-3"> <div class="b-field"> <label class="form-label">Column Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.Title" placeholder="Enter column title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Column Type</label> <div class="b-input-group"> <select ng-model="$.column.ColumnType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="BindToProperty">Bind To Property</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.column.ColumnType==\'BindToProperty\'"> <div class="b-field"> <label class="form-label">Data Type</label> <div class="b-input-group"> <select ng-model="$.column.DataType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="String">String</option> <option value="Number">Number</option> <option value="DateTime">Date Time</option> <option value="Time">Time</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.column.DataType==\'DateTime\'"> <div class="b-field"> <label class="form-label">Date Time Format</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.DateTimeFormat" placeholder="default MM/DD/YYYY" autocomplete="off" required/> <span><i class="codicon codicon-calendar"></i></span> </div> </div> </div> <div class="b-field"> <label class="form-label">Property</label> <div monaco-editor id="txtProperty" ng-model="$.column.Content" data-language="bProperties" data-one-line="true" required></div> </div> </div> </div> <div class="col-5 ps-3"> <div class="b-field"> <label class="form-label">View Order</label> <div class="b-input-group"> <input type="number" class="b-input form-control" ng-model="$.column.ViewOrder" placeholder="Enter column view order" autocomplete="off"/> <span><i class="codicon codicon-list-ordered"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Border Color</label> <div class="b-input-group"> <input type="color" class="b-input form-control" ng-model="$.column.BorderColor" placeholder="Enter border color"/> <span><i class="codicon codicon-symbol-color"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Background Color</label> <div class="b-input-group"> <input type="color" class="b-input form-control" ng-model="$.column.BackgroundColor" placeholder="Enter background color"/> <span><i class="codicon codicon-symbol-color"></i></span> </div> </div> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveColumnClick()"> <i class="codicon codicon-save"></i> Save Column </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelColumnClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget> ')}]),module.exports=path},9279:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/edit-label.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-label\'" data-title="Edit label" data-icon="notebook-template" data-subtitle="Add or edit grid column" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-12 b-splitter pe-3"> <div class="b-field"> <label class="form-label">Lable Type</label> <div class="b-input-group"> <select ng-model="$.field.Settings.LableType" class="b-input form-select" chosen placeholder-text-single="\'Select lable Type\'" required> <option value="BindToProperty">Bind To Property</option> <option value="CustomLable">Custom Lable</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.field.Settings.LableType==\'BindToProperty\'"> <div class="b-field"> <label class="form-label">Data Type</label> <div class="b-input-group"> <select ng-model="$.field.Settings.BindLable.DataType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="String">String</option> <option value="Number">Number</option> <option value="DateTime">Date Time</option> <option value="Time">Time</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.field.Settings.BindLable.DataType==\'DateTime\'"> <div class="b-field"> <label class="form-label">Date Time Format</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.field.Settings.BindLable.DateTimeFormat" placeholder="default MM/DD/YYYY" autocomplete="off" required/> <span><i class="codicon codicon-calendar"></i></span> </div> </div> </div> <div class="b-field"> <label class="form-label">Property</label> <div monaco-editor id="txtProperty" ng-model="$.field.Settings.BindLable.Content" data-language="bProperties" data-one-line="true" required></div> </div> </div> <div ng-if="$.field.Settings.LableType==\'CustomLable\'"> <div class="b-field"> <label class="form-label">Data Type</label> <div class="b-input-group"> <div id="grpCustomLable" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Lable Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.field.Settings.CustomLables | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.LableName" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.field.Settings.CustomLables.splice($index,1)"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddCustomLablesClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveLableClick()"> <i class="codicon codicon-save"></i> Save Lable </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelLableClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget> ')}]),module.exports=path},896:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chart/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Chart Type</label> <select ng-model="$.currentField.Settings.ChartType" class="b-input form-select" required> <option value="line">Line</option> <option value="bar">Bar</option> <option value="polarArea">PolarArea</option> <option value="radar">Radar</option> </select> </div> <div class="b-field"> <label class="form-label">Direction</label> <select ng-model="$.currentField.Settings.Direction" class="b-input form-select" required> <option disabled="disabled"></option> <option value="ltr">ltr</option> <option value="rtl">rtl</option> </select> </div> <div class="b-field"> <label class="form-label">Font Family</label> <input type="text" ng-model="$.currentField.Settings.FontFamily" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Size</label> <input type="number" ng-model="$.currentField.Settings.FontSize" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Border Width</label> <input type="number" ng-model="$.currentField.Settings.BorderWidth" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Tension</label> <input type="number" ng-model="$.currentField.Settings.Tension" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Radius</label> <input type="number" ng-model="$.currentField.Settings.Radius" class="b-input form-control"/> </div> ')}]),module.exports=path},5873:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/checkbox-list/checkbox-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="form-check" ng-repeat="item in $.field.DataSourceItems"> <input class="form-check-input" type="checkbox" value="" id="{{$.field.FieldName+$index}}"> <label class="form-check-label" for="{{$.field.FieldName+$index}}"> {{item.Text}} </label> </div>')}]),module.exports=path},9551:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/checkbox-list/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div>')}]),module.exports=path},339:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chosen-dropdown/chosen-dropdown.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select ng-model="$.field.Value" class="b-input form-control" placeholder-text-single="$.field.Settings.Placeholder" chosen> <option ng-repeat="option in $.field.DataSource.Items" ng-value="option[$.field.Settings.DataSource.ValueField]"> {{option[$.field.Settings.DataSource.TextField]}}</option> </select>')}]),module.exports=path},590:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/chosen-dropdown/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Dropdown Css Class</label> <input type="text" ng-model="$.currentField.Settings.DropdownCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div>')}]),module.exports=path},8128:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/content/content.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div monaco-editor ng-model="$.field.Settings.Content" data-language="html" data-height="300px" required></div>')}]),module.exports=path},863:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/custom-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<button type="button" class="b-btn btn-action me-2" ng-click="$.onShowListBuilderClick()"> List Builder </button> <button type="button" class="b-btn btn-action" ng-click="$.onShowCustomTemplateClick()"> Custom Template </button> <div ng-include="$.listBuilder"></div>')}]),module.exports=path},7172:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/custom-template.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"")}]),module.exports=path},4860:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/list-builder.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="modal fade b-modal-dark" b-custom-modal id="wnListBuilder" data-bs-focus="false" aria-hidden="true"> <div class="modal-dialog modal-fullscreen"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title" id="exampleModalToggleLabel">List Builder</h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDataSource"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Data Source </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDataSource" class="group-content collapse show"> <div ng-if="!$.field.Settings.DataSource || !$.field.Settings.DataSource.Type" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">The list data source is not selected!.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-action ms-2 me-2 d-inline-block" ng-click="$.onShowDataSourceClick()">Here</button> to set data source. </span> </div> </div> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDataSource"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Data Source </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDataSource" class="group-content collapse show"> <div style="height:2000px"></div> </div> </div> </div> <div class="modal-footer"> </div> </div> </div> </div>')}]),module.exports=path},1775:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/custom-list/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Custom List Css Class</label> <input type="text" ng-model="$.currentField.Settings.CustomListCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label>Columns</label> <div class="form-control p-relative" ng-click="onShowGridColumnsClick()"> <span ng-if="!currentField.Settings.Columns.length">No Columns</span> <span ng-if="currentField.Settings.Columns.length">Has Columns</span> <span class="more-dot">...</span> </div> </div> <div class="b-field"> <label class="form-label">Enable Paging</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.EnablePaging"/> <div class="slider"></div> </label> </div> <div class="b-field" ng-if="currentField.Settings.EnablePaging"> <label>Page Size</label> <input type="text" ng-model="$.currentField.Settings.PageSize" class="b-input form-control"/> </div>')}]),module.exports=path},4917:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-breadcrumb/dashboard-breadcrumb.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <button type="button" class="b-btn btn-action" ng-click="$.onSetTemplateClick()"> <i class="codicon codicon-plus"></i> Set Breadcrumb Template </button> </div> <b-right-widget ng-if="$.workingMode==\'edit-template\'" data-title="Edit Template" data-icon="notebook-template" data-subtitle="Breadcrumb html Template" data-await-action="$.awaitAction"> <div class="b-field"> <label class="form-label">Breadcrumb Template</label> <div monaco-editor ng-model="$.field.Settings.BreadcrumbTemplate" data-language="html" data-height="250px" required> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveTemplateClick()"> Save </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelEditTemplateClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},6203:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-link/dashboard-link.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<a href="" class="{{$.field.Settings.LinkCssClass}}"> <i class="{{$.field.Settings.FontIcon}}"></i> {{$.field.Settings.LinkText}} </a>')}]),module.exports=path},5777:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-link/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Page Name</label> <input type="text" ng-model="$.currentField.Settings.PageName" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Page Params</label> <input type="text" ng-model="$.currentField.Settings.PageParams" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Link Css Class</label> <input type="text" ng-model="$.currentField.Settings.LinkCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Link Text</label> <input type="text" ng-model="$.currentField.Settings.LinkText" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div>')}]),module.exports=path},2650:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-menu/dashboard-menu.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"")}]),module.exports=path},2658:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/dashboard-menu/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Menu Type</label> <select ng-model="$.currentField.Settings.MenuType" class="b-input form-control" chosen required> <option value="horizontal">Horizontal</option> <option value="vertical">Vertical</option> </select> </div>')}]),module.exports=path},3041:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/edit-column.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-column\'" data-title="Edit Column" data-icon="notebook-template" data-subtitle="Add or edit grid column" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-7 b-splitter border-end pe-3"> <div class="b-field"> <label class="form-label">Column Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.Title" placeholder="Enter column title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Column Type</label> <div class="b-input-group"> <select ng-model="$.column.ColumnType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="BindToProperty">Bind To Property</option> <option value="ConditionalContents">Conditional Contents</option> <option value="ActionButton">Action Button</option> <option value="ActionButtonList">Action Button List</option> <option value="DashboardPageLink">Dashboard Page Link</option> <option value="LinkUrl">Link Url</option> <option value="HtmlContent">Html Content</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.column.ColumnType==\'BindToProperty\'"> <div class="b-field"> <label class="form-label">Data Type</label> <div class="b-input-group"> <select ng-model="$.column.DataType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="String">String</option> <option value="Number">Number</option> <option value="DateTime">Date Time</option> <option value="Time">Time</option> <option value="Image">Image</option> <option value="File">File</option> <option value="Link">Link</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.column.DataType==\'Number\'"> <div class="b-field"> <label class="form-label d-block">Show Commas Separator</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.column.ShowCommasSeparator"> <span class="slider"></span> </label> </div> </div> <div ng-if="$.column.DataType==\'DateTime\'"> <div class="b-field"> <label class="form-label">Date Time Format</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.DateTimeFormat" placeholder="default MM/DD/YYYY" autocomplete="off" required/> <span><i class="codicon codicon-calendar"></i></span> </div> </div> </div> <div ng-if="$.column.DataType==\'Image\'"> <div class="b-field"> <label class="form-label">Image Type</label> <div class="b-input-group"> <select ng-model="$.column.ImageType" class="b-input form-select" chosen placeholder-text-single="\'Select image Type\'" required> <option value="JsonData">Image From Json Data</option> <option value="InternalUrl">Internal Url</option> <option value="ExternalUrl">External Url</option> <option value="FileService">Image From File Service</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div ng-if="$.column.ImageType==\'JsonData\'"> <div class="b-field"> <label class="form-label">Image Index</label> <div class="b-input-group"> <select ng-model="$.column.ImageIndex" class="b-input form-select" chosen placeholder-text-single="\'Select image Type\'" required> <option value="0">1</option> <option value="1">2</option> <option value="2">3</option> <option value="3">4</option> <option value="4">5</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Image Property</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ImageProperty" placeholder="Enter image property" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Property</label> <div monaco-editor id="txtProperty" ng-model="$.column.Content" data-language="bProperties" data-one-line="true" required></div> </div> <div class="b-field"> <label class="form-label"> Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.Icon" placeholder="Enter column icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Css Class</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.CssClass" placeholder="Enter column css class" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div ng-if="$.column.DataType==\'Image\'" class="b-field"> <label class="form-label d-block">Show default image for no Image</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.column.ShowNoImage"> <span class="slider"></span> </label> </div> <div ng-if="$.column.DataType==\'Image\' && $.column.ShowNoImage"> <div class="b-field"> <label class="form-label">Image Type</label> <div class="b-input-group"> <select ng-model="$.column.NoImageType" class="b-input form-select" chosen placeholder-text-single="\'Select no image Type\'" required> <option value="url">Image Url</option> <option value="icon">Font Icon</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div class="b-field" ng-if="$.column.ShowNoImage && $.column.NoImageType"> <label ng-if="$.column.NoImageType == \'url\'" class="form-label">No Image Url</label> <label ng-if="$.column.NoImageType == \'icon\'" class="form-label">Font Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.NoImageUrl" placeholder="Enter no image" autocomplete="off" required/> <span><i class="codicon codicon-calendar"></i></span> </div> </div> </div> </div> <div ng-if="$.column.ColumnType==\'ActionButton\'"> <div class="b-field"> <label class="form-label">Button Text</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonText" placeholder="Enter button text" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Button Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonIcon" placeholder="Enter button icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Css Class</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonCssClass" placeholder="Enter button css class" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Tooltip Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.TooltipTitle" placeholder="Enter button title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label d-block">Show Confirm Alert</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.column.ShowConfirmAlert"> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.column.ShowConfirmAlert"> <label class="form-label">Confirm Alert Text</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ConfirmAlertText" placeholder="Enter confirm alert text" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Action</label> <div class="b-input-group"> <select ng-model="$.column.ActionID" class="b-input form-select" chosen ng-options="action.ActionID as action.ActionName for action in $.actions" ng-change="$.onActionChange()" placeholder-text-single="\'Select action\'" required> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> </div> <div ng-if="$.column.ColumnType==\'ActionButtonList\'"> <div class="b-field"> <label class="form-label">Display Type</label> <div class="b-input-group"> <select ng-model="$.column.DisplayType" class="b-input form-select" chosen placeholder-text-single="\'Select display type\'" required> <option value="IconList">Icon List</option> <option value="DropdownMenu">Dropdown Menu</option> </select> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div ng-if="$.column.ColumnType==\'DashboardPageLink\'"> <div class="b-field"> <label class="form-label">Page Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.PageName" placeholder="Enter dashboard page name" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Page Params</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.PageParams" placeholder="Enter page params" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Button Text</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonText" placeholder="Enter button text" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Button Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonIcon" placeholder="Enter button icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Css Class</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ButtonCssClass" placeholder="Enter button css class" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Tooltip Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.TooltipTitle" placeholder="Enter button title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div ng-if="$.column.ColumnType==\'LinkUrl\'"> <div class="b-field"> <label class="form-label">Link Url</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.LinkUrl" placeholder="Enter link url" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div class="b-field" ng-if="$.column.ColumnType==\'HtmlContent\'"> <label class="form-label">Html Content</label> <div monaco-editor id="txtHtmlContent" ng-model="$.column.Content" data-language="html" data-height="150px" required></div> </div> </div> <div class="col-5 ps-3"> <div class="b-field"> <label class="form-label">Column Width</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.Width" placeholder="Enter column width" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Header Css</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.HeaderCssClass" placeholder="Enter column css class" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Header Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.HeaderIcon" placeholder="Enter column icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">View Order</label> <div class="b-input-group"> <input type="number" class="b-input form-control" ng-model="$.column.ViewOrder" placeholder="Enter column view order" autocomplete="off"/> <span><i class="codicon codicon-list-ordered"></i></span> </div> </div> <div class="b-field"> <label class="form-label d-block">Hide Column Title</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.column.IsHideColumnTitle"> <span class="slider"></span> </label> </div> <div class="b-field"> <label class="form-label d-block">Show In Row Details</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.column.ShowInRowDetails"> <span class="slider"></span> </label> </div> <button type="button" ng-click="$.onColumnShowConditionsClick()" class="b-btn btn-action"> <i class="codicon codicon-gear"></i> Column Show Conditions </button> </div> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ActionButton\' && $.column.ActionID && $.column.ActionParams"> <b-action-param-list params="$.column.ActionParams" data-action-id="$.column.ActionID" data-actions="$.actions" data-source="[\'fields\',\'form\',\'variables\']" data-variables="$.variables" data-fields="$.fields"> </b-action-param-list> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ConditionalContents\'"> <div class="b-table theme-gray"> <div class="table-body p-0"> <div class="d-flex columns-name p-2"> <div class="col-5">Content</div> <div class="col-2">Css Class</div> <div class="col-2">Icon</div> <div class="col-2">Conditions</div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="item in $.column.ContentItems"> <div class="col-5 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Content"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.CssClass"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Icon"/> </div> <div class="col-2 my-auto"> <button type="button" ng-if="!item.Conditions.length" ng-click="$.onShowContentItemConditionsClick(item)" class="b-btn btn-action btn-sm"> <i class="codicon codicon-plus me-0"></i> </button> <button type="button" ng-if="item.Conditions.length" ng-click="$.onShowContentItemConditionsClick(item)" class="b-btn btn-action btn-sm"> {{item.Conditions.length}} Conditions </button> </div> <div class="col-2 my-auto"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.column.ContentItems.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.onAddContentItemClick()"> <i class="codicon codicon-plus me-0"></i> </button> </div> </div> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ActionButtonList\'"> <div class="b-table theme-gray"> <div class="table-body p-0"> <div class="d-flex columns-name p-2"> <div class="col-4">Action</div> <div class="col-3">Text</div> <div class="col-2">Css Class</div> <div class="col-2">Icon</div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="item in $.column.ActionItems"> <div class="col-4 my-auto"> <select ng-model="item.ActionID" class="b-input form-select" chosen ng-options="action.ActionID as action.ActionName for action in $.actions" placeholder-text-single="\'Select action\'" required> </select> </div> <div class="col-3 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Text"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.CssClass"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Icon"/> </div> <div class="col-2 my-auto"> <button type="button" class="b-btn btn-action btn-sm" data-bs-toggle="dropdown" aria-expanded="false"> <i class="codicon codicon-kebab-vertical me-0"></i> </button> <div class="dropdown-menu b-dropdown-menu"> <a class="dropdown-item" href="" ng-if="item.ActionID" ng-click="$.onSetActionParamsClick(item)"> <i class="codicon codicon-refresh me-2"></i> Set Action Params </a> <a class="dropdown-item" href="" ng-click="$.onSetShowConditionsClick(item)"> <i class="codicon codicon-plus me-2"></i> Set Show Conditions </a> <a class="dropdown-item" href="" ng-click="$.column.ActionItems.splice($index,1)"> <i class="codicon codicon-trash me-2"></i> Delete Item </a> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.onAddActionItemClick()"> <i class="codicon codicon-plus me-0"></i> </button> </div> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveColumnClick()"> <i class="codicon codicon-save"></i> Save Column </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelColumnClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget> <div id="wnColumnShowConditions" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark b-front" tabindex="-1"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Column Show Conditions </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-condition-list ng-model="$.column.ShowConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div> <div id="wnActionParams" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark b-front" tabindex="-1"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Set Params </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-action-param-list params="$.actionItem.ActionParams" data-action-id="$.actionItem.ActionID" data-actions="$.actions" data-source="[\'fields\',\'form\',\'variables\']" data-variables="$.variables" data-fields="$.fields"> </b-action-param-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div> <div id="wnContentItemConditions" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark b-front"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Content Conditions </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-condition-list ng-model="$.contentItem.Conditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div>')}]),module.exports=path},8928:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/grid.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,' <div class="b-table theme-gray mb-3"> <div class="table-body pt-4"> <div class="d-flex columns-name"> <div class="col-2">Title</div> <div class="col-2">Type</div> <div class="col-3">Content</div> <div class="col-1">Width</div> <div class="col-1">Details</div> <div class="col-2"> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-up d-inline-block me-1"></i> </button> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-down d-inline-block"></i> </button> </div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="column in $.field.Settings.Columns | orderBy:\'ViewOrder\'" ng-style="{\'order\':($index+1)}"> <div class="col-2 my-auto"> {{column.Title}} </div> <div class="col-2 my-auto"> {{column.ColumnType}} </div> <div class="col-3 my-auto"> <div ng-if="column.ColumnType==\'ActionButton\' || column.ColumnType==\'ActionButtonList\'"> {{column.ColumnType}}</div> {{column.Content}} <div ng-repeat="item in column.ContentItems">{{item.Content}}</div> <div ng-if="column.ColumnType==\'ActionButton\'">{{column.TooltipTitle}}</div> <div ng-if="column.ColumnType==\'DashboardPageLink\'">{{column.PageName}}</div> </div> <div class="col-1 my-auto"> {{column.Width}}</div> <div class="col-1 my-auto"> <i ng-if="!column.ShowInRowDetails" class="codicon codicon-chrome-maximize fs-4 text-start"></i> <i ng-if="column.ShowInRowDetails" class="codicon codicon-check fs-4 text-start"></i> </div> <div class="col-2 my-auto"> <button type="button" class="b-clean text-light" ng-disabled="$index==0"> <i class="codicon codicon-arrow-up d-inline-block me-1" ng-click="$.onColumnSwapClick($index,$index-1)"></i> </button> <button type="button" class="b-clean text-light" ng-disabled="$index==$.columns.length-1"> <i class="codicon codicon-arrow-down d-inline-block" ng-click="$.onColumnSwapClick($index,$index+1)"></i> </button> </div> <div class="col-1"> <div class="b-multi-btns"> <button type="button" class="p-0" ng-click="$.onEditColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Edit Column"> <i class="codicon codicon-edit me-0"></i> </button> <button type="button" ng-click="$.onDeleteColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Delete Column"> <i class="codicon codicon-trash me-0"></i> </button> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddColumnClick()"> <i class="codicon codicon-plus"></i> Add Column </button> </div> </div> <div ng-include="$.editColumnWidget"></div>')}]),module.exports=path},4214:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/grid/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Enable Paging</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.EnablePaging"/> <div class="slider"></div> </label> </div> <div ng-if="$.currentField.Settings.EnablePaging"> <div class="b-field"> <label>Page Index</label> <input type="number" ng-model="$.currentField.Settings.PageIndex" class="b-input b-input form-control"/> </div> <div class="b-field"> <label>Page Size</label> <input type="number" ng-model="$.currentField.Settings.PageSize" class="b-input b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Save Current Page In Storage</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.SaveCurrentPageInStorage"/> <div class="slider"></div> </label> </div> </div>')}]),module.exports=path},4210:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/group/group-studio.component.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="{{$.field.Settings.GroupCssClass}}" data-pane="Group{{$.field.FieldID}}" data-pane-title="{{$.field.FieldName}} Pane" data-parent-id="{{$.field.FieldID}}"></div>')}]),module.exports=path},4815:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/group/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Group Css</label> <input type="text" ng-model="$.currentField.Settings.GroupCssClass" class="b-input form-control"/> </div>')}]),module.exports=path},3096:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/import-excel/import-excel.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.field.Settings.Placeholder" placeholder="{{$.field.Settings.Placeholder}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div>')}]),module.exports=path},4009:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/import-excel/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Columns</label> <input type="text" ng-model="$.currentField.Settings.Columns" class="b-input form-control"/> </div>')}]),module.exports=path},6853:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map-routing/leafletjs-map-routing.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group" ng-if="$.field.Settings.ShowTextBoxLocation"> <lable class="b-field-item b-input-edit">{{$.field.Settings.ManualLocLableLat}}</lable> <input type="text" class="b-input form-control" ng-model="$.field.Settings.ManualLocPlaceholderLat" placeholder="{{$.field.Settings.ManualLocPlaceholderLat}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> <lable class="b-field-item b-input-edit">{{$.field.Settings.ManualLocLableLng}}</lable> <input type="text" class="b-input form-control" ng-model="$.field.Settings.ManualLocPlaceholderLng" placeholder="{{$.field.Settings.ManualLocPlaceholderLng}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div> <div id="map{{$.field.FieldName}}"></div>')}]),module.exports=path},8595:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map-routing/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Show Auto Complete </label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowAutoComplete"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.ShowAutoComplete"> <label class="form-label">Auto Complete Place Holder</label> <input type="text" ng-model="$.currentField.Settings.AutoCompletePlaceHolder" class="b-input form-control" placeholder="Auto Complete Place Holder"/> </div> <div class="b-field"> <label class="form-label">Map Height</label> <input type="text" ng-model="$.currentField.Settings.MapHeight" class="b-input form-control" placeholder="Map Height"/> </div> <div class="b-field"> <label class="form-label">Default Zoom</label> <input type="text" ng-model="$.currentField.Settings.DefaultZoom" class="b-input form-control" placeholder="Default Zoom" valid-int-number/> </div> <div class="b-field"> <label class="form-label">Default Location</label> <input type="text" ng-model="$.currentField.Settings.DefaultLocationLat" class="b-input form-control" placeholder="Default Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.DefaultLocationLng" class="b-input form-control" placeholder="Default Location Longitude"/> </div> <div class="b-field"> <label class="form-label">Show Latitude and Longitude</label> <label class="toggle-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowLatLng"/> <div class="slider"></div> </label> </div> <div class="b-field"> <label class="form-label">Show Text Box Location</label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowTextBoxLocation"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.ShowTextBoxLocation"> <label class="form-label">Manual Location</label> <div class="b-field"> <label class="form-label">Lat Lable</label> <input type="text" ng-model="$.currentField.Settings.ManualLocLableLat" class="b-input form-control"/> <label class="form-label">Lng Lable</label> <input type="text" ng-model="$.currentField.Settings.ManualLocLableLng" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Lat Placeholder</label> <input type="text" ng-model="$.currentField.Settings.ManualLocPlaceholderLat" class="b-input form-control"/> <label class="form-label">Lng Placeholder</label> <input type="text" ng-model="$.currentField.Settings.ManualLocPlaceholderLng" class="b-input form-control"/> </div> </div> <div class="b-field"> <label class="form-label">Enable Fit Bounds</label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.EnableFitBounds"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.EnableFitBounds"> <label class="form-label">Fit Bounds</label> <div class="b-field" style="border:dotted .1rem #555;border-radius:.475rem;padding:1rem"> <label class="form-label">From</label> <input type="text" ng-model="$.currentField.Settings.FitBoundsFromLat" class="b-input form-control" placeholder="From Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.FitBoundsFromLng" class="b-input form-control" placeholder="From Location Longitude"/> </div> <div class="b-field" style="border:dotted .1rem #555;border-radius:.475rem;padding:1rem"> <label class="form-label">To</label> <input type="text" ng-model="$.currentField.Settings.FitBoundsToLat" class="b-input form-control" placeholder="To Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.FitBoundsToLng" class="b-input form-control" placeholder="To Location Longitude"/> </div> </div> <div class="b-field"> <label class="form-label">Tooltip From Text</label> <input type="text" ng-model="$.currentField.Settings.ToolTipFromText" class="b-input form-control"/> <label class="form-label">Tooltip To Text</label> <input type="text" ng-model="$.currentField.Settings.ToolTipToText" class="b-input form-control"/> <label class="form-label">Tooltip Clear Text</label> <input type="text" ng-model="$.currentField.Settings.ToolTipClearText" class="b-input form-control"/> <label class="form-label">Tooltip OK Text</label> <input type="text" ng-model="$.currentField.Settings.ToolTipOKText" class="b-input form-control"/> </div>')}]),module.exports=path},971:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map/leafletjs-map.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group" ng-if="$.field.Settings.ShowTextBoxLocation"> <lable class="b-field-item b-input-edit">{{$.field.Settings.ManualLocLableLat}}</lable> <input type="text" class="b-input form-control" ng-model="$.field.Settings.ManualLocPlaceholderLat" placeholder="{{$.field.Settings.ManualLocPlaceholderLat}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> <lable class="b-field-item b-input-edit">{{$.field.Settings.ManualLocLableLng}}</lable> <input type="text" class="b-input form-control" ng-model="$.field.Settings.ManualLocPlaceholderLng" placeholder="{{$.field.Settings.ManualLocPlaceholderLng}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div> <div id="map{{$.field.FieldName}}"></div>')}]),module.exports=path},5523:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/leafletjs-map/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Show Auto Complete</label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowAutoComplete"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.ShowAutoComplete"> <label class="form-label">Auto Complete Place Holder</label> <input type="text" ng-model="$.currentField.Settings.AutoCompletePlaceHolder" class="b-input form-control" placeholder="Auto Complete Place Holder"/> </div> <div class="b-field"> <label class="form-label">Map Height</label> <input type="text" ng-model="$.currentField.Settings.MapHeight" class="b-input form-control" placeholder="Map Height"/> </div> <div class="b-field"> <label class="form-label">Default Zoom</label> <input type="text" ng-model="$.currentField.Settings.DefaultZoom" class="b-input form-control" placeholder="Default Zoom" valid-int-number/> </div> <div class="b-field"> <label class="form-label">Default Location</label> <input type="text" ng-model="$.currentField.Settings.DefaultLocationLat" class="b-input form-control" placeholder="Default Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.DefaultLocationLng" class="b-input form-control" placeholder="Default Location Longitude"/> </div> <div class="b-field"> <label class="form-label">Show Latitude and Longitude</label> <label class="toggle-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowLatLng"/> <div class="slider"></div> </label> </div> <div class="b-field"> <label class="form-label">Show Text Box Location</label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.ShowTextBoxLocation"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.ShowTextBoxLocation"> <label class="form-label">Manual Location</label> <div class="b-field"> <label class="form-label">Lat Lable</label> <input type="text" ng-model="$.currentField.Settings.ManualLocLableLat" class="b-input form-control"/> <label class="form-label">Lng Lable</label> <input type="text" ng-model="$.currentField.Settings.ManualLocLableLng" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Lat Placeholder</label> <input type="text" ng-model="$.currentField.Settings.ManualLocPlaceholderLat" class="b-input form-control"/> <label class="form-label">Lng Placeholder</label> <input type="text" ng-model="$.currentField.Settings.ManualLocPlaceholderLng" class="b-input form-control"/> </div> </div> <div class="b-field"> <label class="form-label">Enable Fit Bounds</label> <label class="b-switch theme-topol"> <input type="checkbox" ng-model="$.currentField.Settings.EnableFitBounds"/> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.EnableFitBounds"> <label class="form-label">Fit Bounds</label> <div class="b-field" style="border:dotted .1rem #555;border-radius:.475rem;padding:1rem"> <label class="form-label">From</label> <input type="text" ng-model="$.currentField.Settings.FitBoundsFromLat" class="b-input form-control" placeholder="From Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.FitBoundsFromLng" class="b-input form-control" placeholder="From Location Longitude"/> </div> <div class="b-field" style="border:dotted .1rem #555;border-radius:.475rem;padding:1rem"> <label class="form-label">To</label> <input type="text" ng-model="$.currentField.Settings.FitBoundsToLat" class="b-input form-control" placeholder="To Location Latitude"/> <input type="text" ng-model="$.currentField.Settings.FitBoundsToLng" class="b-input form-control" placeholder="To Location Longitude"/> </div> </div>')}]),module.exports=path},8971:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/edit-column.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-column\'" data-title="Edit Column" data-icon="notebook-template" data-subtitle="Add or edit matrix column" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-7 b-splitter border-end pe-3"> <div class="b-field"> <label class="form-label">Column Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ColumnName" placeholder="Enter column name" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Column Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ColumnTitle" placeholder="Enter column title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Column Type</label> <div class="b-input-group"> <select ng-model="$.column.ColumnType" class="b-input form-select" chosen placeholder-text-single="\'Select column Type\'" required> <option value="Textbox">Textbox</option> <option value="Number">Number Box</option> <option value="DropDownList">Drop Down List</option> <option value="CheckboxList">Checkbox List</option> <option value="RadioButtonList">Radio Button List</option> <option value="DateTime">Date Time</option> <option value="Button">Button</option> <option value="File">File</option> <option value="Label">Label</option> </select> <span><i class="codicon codicon-activate-breakpoints"></i></span> </div> </div> <div class="b-field" ng-if="$.column.ColumnType==\'DropDownList\'||$.column.ColumnType==\'CheckboxList\'||$.column.ColumnType==\'RadioButtonList\'"> <label class="form-label">Column Type</label> <textarea class="form-control b-input" ng-model="$.column.Options" placeholder="One option per line" rows="6"></textarea> </div> <div class="b-field"> <label class="form-label">Column Placeholder</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.Placeholder" placeholder="Enter column placeholder" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div class="col-5 ps-3"> <div class="b-field"> <div class="form-label">Is Required</div> <label class="b-switch"> <input type="checkbox" ng-model="$.column.IsRequired"> <span class="slider"></span> </label> </div> <div class="b-field"> <label class="form-label">Column Width</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.ColumnWidth" placeholder="Enter column width" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Header Css</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.HeaderCssClass" placeholder="Enter column css class" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Header Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.column.HeaderIcon" placeholder="Enter column icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">View Order</label> <div class="b-input-group"> <input type="number" class="b-input form-control" ng-model="$.column.ViewOrder" placeholder="Enter column view order" autocomplete="off"/> <span><i class="codicon codicon-list-ordered"></i></span> </div> </div> <button type="button" ng-click="$.onColumnShowConditionsClick()" class="b-btn btn-action"> <i class="codicon codicon-gear"></i> Column Show Conditions </button> </div> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ActionButton\' && $.column.ActionID && $.column.ActionParams"> <b-action-param-list params="$.column.ActionParams" data-action-id="$.column.ActionID" data-actions="$.actions" data-source="[\'fields\',\'form\',\'variables\']" data-variables="$.variables" data-fields="$.fields"> </b-action-param-list> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ConditionalContents\'"> <div class="b-table theme-gray"> <div class="table-body p-0"> <div class="d-flex columns-name p-2"> <div class="col-5">Content</div> <div class="col-2">Css Class</div> <div class="col-2">Icon</div> <div class="col-2">Conditions</div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="item in $.column.ContentItems"> <div class="col-5 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Content"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.CssClass"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Icon"/> </div> <div class="col-2 my-auto"> <button type="button" ng-if="!item.Conditions.length" ng-click="$.onShowContentItemConditionsClick(item)" class="b-btn btn-action btn-sm"> <i class="codicon codicon-plus me-0"></i> </button> <button type="button" ng-if="item.Conditions.length" ng-click="$.onShowContentItemConditionsClick(item)" class="b-btn btn-action btn-sm"> {{item.Conditions.length}} Conditions </button> </div> <div class="col-2 my-auto"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.column.ContentItems.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.onAddContentItemClick()"> <i class="codicon codicon-plus me-0"></i> </button> </div> </div> </div> <div class="mt-3" ng-if="$.column.ColumnType==\'ActionButtonList\'"> <div class="b-table theme-gray"> <div class="table-body p-0"> <div class="d-flex columns-name p-2"> <div class="col-4">Action</div> <div class="col-3">Text</div> <div class="col-2">Css Class</div> <div class="col-2">Icon</div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="item in $.column.ActionItems"> <div class="col-4 my-auto"> <select ng-model="item.ActionID" class="b-input form-select" chosen ng-options="action.ActionID as action.ActionName for action in $.actions" placeholder-text-single="\'Select action\'" required> </select> </div> <div class="col-3 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Text"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.CssClass"/> </div> <div class="col-2 my-auto"> <input type="text" class="b-input form-control" ng-model="item.Icon"/> </div> <div class="col-2 my-auto"> <button type="button" class="b-btn btn-action btn-sm" data-bs-toggle="dropdown" aria-expanded="false"> <i class="codicon codicon-kebab-vertical me-0"></i> </button> <div class="dropdown-menu b-dropdown-menu"> <a class="dropdown-item" href="" ng-if="item.ActionID" ng-click="$.onSetActionParamsClick(item)"> <i class="codicon codicon-refresh me-2"></i> Set Action Params </a> <a class="dropdown-item" href=""> <i class="codicon codicon-plus me-2"></i> Set Show Conditions </a> <a class="dropdown-item" href="" ng-click="$.column.ActionItems.splice($index,1)"> <i class="codicon codicon-trash me-2"></i> Delete Item </a> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-sm btn-action" ng-click="$.onAddActionItemClick()"> <i class="codicon codicon-plus me-0"></i> </button> </div> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveColumnClick()"> <i class="codicon codicon-save"></i> Save Column </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelColumnClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget> <div id="wnColumnShowConditions" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark b-front" tabindex="-1"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Column Show Conditions </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-condition-list ng-model="$.column.ShowConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div> <div id="wnActionParams" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark" tabindex="-1"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Set Params </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-action-param-list params="$.actionItem.ActionParams" data-action-id="$.actionItem.ActionID" data-actions="$.actions" data-source="[\'fields\',\'form\',\'variables\']" data-variables="$.variables" data-fields="$.fields"> </b-action-param-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div> <div id="wnContentItemConditions" ng-if="$.workingMode==\'edit-column\'" b-custom-modal class="modal fade b-modal-dark b-front"> <div class="modal-dialog modal-lg"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Content Conditions </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body"> <b-condition-list ng-model="$.contentItem.Conditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" data-bs-dismiss="modal">Done</button> </div> </div> </div> </div>')}]),module.exports=path},4286:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/matrix.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,' <div class="b-table theme-gray mb-3"> <div class="table-body pt-4"> <div class="d-flex columns-name"> <div class="col-2">Name</div> <div class="col-2">Title</div> <div class="col-2">Type</div> <div class="col-1">Width</div> <div class="col-2">Is Required</div> <div class="col-2"> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-up d-inline-block me-1"></i> </button> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-down d-inline-block"></i> </button> </div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="column in $.field.Settings.Columns | orderBy:\'ViewOrder\'" ng-style="{\'order\':($index+1)}"> <div class="col-2 my-auto"> {{column.ColumnName}} </div> <div class="col-2 my-auto"> {{column.ColumnTitle}} </div> <div class="col-2 my-auto"> {{column.ColumnType}} </div> <div class="col-1 my-auto"> {{column.ColumnWidth}}</div> <div class="col-2 my-auto"> <i ng-if="!column.IsRequired" class="codicon codicon-chrome-maximize fs-4 text-start"></i> <i ng-if="column.IsRequired" class="codicon codicon-check fs-4 text-start"></i> </div> <div class="col-2 my-auto"> <button type="button" class="b-clean text-light" ng-disabled="$index==0"> <i class="codicon codicon-arrow-up d-inline-block me-1" ng-click="$.onColumnSwapClick($index,$index-1)"></i> </button> <button type="button" class="b-clean text-light" ng-disabled="$index==$.columns.length-1"> <i class="codicon codicon-arrow-down d-inline-block" ng-click="$.onColumnSwapClick($index,$index+1)"></i> </button> </div> <div class="col-1"> <div class="b-multi-btns"> <button type="button" class="p-0" ng-click="$.onEditColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Edit Column"> <i class="codicon codicon-edit me-0"></i> </button> <button type="button" ng-click="$.onDeleteColumnClick(column)" b-custom-tooltip data-bs-placement="bottom" title="Delete Column"> <i class="codicon codicon-trash me-0"></i> </button> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddColumnClick()"> <i class="codicon codicon-plus"></i> Add Column </button> </div> </div> <div class="b-field"> <label class="form-label">Data Source</label> <div ng-if="$.field.Settings.DataSource" role="button" ng-click="$.onEditFieldDataSourceClick()"> <div class="b-notify notify-warning mb-3"> <i class="codicon codicon-combine icon-sm"></i> <div class="text"> <span class="subtext"> Type : <label ng-if="$.field.Settings.DataSource.Type==0">Standard(Static items)</label> <label ng-if="$.field.Settings.DataSource.Type==1">Use Defined List</label> <label ng-if="$.field.Settings.DataSource.Type==2">Data Source Service </label> </span> </div> </div> </div> </div> <div class="b-field" ng-if="!$.field.Settings.DataSource"> <button type="button" class="b-btn btn-action" ng-click="$.onEditFieldDataSourceClick()"> <i class="codicon codicon-plus"></i> Set Data Source </button> </div> <div ng-include="$.editColumnWidget"></div>')}]),module.exports=path},8196:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/matrix/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Add Button Text</label> <input type="text" ng-model="$.currentField.Settings.AddButtonText" class="b-input form-control" placeholder="Add button text"/> </div> <div class="b-field"> <label class="form-label">Disable Delete Row</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.DisableDeleteRow"/> <div class="slider"></div> </label> </div> <div class="b-field"> <label class="form-label">Table Type</label> <select ng-model="$.currentField.Settings.TableType" class="b-input form-select" required> <option disabled="disabled"></option> <option value="horizontal">Horizontal</option> <option value="vertical">Vertical</option> </select> </div> <div class="b-field"> <label class="form-label">Validation Method</label> <select ng-model="$.currentField.Settings.ValidationMethod" class="b-input form-select" required> <option disabled="disabled"></option> <option value="onValidateMatrixField">onValidateMatrixField</option> </select> </div>')}]),module.exports=path},5622:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/message-box/message-box.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div ng-repeat="message in $.field.Settings.Messages" role="button" ng-click="$.onEditMessageClick(message,$index)"> <div class="b-notify notify-warning mb-3"> <div class="text"> <span class="subtext"> {{message.Title}} <br> <span ng-if="message.ShowConditions.length" class="small"> {{message.ShowConditions.length}} Conditions </span> </span> </div> </div> </div> <div class="b-field"> <button type="button" class="b-btn btn-action" ng-click="$.onAddMessageClick()"> <i class="codicon codicon-plus"></i> Add Message </button> </div> <b-right-widget ng-if="$.workingMode==\'edit-message\'" data-title="Edit Message" data-icon="notebook-template" data-subtitle="Add or edit message item" data-await-action="$.awaitAction"> <div class="b-field"> <label class="form-label">Title</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.message.Title" placeholder="Enter message title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Message Content</label> <div monaco-editor ng-model="$.message.Content" data-language="html" data-height="150px" required> </div> </div> <div class="b-field"> <label class="form-label">Show Conditions</label> <b-condition-list ng-model="$.message.ShowConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveMessageClick()"> Save Message </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelEditMessageClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},6417:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/message-box/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Button Type</label> <select ng-model="$.currentField.Settings.ButtonType" class="b-input form-select" chosen required> <option value="button">Standard Button</option> <option value="submit">Submit Button</option> </select> </div> <div class="b-field" ng-if="$.currentField.Settings.ButtonType==\'button\'"> <label class="form-label">Validation Groups</label> <select ng-model="$.currentField.Settings.ValidationGroups" class="b-input form-select" ng-options="field.FieldID as field.FieldName for field in $.fields | filter: {IsGroup:true}" multiple="multiple" chosen required> </select> </div> <div class="b-field" ng-if="$.currentField.Settings.ButtonType==\'button\'"> <label class="form-label">Validation Panes</label> <select ng-model="$.currentField.Settings.ValidationPanes" class="b-input form-select" ng-options="pane.PaneName as pane.PaneTitle for pane in $.panes" multiple="multiple" chosen required> </select> </div> <div class="b-field"> <label class="form-label">Button Css Class</label> <input type="text" ng-model="$.currentField.Settings.ButtonCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Button Text</label> <input type="text" ng-model="$.currentField.Settings.ButtonText" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Loading Css Class</label> <input type="text" ng-model="$.currentField.Settings.LoadingCssClass" class="b-input form-control"/> </div>')}]),module.exports=path},9295:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/nice-select/nice-select.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select ng-model="[FIELD].Value" class="b-input form-select"> <option ng-if="![FIELD].Settings.ShowAll || ![FIELD].Options.length" value="" disabled="disabled">{{[FIELD].Settings.Placeholder}}</option> <option ng-if="[FIELD].Settings.ShowAll && [FIELD].Options.length" value="">{{[FIELD].Settings.AllText}}</option> <option ng-repeat="option in [FIELD].Options" ng-value="option[[FIELD].Settings.DataSource.ValueField]" ng-selected="[FIELD].Value == option[[FIELD].Settings.DataSource.ValueField]">{{option[[FIELD].Settings.DataSource.TextField]}}</option> </select>')}]),module.exports=path},6517:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/nice-select/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Dropdown Css Class</label> <input type="text" ng-model="$.currentField.Settings.DropdownCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Show None/All</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ShowAll"/> <div class="slider"></div> </label> </div> <div class="b-field" ng-if="currentField.Settings.ShowAll"> <label class="form-label">All Text</label> <input type="text" ng-model="$.currentField.Settings.AllText" class="b-input form-control" placeholder="All or none text"/> </div>')}]),module.exports=path},7186:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/persian-date-time-picker/persian-date-time-picker.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.field.Settings.Placeholder" placeholder="{{$.field.Settings.Placeholder}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div>')}]),module.exports=path},6623:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/persian-date-time-picker/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Css Class</label> <input type="text" ng-model="$.currentField.Settings.InputCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Auto Close</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.AutoClose"/> <div class="slider"></div> </label> </div> <div class="b-field"> <label>Calendar Type</label> <select ng-model="$.currentField.Settings.CalendarType" class="b-input form-control" placeholder-text-single="\'Select calendar type\'" required> <option disabled="disabled"></option> <option value="gregorian">Gregorian</option> <option value="jalali">Jalali</option> </select> </div> <div class="b-field"> <label class="form-label">Format</label> <input ng-model="$.currentField.Settings.Format" class="b-input form-control" placeholder="Example YYYY/MM/DD"/> </div> <div class="b-field"> <label class="form-label">Date & Time</label> <select ng-model="$.currentField.Settings.DateType" class="b-input form-control" placeholder-text-single="\'Select date type\'" required> <option disabled="disabled"></option> <option value="datetime">Date & Time</option> <option value="date">Date</option> </select> </div> <div class="b-field"> <label class="form-label">Min Date</label> <input ng-model="$.currentField.Settings.MinDate" class="b-input form-control" placeholder="Enter min date"/> </div>')}]),module.exports=path},3529:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/property/property.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select class="b-input form-select" ng-model="[FIELD].Value"> <option value="">{{$.field.Settings.Placeholder}}</option> </select>')}]),module.exports=path},1661:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/property/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Enable Button 1</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.EnableButton1"/> <div class="slider"></div> </label> </div> <div ng-if="$.currentField.Settings.EnableButton1"> <div class="b-field"> <label class="form-label">Button Text 1</label> <input type="text" ng-model="$.currentField.Settings.ButtonText1" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Button Css 1</label> <input type="text" ng-model="$.currentField.Settings.ButtonCss1" class="b-input form-control"/> </div> </div> <div class="b-field"> <label class="form-label">Enable Button 1</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.EnableButton2"/> <div class="slider"></div> </label> </div> <div ng-if="$.currentField.Settings.EnableButton2"> <div class="b-field"> <label class="form-label">Button Text 2</label> <input type="text" ng-model="$.currentField.Settings.ButtonText2" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Button Css 2</label> <input type="text" ng-model="$.currentField.Settings.ButtonCss2" class="b-input form-control"/> </div> </div>')}]),module.exports=path},914:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/select2/select2.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select ng-model="$.field.Value" class="b-input form-control" ng-options="item.Value as item.Text for item in $.field.DataSource.Items"> <option Value="">{{$.field.Settings.Placeholder}}</option> </select>')}]),module.exports=path},5271:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/select2/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Direction</label> <select ng-model="$.currentField.Settings.Direction" class="b-input form-select" required> <option disabled="disabled"></option> <option value="ltr">ltr</option> <option value="rtl">rtl</option> </select> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Show Clean Icon</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ShowCleanIcon"/> <div class="slider"></div> </label> </div>')}]),module.exports=path},9685:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/edit-templates.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,' <b-right-widget ng-if="$.workingMode==\'selectable-list-edit-templates\'" data-title="Edit Templates" data-icon="notebook-template" data-subtitle="Edit selectable list templates" data-await-action="$.awaitAction" data-module="$"> <div class="tabs-container pb-3 mb-2"> <ul class="nav nav-tabs b-tab" role="tablist"> <li class="nav-item" role="presentation"> <button class="nav-link active" id="selectable-list-layout-tab" data-bs-toggle="tab" data-bs-target="#selectable-list-layout-content" type="button" role="tab" aria-controls="selectable-list-layout-content" aria-selected="true" data-tab="1">List Layout Template</button> </li> <li class="nav-item" role="presentation"> <button class="nav-link" id="selectable-list-item-tab" data-bs-toggle="tab" data-bs-target="#selectable-list-item-content" type="button" role="tab" aria-controls="selectable-list-item-content" aria-selected="false" data-tab="2">List Item Template</button> </li> <li class="nav-item" role="presentation"> <button class="nav-link" id="selectable-list-css-tab" data-bs-toggle="tab" data-bs-target="#selectable-list-css-content" type="button" role="tab" aria-controls="selectable-list-css-content" aria-selected="false" data-tab="3">Custom Css</button> </li> </ul> <div class="tab-content p-0 mb-4"> <div class="tab-pane fade show active" id="selectable-list-layout-content" role="tabpanel" aria-labelledby="selectable-list-layout-content"> <div monaco-editor ng-model="$.field.Settings.LayoutTemplate" data-language="html" data-height="445px" required> </div> </div> <div class="tab-pane fade" id="selectable-list-item-content" role="tabpanel" aria-labelledby="selectable-list-item-content"> <div monaco-editor ng-model="$.field.Settings.ItemTemplate" data-language="html" data-height="445px" required> </div> </div> <div class="tab-pane fade" id="selectable-list-css-content" role="tabpanel" aria-labelledby="selectable-list-css-tab"> <div monaco-editor ng-model="$.field.Settings.LayoutCss" data-language="css" data-height="445px"> </div> </div> </div> </div> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveTemplatesClick()" ng-disabled="$.running"> <i class="codicon codicon-save"></i> Save </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelTemplatesClick()" ng-disabled="$.running"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},8247:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/selectable-list.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <div class="b-radio radio-inline"> <label class="radio-item" ng-repeat="option in $.field.DataSource.Items"> <input type="radio" name="selectable-list-{{$.field.FieldName}}" value="{{$index}}"/> <i class="input-helper"></i> {{option[$.field.Settings.DataSource.TextField]}} </label> </div> </div> <div class="b-field"> <button type="button" class="b-btn btn-action" ng-click="$.onEditTemplatesClick()"> <i class="codicon codicon-plus"></i> Edit Templates </button> </div> <div ng-include="$.editTemplatesWidget"></div>')}]),module.exports=path},6083:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectable-list/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Custom Class</label> <input type="text" ng-model="$.currentField.Settings.CustomClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Direction</label> <select ng-model="$.currentField.Settings.Direction" class="b-input form-select" required> <option disabled="disabled"></option> <option value="ltr">ltr</option> <option value="rtl">rtl</option> </select> </div>')}]),module.exports=path},2578:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectize/selectize.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<select ng-model="$.field.Value" class="b-input form-select"> <option ng-if="!$.field.Settings.ShowAll || !$.field.Options.length" value="" disabled="disabled">{{$.field.Settings.Placeholder}}</option> <option ng-if="$.field.Settings.ShowAll && $.field.Options.length" value="">{{$.field.Settings.AllText}}</option> <option ng-repeat="option in $.field.Options" ng-value="option[$.field.Settings.DataSource.ValueField]" ng-selected="$.field.Value == option[$.field.Settings.DataSource.ValueField]">{{option[$.field.Settings.DataSource.TextField]}}</option> </select>')}]),module.exports=path},2574:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/selectize/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Dropdown Css Class</label> <input type="text" ng-model="$.currentField.Settings.DropdownCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div>')}]),module.exports=path},4840:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-settings\'" data-title="Sider Settings" data-icon="notebook-template" data-subtitle="config swiper slider" data-await-action="$.awaitAction"> <div class="b-field"> <label class="form-label">Layout Template</label> <div monaco-editor ng-model="$.field.Settings.LayoutTemplate" data-language="html" data-height="150px" required> </div> </div> <div class="b-field"> <label class="form-label">Item Template</label> <div monaco-editor ng-model="$.field.Settings.ItemTemplate" data-language="html" data-height="150px" required> </div> </div> <div class="b-field"> <label class="form-label">Custom Css</label> <div monaco-editor ng-model="$.field.Settings.CustomCss" data-language="css" data-height="150px" required> </div> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveSettingsClick()"> <i class="codicon codicon-save"></i> Save Settings </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelSettingsClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},5613:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Slider Css Class</label> <input type="text" ng-model="$.currentField.Settings.SliderCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Slider Options</label> <textarea ng-model="$.currentField.Settings.SliderOptions" class="b-input form-control" rows="5"></textarea> </div>')}]),module.exports=path},8738:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/swiper-slider/slider.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <button type="button" class="b-btn btn-action" ng-click="$.onEditSettingsClick()"> <i class="codicon codicon-gear"></i> Edit Settings </button> </div> <div ng-include="$.settingsWidget"></div>')}]),module.exports=path},656:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/switch-button/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Css Class</label> <input type="text" ng-model="$.currentField.Settings.SwitchButtonCssClass" class="b-input form-control" placeholder="Custom css class"/> </div>')}]),module.exports=path},7264:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/switch-button/switch-button.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="b-switch"> <input type="checkbox" ng-model="$.currentField.Value"> <span class="slider"></span> </label> </div>')}]),module.exports=path},3491:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/edit-tab.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-tab\'" data-title="Edit Tab" data-icon="notebook-template" data-subtitle="Add or edit grid tab" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-7 b-splitter border-end pe-3"> <div class="b-field"> <label class="form-label">Tab Name</label> <div class="b-input-group"> <input type="text" id="txtTabName" class="b-input form-control" ng-model="$.tab.Name" placeholder="Enter tab name" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Tab Title</label> <div class="b-input-group"> <input type="text" id="txtTabTitle" class="b-input form-control" ng-model="$.tab.Title" placeholder="Enter tab title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div class="col-5 ps-3"> <div class="b-field"> <label class="form-label">Tab Pane Css Class</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.tab.PaneCssClass" placeholder="Enter tab pane css class" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Tab Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.tab.Icon" placeholder="Enter tab icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">View Order</label> <div class="b-input-group"> <input type="number" class="b-input form-control" ng-model="$.tab.ViewOrder" placeholder="Enter tab view order" autocomplete="off"/> <span><i class="codicon codicon-list-ordered"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Description</label> <div class="b-input-group"> <textarea ng-model="$.tab.Description" class="b-input form-control" rows="2" placeholder="Enter tab description"></textarea> <span class="my-auto"><i class="codicon codicon-debug-stackframe-active"></i></span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Show Condition(s)</label> <b-condition-list ng-model="$.tab.ShowConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="b-field"> <label class="form-label">Enable Condition(s)</label> <b-condition-list ng-model="$.tab.EnableConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveTabClick()"> <i class="codicon codicon-save"></i> Save Tab </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelTabClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},9071:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,"")}]),module.exports=path},1463:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/tabs/tabs.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,' <div class="b-table theme-gray mb-4"> <div class="table-body pt-4"> <div class="d-flex tabs-name"> <div class="col-2">Tab Name</div> <div class="col-3">Tab Title</div> <div class="col-4">Condition(s)</div> <div class="col-2"> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-up d-inline-block me-1"></i> </button> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-down d-inline-block"></i> </button> </div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="tab in $.field.Settings.Tabs | orderBy:\'ViewOrder\'" ng-style="{\'order\':($index+1)}"> <div class="col-2 my-auto"> {{tab.Name}} </div> <div class="col-3 my-auto"> <span class="text"> {{tab.Title}} </span> <span class="subtext"> {{tab.Description}} </span> </div> <div class="col-4 my-auto"> <span class="subtext" ng-if="tab.ShowConditions.length"> {{tab.ShowConditions.length}} Show Condition(s) </span> <span class="subtext" ng-if="tab.EnableConditions.length"> {{tab.EnableConditions.length}} Enable Condition(s) </span> </div> <div class="col-2 my-auto"> <button type="button" class="b-clean text-light" ng-disabled="$index==0"> <i class="codicon codicon-arrow-up d-inline-block me-1" ng-click="$.onTabSwapClick($index,$index-1)"></i> </button> <button type="button" class="b-clean text-light" ng-disabled="$index==$.tabs.length-1"> <i class="codicon codicon-arrow-down d-inline-block" ng-click="$.onTabSwapClick($index,$index+1)"></i> </button> </div> <div class="col-1"> <div class="b-multi-btns"> <button type="button" class="p-0" ng-click="$.onEditTabClick(tab)" b-custom-tooltip data-bs-placement="bottom" title="Edit Tab"> <i class="codicon codicon-edit"></i> </button> <button type="button" ng-click="$.field.Settings.Tabs.splice($index,1)" b-custom-tooltip data-bs-placement="bottom" title="Delete Tab"> <i class="codicon codicon-trash"></i> </button> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddTabClick()"> <i class="codicon codicon-plus"></i> Add Tab </button> </div> </div> <div ng-repeat="tab in $.field.Settings.Tabs | orderBy:\'ViewOrder\'" data-pane="TabsTab_{{tab.Name}}" data-pane-title="{{tab.Name}} Pane" data-parent-id="{{$.field.FieldID}}"></div> <div ng-include="$.editTabWidget"></div>')}]),module.exports=path},4494:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/text-editor/editor.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group"> <textarea class="b-input form-control" ng-model="$.field.Settings.Placeholder" placeholder="{{$.field.Settings.Placeholder}}" autocomplete="off" rows="2"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div>')}]),module.exports=path},1323:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/text-editor/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Editor Css Class</label> <input type="text" ng-model="$.currentField.Settings.EditorCssClass" class="b-input form-control"/> </div>')}]),module.exports=path},8152:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textarea/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Rows</label> <input type="number" ng-model="$.currentField.Settings.Rows" class="b-input form-control" placeholder="Textarea rows count"/> </div> <div class="b-field"> <label class="form-label">Max Length</label> <input type="number" ng-model="$.currentField.Settings.MaxLength" class="b-input form-control" placeholder="Field max length"/> </div> <div class="b-field" ng-if="currentField.Settings.MaxLength"> <label class="form-label">Show Max Length</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ShowMaxLength"/> <div class="slider"></div> </label> </div> <div class="b-field"> <label class="form-label">Max Length Message</label> <input type="text" ng-model="$.currentField.Settings.MaxLengthMessage" class="b-input form-control" placeholder="Max length message"/> </div> <div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Css Class</label> <input type="text" ng-model="$.currentField.Settings.InputCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Mask Regex</label> <input type="text" ng-model="$.currentField.Settings.InputMask" class="b-input form-control" placeholder="Input Mask Options"/> </div> <div class="b-field"> <label class="form-label">Input Mask Type</label> <input type="text" ng-model="$.currentField.Settings.InputMaskType" class="b-input form-control" placeholder="Input Mask"/> </div> <div class="b-field"> <label class="form-label">Input Mask Options</label> <input type="text" ng-model="$.currentField.Settings.InputMaskOptions" class="b-input form-control" placeholder="Input Mask"/> </div>')}]),module.exports=path},1891:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textarea/textarea.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group"> <textarea class="b-input form-control" ng-model="$.field.Settings.Placeholder" placeholder="{{$.field.Settings.Placeholder}}" autocomplete="off" rows="2"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div>')}]),module.exports=path},434:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textbox/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Input Type</label> <select ng-model="$.currentField.Settings.InputType" class="b-input form-control" chosen required> <option value="text">Text</option> <option value="number">Number</option> <option value="password">Password</option> <option value="email">Email</option> <option value="search">Search</option> <option value="date">Date</option> <option value="datetime">Date Time</option> <option value="tel">Tel</option> <option value="time">Time</option> </select> </div> <div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Css Class</label> <input type="text" ng-model="$.currentField.Settings.InputCssClass" class="b-input form-control" placeholder="Input css class"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Mask Regex</label> <input type="text" ng-model="$.currentField.Settings.InputMask" class="b-input form-control" placeholder="Input Mask Options"/> </div> <div class="b-field"> <label class="form-label">Input Mask Type</label> <input type="text" ng-model="$.currentField.Settings.InputMaskType" class="b-input form-control" placeholder="Input Mask"/> </div> <div class="b-field"> <label class="form-label">Input Mask Options</label> <input type="text" ng-model="$.currentField.Settings.InputMaskOptions" class="b-input form-control" placeholder="Input Mask"/> </div> <div class="b-field"> <label class="form-label">Enter Action</label> <select ng-model="$.currentField.Settings.EnterAction" class="b-input form-control" ng-options="action.ActionID as action.ActionName for action in $.actions" chosen> <option value="">---None---</option> </select> </div> <div class="b-field"> <label class="form-label">Enter Button Click</label> <select ng-model="$.currentField.Settings.EnterButtonClick" class="b-input form-control" ng-options="field.FieldID as field.FieldName for field in $.fields | filter: {FieldType:\'Button\'}" chosen> <option value="">---None---</option> </select> </div> <div ng-repeat="attr in $.currentField.Settings.Attributes" style="padding:10px;margin-bottom:10px;border:solid 1px #ccc"> <div class="b-field"> <div class="col-xs-11"> <label>Attribute Name</label> <input type="text" ng-model="attr.Name" class="b-input form-control"/> </div> <div class="col-xs-11"> <label>Attribute Value</label> <input type="text" ng-model="attr.Value" class="b-input form-control"/> </div> <div class="col-xs-1"> <span class="pull-right cursor-pointer" ng-click="currentField.Settings.Thumbnails.splice($index,1)"> <i class="zmdi zmdi-delete"></i> </span> </div> <div class="clearfix"></div> </div> </div> <div class="b-field" ng-init="currentField.Settings.Attributes=currentField.Settings.Attributes||[]"> <button type="button" class="btn btn-primary" ng-click="currentField.Settings.Attributes.push({})"> <i class="zmdi zmdi-plus"></i> Add Attributes </button> </div>')}]),module.exports=path},8536:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/textbox/textbox.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.field.Settings.Placeholder" placeholder="{{$.field.Settings.Placeholder}}" autocomplete="off"/> <span><i class="codicon codicon-{{$.field.Settings.Icon}}"></i></span> </div>')}]),module.exports=path},9332:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/typeahead-autocomplete/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Placeholder</label> <input type="text" ng-model="$.currentField.Settings.Placeholder" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Input Css Class</label> <input type="text" ng-model="$.currentField.Settings.InputCssClass" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Icon Position</label> <input type="text" ng-model="$.currentField.Settings.IconPosition" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Font Icon</label> <input type="text" ng-model="$.currentField.Settings.FontIcon" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Show Clean Icon</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ShowCleanIcon"/> <div class="slider"></div> </label> </div>')}]),module.exports=path},2596:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/typeahead-autocomplete/typeahead.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<input type="text" ng-model="$.field.Settings.Placeholder" class="b-input form-control" placeholder="{{$.field.Settings.Placeholder}}"/>')}]),module.exports=path},6869:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-file/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Allow Upload Multiple File</label> <label class="b-switch d-block"> <input type="checkbox" ng-model="$.currentField.Settings.AllowUploadMultipleFile"> <span class="slider"></span> </label> </div> <div class="b-field" ng-if="currentField.Settings.AllowUploadMultipleFile"> <label class="form-label">Max File Count</label> <input type="text" ng-model="$.currentField.Settings.MaxFileCount" class="b-input form-control" placeholder="Max File Count"/> </div> <div class="b-field"> <label class="form-label">Max File Length(KB)</label> <input type="text" ng-model="$.currentField.Settings.MaxFileLength" class="b-input form-control" placeholder="Max File Length"/> </div> <div class="b-field"> <label class="form-label">Upload By</label> <select ng-model="$.currentField.Settings.UploadBy" class="b-input form-control" chosen required> <option value="angular">Angular</option> <option value="jquery">jquery</option> </select> </div>')}]),module.exports=path},7790:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-file/upload-file.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<input type="file" class="b-input form-control"/>')}]),module.exports=path},3295:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-image/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Upload Label</label> <input type="text" ng-model="$.currentField.Settings.UploadLabel" class="b-input form-control" placeholder="Upload Label"/> </div> <div class="mb-3 m-b-10"> <label class="form-label">Allow Upload Multiple File</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.AllowUploadMultipleFile"/> <div class="slider"></div> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.AllowUploadMultipleFile"> <label class="form-label">Max File Count</label> <input type="text" ng-model="$.currentField.Settings.MaxFileCount" class="b-input form-control" placeholder="Max File Count"/> </div> <div class="b-field"> <label class="form-label">Max File Length(KB)</label> <input type="text" ng-model="$.currentField.Settings.MaxFileLength" class="b-input form-control" placeholder="Max File Length"/> </div> <div class="mb-3 m-b-10"> <label class="form-label">Resize Large Images</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ResizeLargeImage"/> <div class="slider"></div> </label> </div> <div class="b-field" ng-if="$.currentField.Settings.ResizeLargeImage"> <label class="form-label">Resize Width</label> <input type="text" ng-model="$.currentField.Settings.LargeImageWidth" class="b-input form-control" placeholder="Width"/> </div> <div class="b-field" ng-if="$.currentField.Settings.ResizeLargeImage"> <label class="form-label">Resize Height(Auto Height = 0)</label> <input type="text" ng-model="$.currentField.Settings.LargeImageHeight" class="b-input form-control" placeholder="Height"/> </div> <div ng-repeat="thumbnail in $.currentField.Settings.Thumbnails" style="padding:10px;margin-bottom:10px;border:solid 1px #ccc"> <div class="b-field"> <label class="form-label"> Thumbnail Name <span class="pull-right cursor-pointer" ng-click="$.currentField.Settings.Thumbnails.splice($index,1)"> <i class="codicon codicon-trash"></i> </span> </label> <input type="text" ng-model="thumbnail.Name" class="b-input form-control"/> </div> <div class="b-field"> <label class="form-label">Width X Height (px)</label> <div class="col-xs-6 p-0"> <input type="text" ng-model="thumbnail.Width" class="b-input form-control"/> </div> <div class="col-xs-6 p-0"> <input type="text" ng-model="thumbnail.Height" class="b-input form-control"/> </div> <p class="pull-right m-t-5 small">Height 0 : auto</p> <div class="clearfix"></div> </div> </div> <div class="b-field" ng-init="$.currentField.Settings.Thumbnails=$.currentField.Settings.Thumbnails||[]"> <button type="button" class="btn btn-primary" ng-click="$.currentField.Settings.Thumbnails.push({})"> <i class="codicon codicon-plus"></i> Add Thumbnail </button> </div> <div class="b-field"> <label class="form-label">Upload By</label> <select ng-model="$.currentField.Settings.UploadBy" class="b-input form-control" chosen required> <option value="angular">Angular</option> <option value="jquery">jquery</option> <option value="dnn">dnn</option> </select> </div>')}]),module.exports=path},6464:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/upload-image/upload-image.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="card b-custom-selective mb-4"> <div class="card-body text-center"> <i class="fs-1 codicon codicon-plus text-muted mb-4 d-block"></i> <h5 class="card-title text-nowrap">{{$.field.Settings.UploadLabel}}</h5> </div> </div>')}]),module.exports=path},1798:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/edit-step.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<b-right-widget ng-if="$.workingMode==\'edit-step\'" data-title="Edit Step" data-icon="notebook-template" data-subtitle="Add or edit grid step" data-await-action="$.awaitAction"> <div class="d-flex"> <div class="col-7 b-splitter border-end pe-3"> <div class="b-field"> <label class="form-label">Step Name</label> <div class="b-input-group"> <input type="text" id="txtStepName" class="b-input form-control" ng-model="$.step.Name" placeholder="Enter step name" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Step Title</label> <div class="b-input-group"> <input type="text" id="txtStepTitle" class="b-input form-control" ng-model="$.step.Title" placeholder="Enter step title" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div> <div class="col-5 ps-3"> <div class="b-field"> <label class="form-label">Step Pane Css Class</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.step.PaneCssClass" placeholder="Enter step pane css class" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Step Icon</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.step.Icon" placeholder="Enter step icon" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">View Order</label> <div class="b-input-group"> <input type="number" class="b-input form-control" ng-model="$.step.ViewOrder" placeholder="Enter step view order" autocomplete="off"/> <span><i class="codicon codicon-list-ordered"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Description</label> <div class="b-input-group"> <textarea ng-model="$.step.Description" class="b-input form-control" rows="2" placeholder="Enter step description"></textarea> <span class="my-auto"><i class="codicon codicon-debug-stackframe-active"></i></span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Show Condition(s)</label> <b-condition-list ng-model="$.step.ShowConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <div class="b-field"> <label class="form-label">Enable Condition(s)</label> <b-condition-list ng-model="$.step.EnableConditions" data-source="[\'fields\',\'form\',\'variables\',\'actionParams\']" data-variables="variables" data-fields="fields" data-action-params="$.action.Params"></b-condition-list> </div> <hr class="mb-4"/> <div class="mb-1 d-flex justify-content-end mt-auto"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSaveStepClick()"> <i class="codicon codicon-save"></i> Save Step </button> <button type="button" class="b-btn btn-cancel" ng-click="$.onCancelStepClick()"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </b-right-widget>')}]),module.exports=path},3308:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/sidebar-settings.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="b-field"> <label class="form-label">Validate Step by Step</label> <label class="b-switch d-block"> <input type="checkbox" hidden="hidden" ng-model="$.currentField.Settings.ValidateStepbyStep"/> <div class="slider"></div> </label> </div>')}]),module.exports=path},3443:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/field-types/wizard/wizard.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,' <div class="b-table theme-gray mb-4"> <div class="table-body pt-4"> <div class="d-flex steps-name"> <div class="col-2">Step Name</div> <div class="col-3">Step Title</div> <div class="col-4">Condition(s)</div> <div class="col-2"> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-up d-inline-block me-1"></i> </button> <button type="button" class="b-clean text-light" disabled="disabled"> <i class="codicon codicon-arrow-down d-inline-block"></i> </button> </div> <div class="col-1"> <i class="codicon codicon-ellipsis"></i> </div> </div> <div class="d-flex table-row" ng-repeat="step in $.field.Settings.Steps | orderBy:\'ViewOrder\'" ng-style="{\'order\':($index+1)}"> <div class="col-2 my-auto"> {{step.Name}} </div> <div class="col-3 my-auto"> <span class="text"> {{step.Title}} </span> <span class="subtext"> {{step.Description}} </span> </div> <div class="col-4 my-auto"> <span class="subtext" ng-if="step.ShowConditions.length"> {{step.ShowConditions.length}} Show Condition(s) </span> <span class="subtext" ng-if="step.EnableConditions.length"> {{step.EnableConditions.length}} Enable Condition(s) </span> </div> <div class="col-2 my-auto"> <button type="button" class="b-clean text-light" ng-disabled="$index==0"> <i class="codicon codicon-arrow-up d-inline-block me-1" ng-click="$.onStepSwapClick($index,$index-1)"></i> </button> <button type="button" class="b-clean text-light" ng-disabled="$index==$.steps.length-1"> <i class="codicon codicon-arrow-down d-inline-block" ng-click="$.onStepSwapClick($index,$index+1)"></i> </button> </div> <div class="col-1"> <div class="b-multi-btns"> <button type="button" class="p-0" ng-click="$.onEditStepClick(step)" b-custom-tooltip data-bs-placement="bottom" title="Edit Step"> <i class="codicon codicon-edit"></i> </button> <button type="button" ng-click="$.field.Settings.Steps.splice($index,1)" b-custom-tooltip data-bs-placement="bottom" title="Delete Step"> <i class="codicon codicon-trash"></i> </button> </div> </div> </div> </div> <div class="table-footer"> <button type="button" class="b-btn btn-action" ng-click="$.onAddStepClick()"> <i class="codicon codicon-plus"></i> Add Step </button> </div> </div> <div ng-repeat="step in $.field.Settings.Steps | orderBy:\'ViewOrder\'" data-pane="WizardStep_{{step.Name}}" data-pane-title="{{step.Name}} Pane" data-parent-id="{{$.field.FieldID}}"></div> <div ng-include="$.editStepWidget"></div>')}]),module.exports=path},7396:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/bind-entity/bind-entity.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="create-data-source"> <div class="d-flex justify-content-end"> <div class="b-radio d-inline-block mb-3" ng-model="$.bindEntityService.QueryType" required> <label class="me-3"> <input type="radio" name="queryType{{$.bindEntityService.ServiceID}}" ng-value="0" ng-model="$.bindEntityService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Query Designer </label> <label> <input type="radio" name="queryType{{$.bindEntityService.ServiceID}}" ng-value="1" ng-model="$.bindEntityService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Custom Query </label> </div> </div> <div ng-if="$.bindEntityService.QueryType==0"> <div class="row"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDatabase"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Database </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDatabase" class="group-content collapse show"> <div class="b-field"> <label class="form-label">Database Object Type</label> <select id="drpDatabaseObjectType" ng-model="$.bindEntityService.DatabaseObjectType" class="b-input form-select" required> <option value="" disabled="disabled">Select database object type</option> <option ng-value="0">Stored Procedure</option> <option ng-value="1">Query Text</option> </select> </div> <div class="b-field" ng-if="$.bindEntityService.DatabaseObjectType==0"> <label class="form-label">Database Object Name</label> <div class="b-input-group"> <div class="b-input form-control d-flex"> <div class="col-4"> <input type="text" id="txtSpPrefix" ng-model="$.bindEntityService.Settings.StoredProcedurePrefixName" class="b-input-nobg" placeholder="Prefix name" required/> </div> <div class="col-8"> <input type="text" id="txtSpPostfix" ng-model="$.bindEntityService.Settings.StoredProcedurePostfixName" ng-change="$.bindEntityService.Settings.StoredProcedureNameModified=true" class="b-input-nobg" placeholder="Example GetProducts" autocomplete="off" required/> </div> </div> <span><i class="codicon codicon-table"></i></span> </div> </div> </div> </div> </div> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpBaseQuery"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Base Query </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpBaseQuery" class="group-content"> <div class="b-field"> <div class="row"> <div monaco-editor ng-model="$.bindEntityService.BaseQuery" data-language="sql" data-height="150px" required> </div> <button type="button" class="b-btn justify-content-center mt-3 p-1" ng-click="$.onResetBaseQueryClick()"> Reset Query </button> </div> </div> </div> </div> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th>ViewOrder</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="d-flex"> <div class="col-8 b-splitter border-end pe-2"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpMapToEntity"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Map To Entity </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpMapToEntity" class="group-content collapse show"> <div class="b-table theme-gray"> <div class="table-header"> <div class="header-label"> <h4 class="header-title">entity</h4> <span class="header-subtitle">This service must mapped to a entity</span> </div> <div class="header-tools"> <div class="col-11"> <select id="drpEntityID" ng-model="$.bindEntityService.EntityID" class="b-input form-select b-btn btn-action text-start" ng-options="entity.EntityID as entity.EntityName for entity in $.entities" ng-change="$.onSelectedEntityChange()" chosen placeholder-text-single="\'Select entity\'" required> </select> </div> <div class="col-1"> <i role="button" class="codicon codicon-refresh text-light ms-2 mt-2" ng-click="$.onRefreshEntityClick()"></i> </div> </div> </div> <div class="table-body" ng-if="$.bindEntityService.Entities.length"> <div class="grid columns-name"> <div class="g-col-1"></div> <div class="g-col-3">Column Name</div> <div class="g-col-3">Value Type</div> <div class="g-col-5">Value</div> </div> <div class="grid table-row" ng-repeat="prop in $.bindEntityService.EntityColumns"> <div class="g-col-1"> <label class="b-checkbox"> <input type="checkbox" ng-model="prop.IsSelected"/> <i class="checkbox-icon"></i> </label> </div> <div class="g-col-3"> {{prop.ColumnName}} </div> <div class="g-col-3"> <select ng-model="prop.ValueType" class="b-input form-select ps-2 pe-3" ng-disabled="!prop.IsSelected"> <option value="" disabled="disabled">Value Type</option> <option value="DataSource">Data Source</option> <option value="Custom">Custom</option> </select> </div> <div class="g-col-5" ng-if="prop.ValueType==\'DataSource\'"> <div class="d-flex"> <div class="col-4 p-0"> <select ng-model="prop.EntityAliasName" class="b-input form-select ps-2 pe-3" ng-options="entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities" ng-change="$.onSelectedEntityAliasChange(prop)" ng-disabled="!prop.IsSelected"> <option value="" disabled="disabled">Entity</option> </select> </div> <div class="col-8 p-0" ng-if="prop.Columns.length"> <select ng-model="prop.ColumnName" class="b-input form-select ps-2 pe-3" ng-options="column.ColumnName as column.ColumnName for column in prop.Columns" chosen placeholder-text-single="\'Column\'" ng-disabled="!prop.IsSelected"> </select> </div> </div> </div> <div class="g-col-5" ng-if="prop.ValueType==\'Custom\'"> <input type="text" ng-model="prop.Value" class="b-input form-control" placeholder="Column Value" ng-disabled="!prop.IsSelected"/> </div> </div> </div> <div class="table-footer"> <div ng-if="!$.bindEntityService.EntityID" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No entity selected.</h4> <span class="subtext"> Data source service must mapped to a entity. </span> </div> </div> <div ng-if="$.bindEntityService.EntityID && !$.bindEntityService.Entities.length" class="b-notify notify-warning position-relative mb-4"> <i class="codicon codicon-arrow-small-right position-absolute top-0 end-0"></i> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No Entities selected.</h4> <span class="subtext"> Before set entity columns select one or more entity. </span> </div> </div> <p class="b-invalid">{{$.form.error.EntityColumns}}</p> </div> </div> </div> </div> </div> <div class="col ps-2"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpSelectEntities"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Select Entities </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpSelectEntities" class="group-content selected-entities-diagram collapse show"> <button type="button" class="b-btn btn-action btn-full mb-4" ng-click="$.onAddEntityClick()"> <i class="codicon codicon-plus"></i> Add Entity </button> <div ng-repeat="entity in $.bindEntityService.Entities" class="entity-item"> <div class="header" data-bs-toggle="collapse" data-bs-target="#pnlEntityColumns{{$index}}" role="button" ng-click="$.onEntityExpandClick(entity)"> <div class="title"> <label class="entity-name">{{entity.EntityName}} as {{entity.AliasName}}</label> <span class="entity-alias">({{entity.TableName}})</span> </div> <ul class="tools"> <li> <a b-custom-tooltip data-bs-placement="left" title="Refresh"> <i class="codicon codicon-refresh"></i> </a> </li> <li class="me-0"> <a b-custom-tooltip data-bs-placement="left" title="Close" ng-click="$.onDeleteEntityClick(entity,$index)"> <i class="codicon codicon-close"></i></a> </li> </ul> </div> <div id="pnlEntityColumns{{$index}}" class="columns collapse"> <div class="b-list-group"> <ul class="list"> <li class="list-item" ng-repeat="column in entity.Columns"> <a class="item-label"> <i ng-if="!column.IsSelected" class="codicon codicon-chrome-maximize fs-4 text-start"></i> <i ng-if="column.IsSelected" class="codicon codicon-check fs-4 text-start"></i> {{column.ColumnName}} </a> </li> </ul> </div> </div> <div ng-if="$.bindEntityService.Entities.length>1" class="entity-join-relationships" role="button"> <i ng-if="entity.EnableJoin" class="codicon codicon-diff-added add-join" role="button" ng-click="$.onAddJoinRelationshipClick(entity)"></i> Join Relationships <label class="b-switch switch-sm position-absolute top-0 end-0 me-2 mt-2"> <input type="checkbox" ng-model="entity.EnableJoin"> <span class="slider"></span> </label> <div ng-if="entity.EnableJoin" ng-repeat="relationship in entity.JoinRelationships" class="mb-2"> <hr/> <div class="d-flex mb-1"> <div class="col-4 p-0"> <p class="b-input form-select mb-0">{{entity.AliasName}}</p> </div> <div class="col-4 p-0"> <select id="drpJoinType" ng-model="relationship.JoinType" class="b-input form-select" required> <option disabled="disabled" value="">Join</option> <option value="INNER JOIN">Inner Join</option> <option value="LEFT JOIN">Left Join</option> <option value="RIGHT JOIN">Right Join</option> <option value="OUTER JOIN">Outer Join</option> <option value="LEFT JOIN EXCLUDING INNER JOIN">Left Join Excluding Inner Join </option> <option value="RIGHT JOIN EXCLUDING INNER JOIN">Right Join Excluding Inner Join </option> <option value="OUTER JOIN EXCLUDING INNER JOIN">Outer Join Excluding Inner Join </option> <option value="CROSS JOIN">Cross Join</option> </select> </div> <div class="col-4 p-0"> <select id="drpRightEntityAliasName" ng-model="relationship.RightEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship)" required> <option disabled="disabled" value="">Right</option> </select> </div> </div> <div class="b-input-group"> <input type="text" id="txtJoinConditions" ng-model="relationship.JoinConditions" class="b-input form-control" placeholder="Example : u.UserID = r.UserID"/> <span><i>on</i></span> </div> </div> </div> </div> <div ng-if="!$.bindEntityService.Entities.length" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No selected entities.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddEntityClick()"> Add Entity </button> to add a entity!. </span> </div> </div> <p class="b-invalid">{{$.form.error.Entities}}</p> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpJoinRelationships"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Join Relationships </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpJoinRelationships" class="group-content selected-entities-diagram collapse show"> <button type="button" class="b-btn btn-action btn-full mb-4" ng-click="$.onAddJoinRelationshipClick2()"> <i class="codicon codicon-plus"></i> Add Join Relationship </button> <div ng-repeat="relationship in $.bindEntityService.JoinRelationships" class="mb-2"> <div class="d-flex mb-1"> <div class="col-4 p-0"> <select ng-model="relationship.LeftEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship,1)" required> <option disabled="disabled" value="">Left</option> </select> </div> <div class="col-4 p-0"> <select ng-model="relationship.JoinType" class="b-input form-select" required> <option disabled="disabled" value="">Join</option> <option value="INNER JOIN">Inner Join</option> <option value="LEFT JOIN">Left Join</option> <option value="RIGHT JOIN">Right Join</option> <option value="OUTER JOIN">Outer Join</option> <option value="LEFT JOIN EXCLUDING INNER JOIN">Left Join Excluding Inner Join </option> <option value="RIGHT JOIN EXCLUDING INNER JOIN">Right Join Excluding Inner Join </option> <option value="OUTER JOIN EXCLUDING INNER JOIN">Outer Join Excluding Inner Join </option> <option value="CROSS JOIN">Cross Join</option> </select> </div> <div class="col-4 p-0"> <select ng-model="relationship.RightEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.bindEntityService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship,2)" required> <option disabled="disabled" value="">Right</option> </select> </div> </div> <div class="b-input-group"> <input type="text" id="txtJoinConditions" ng-model="relationship.JoinConditions" class="b-input form-control" placeholder="Example : u.UserID = r.UserID"/> <span><i>on</i></span> </div> <button type="button" class="b-btn btn-action btn-sm" ng-click="$.bindEntityService.JoinRelationships.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> <hr/> </div> </div> </div> </div> </div> <div ng-if="$.bindEntityService.Entities.length"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpFilters"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Filters <span ng-show="bindEntityService.Filters.length">({{bindEntityService.Filters.length}})</span> </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpFilters" class="group-content collapse"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Type</th> <th>Expression</th> <th>Condition Group</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="filter in $.bindEntityService.Filters"> <td class="w-150"> <select ng-model="filter.Type" class="b-input form-select"> <option disabled="disabled" value="">Type</option> <option ng-value="0" disabled="disabled">Standard</option> <option ng-value="1">Custom</option> </select> </td> <td ng-if="filter.Type==0"></td> <td ng-if="filter.Type==1"> <input type="text" ng-model="filter.CustomQuery" class="b-input form-control" placeholder="Custom Query" required/> </td> <td class="w-200"> <input type="text" ng-model="filter.ConditionGroupName" class="b-input form-control" placeholder="Custom Query" required/> </td> <td> <button type="button" class="b-btn btn-cancel" ng-click="$.bindEntityService.Filters.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="20"> <button type="button" class="b-btn" ng-click="$.onAddFilterClick()"> <i class="codicon codicon-plus me-0"></i> </button> </th> </tr> </tfoot> </table> </div> </div> </div> </div> <div ng-if="$.bindEntityService.QueryType==1"> <div class="b-field"> <div monaco-editor ng-model="$.bindEntityService.CustomQuery" class="b-input form-control b-monaco" data-language="sql" data-height="350px" required></div> </div> </div> </div> <div id="wnSelectEntity" b-custom-modal class="modal fade b-modal-dark" tabindex="-1"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Add Entity </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body" ng-class="{\'was-validated\':$.selectedEntityForm.validated}"> <div class="b-field mb-1"> <div class="b-input-group"> <input type="text" ng-model="$.searchEntities" class="b-input form-control" b-custom-focus="focusSearchEntity" placeholder="Search by entity name"/> <span><i class="codicon codicon-search"></i></span> </div> </div> <div class="b-field mb-2"> <div class="b-list-group"> <ul class="list"> <li class="list-item" ng-repeat="entity in $.entities | filter:{\'EntityName\':$.searchEntities}"> <a class="item-label" ng-class="{\'active\':entity.IsSelected}" ng-click="$.onEntityItemClick(entity)">{{entity.EntityName}}</a> </li> </ul> </div> </div> <div class="b-field"> <div class="b-input-group"> <input type="text" id="txtselectedEntityAliasName" ng-model="$.selectedEntity.AliasName" class="b-input form-control" b-custom-focus="focusEntityAliasName" placeholder="Enter entity alias name" required/> <span><i class="codicon codicon-bell"></i></span> </div> </div> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSelectEntityClick()" ng-disabled="$.running"> <i class="codicon codicon-plus"></i> Add Entity </button> <button type="button" class="b-btn btn-cancel" data-bs-dismiss="modal"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </div> </div> </div>')}]),module.exports=path},7586:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/custom-qeury/custom-query.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="create-custom-query"> <div class="row"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDatabase"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Database </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDatabase" class="group-content collapse show"> <div class="b-field"> <label class="form-label">Database Object Type</label> <select id="drpDatabaseObjectType" ng-model="$.customQueryService.DatabaseObjectType" class="b-input form-select" required> <option value="" disabled="disabled">Select database object type</option> <option ng-value="0">Stored Procedure</option> <option ng-value="1">Query Text</option> </select> </div> <div class="b-field" ng-if="$.customQueryService.DatabaseObjectType==0"> <label class="form-label">Database Object Name</label> <div class="b-input-group"> <div class="b-input form-control d-flex"> <div class="col-4"> <input type="text" id="txtSpPrefix" ng-model="$.customQueryService.Settings.StoredProcedurePrefixName" class="b-input-nobg" placeholder="Prefix name" required/> </div> <div class="col-8"> <input type="text" id="txtSpPostfix" ng-model="$.customQueryService.Settings.StoredProcedurePostfixName" ng-change="$.customQueryService.Settings.StoredProcedureNameModified=true" class="b-input-nobg" placeholder="Example GetProducts" autocomplete="off" required/> </div> </div> <span><i class="codicon codicon-table"></i></span> </div> </div> </div> </div> </div> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-dark"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" ng-if="$.customQueryService.DatabaseObjectType==1" class="btn btn-sm btn-primary" ng-click="$.onGDetectServiceParams()"> Detect Params </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpSQLQuery"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> SQL Query </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpSQLQuery" class="group-content collapse show"> <label class="form-label">Sql Query</label> <div id="editorSqlQuery" monaco-editor ng-model="$.customQueryService.Query" data-language="sql" data-height="350px" required> </div> </div> </div> </div>')}]),module.exports=path},7109:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/data-source/data-source.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="create-data-source"> <div class="d-flex justify-content-end"> <div class="b-radio d-inline-block mb-3" ng-model="$.dataSourceService.QueryType" required> <label class="me-3"> <input type="radio" name="queryType{{$.dataSourceService.ServiceID}}" ng-value="0" ng-model="$.dataSourceService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Query Designer </label> <label> <input type="radio" name="queryType{{$.dataSourceService.ServiceID}}" ng-value="1" ng-model="$.dataSourceService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Custom Query </label> </div> </div> <div ng-if="$.dataSourceService.QueryType==0"> <div class="row"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDatabase"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Database </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDatabase" class="group-content collapse show"> <div class="b-field"> <label class="form-label">Database Object Type</label> <select id="drpDatabaseObjectType" ng-model="$.dataSourceService.DatabaseObjectType" class="b-input form-select" required> <option value="" disabled="disabled">Select database object type</option> <option ng-value="0">Stored Procedure</option> <option ng-value="1">Query Text</option> </select> </div> <div class="b-field" ng-if="$.dataSourceService.DatabaseObjectType==0"> <label class="form-label">Database Object Name</label> <div class="b-input-group"> <div class="b-input form-control d-flex"> <div class="col-4"> <input type="text" id="txtSpPrefix" ng-model="$.dataSourceService.Settings.StoredProcedurePrefixName" class="b-input-nobg" placeholder="Prefix name" required/> </div> <div class="col-8"> <input type="text" id="txtSpPostfix" ng-model="$.dataSourceService.Settings.StoredProcedurePostfixName" ng-change="$.dataSourceService.Settings.StoredProcedureNameModified=true" class="b-input-nobg" placeholder="Example GetProducts" autocomplete="off" required/> </div> </div> <span><i class="codicon codicon-table"></i></span> </div> </div> </div> </div> </div> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpBaseQuery"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Base Query </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpBaseQuery" class="group-content"> <div class="b-field"> <div class="row"> <div monaco-editor ng-model="$.dataSourceService.BaseQuery" data-language="sql" data-height="150px" required> </div> <button type="button" class="b-btn justify-content-center mt-3 p-1" ng-click="$.onResetBaseQueryClick()"> Reset Query </button> </div> </div> </div> </div> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th>ViewOrder</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="d-flex"> <div class="col-8 b-splitter border-end pe-2"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpMapToViewModel"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Map To View Model </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpMapToViewModel" class="group-content collapse show"> <div class="b-table theme-gray"> <div class="table-header"> <div class="header-label"> <h4 class="header-title">View Model</h4> <span class="header-subtitle">This service must mapped to a view model</span> </div> <div class="header-tools"> <div class="col-11"> <select id="drpViewModelID" ng-model="$.dataSourceService.ViewModelID" class="b-input form-select b-btn btn-action text-start" ng-options="vm.ViewModelID as vm.ViewModelName for vm in $.viewModels" ng-change="$.onSelectedViewModelChange()" chosen placeholder-text-single="\'Select view model\'" required> </select> </div> <div class="col-1"> <i role="button" class="codicon codicon-refresh text-light ms-2 mt-2" ng-click="$.onRefreshViewModelClick()"></i> </div> </div> </div> <div class="table-body" ng-if="$.dataSourceService.Entities.length"> <div class="grid columns-name"> <div class="g-col-1"></div> <div class="g-col-3">Property Name</div> <div class="g-col-3">Value Type</div> <div class="g-col-5">Value</div> </div> <div class="grid table-row" ng-repeat="prop in $.dataSourceService.ViewModelProperties"> <div class="g-col-1"> <label class="b-checkbox"> <input type="checkbox" ng-model="prop.IsSelected"/> <i class="checkbox-icon"></i> </label> </div> <div class="g-col-3"> {{prop.PropertyName}} </div> <div class="g-col-3"> <select ng-model="prop.ValueType" class="b-input form-select ps-2 pe-3" ng-disabled="!prop.IsSelected"> <option value="" disabled="disabled">Value Type</option> <option value="DataSource">Data Source</option> <option value="Custom">Custom</option> </select> </div> <div class="g-col-5" ng-if="prop.ValueType==\'DataSource\'"> <div class="d-flex"> <div class="col-4 p-0"> <select ng-model="prop.EntityAliasName" class="b-input form-select ps-2 pe-3" ng-options="entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities" ng-change="$.onSelectedEntityAliasChange(prop)" ng-disabled="!prop.IsSelected"> <option value="" disabled="disabled">Entity</option> </select> </div> <div class="col-8 p-0" ng-if="prop.Columns.length"> <select ng-model="prop.ColumnName" class="b-input form-select ps-2 pe-3" ng-options="column.ColumnName as column.ColumnName for column in prop.Columns" chosen placeholder-text-single="\'Column\'" ng-disabled="!prop.IsSelected"> </select> </div> </div> </div> <div class="g-col-5" ng-if="prop.ValueType==\'Custom\'"> <input type="text" ng-model="prop.Value" class="b-input form-control" placeholder="Property Value" ng-disabled="!prop.IsSelected"/> </div> </div> </div> <div class="table-footer"> <div ng-if="!$.dataSourceService.ViewModelID" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No view model selected.</h4> <span class="subtext"> Data source service must mapped to a view model. </span> </div> </div> <div ng-if="$.dataSourceService.ViewModelID && !$.dataSourceService.Entities.length" class="b-notify notify-warning position-relative mb-4"> <i class="codicon codicon-arrow-small-right position-absolute top-0 end-0"></i> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No Entities selected.</h4> <span class="subtext"> Before set view model properties select one or more entity. </span> </div> </div> <p class="b-invalid">{{$.form.error.ViewModelProperties}}</p> </div> </div> </div> </div> </div> <div class="col ps-2"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpSelectEntities"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Select Entities </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpSelectEntities" class="group-content selected-entities-diagram collapse show"> <button type="button" class="b-btn btn-action btn-full mb-4" ng-click="$.onAddEntityClick()"> <i class="codicon codicon-plus"></i> Add Entity </button> <div ng-repeat="entity in $.dataSourceService.Entities" class="entity-item"> <div class="header" data-bs-toggle="collapse" data-bs-target="#pnlEntityColumns{{$index}}" role="button" ng-click="$.onEntityExpandClick(entity)"> <div class="title"> <label class="entity-name">{{entity.EntityName}} as {{entity.AliasName}}</label> <span class="entity-alias">({{entity.TableName}})</span> </div> <ul class="tools"> <li> <a b-custom-tooltip data-bs-placement="left" title="Refresh"> <i class="codicon codicon-refresh"></i> </a> </li> <li class="me-0"> <a b-custom-tooltip data-bs-placement="left" title="Close" ng-click="$.onDeleteEntityClick(entity,$index)"> <i class="codicon codicon-close"></i></a> </li> </ul> </div> <div id="pnlEntityColumns{{$index}}" class="columns collapse"> <div class="b-list-group"> <ul class="list"> <li class="list-item" ng-repeat="column in entity.Columns"> <a class="item-label"> <i ng-if="!column.IsSelected" class="codicon codicon-chrome-maximize fs-4 text-start"></i> <i ng-if="column.IsSelected" class="codicon codicon-check fs-4 text-start"></i> {{column.ColumnName}} </a> </li> </ul> </div> </div> <div ng-if="$.dataSourceService.Entities.length>1" class="entity-join-relationships" role="button"> <i ng-if="entity.EnableJoin" class="codicon codicon-diff-added add-join" role="button" ng-click="$.onAddJoinRelationshipClick(entity)"></i> Join Relationships <label class="b-switch switch-sm position-absolute top-0 end-0 me-2 mt-2"> <input type="checkbox" ng-model="entity.EnableJoin"> <span class="slider"></span> </label> <div ng-if="entity.EnableJoin" ng-repeat="relationship in entity.JoinRelationships" class="mb-2"> <hr/> <div class="d-flex mb-1"> <div class="col-4 p-0"> <p class="b-input form-select mb-0">{{entity.AliasName}}</p> </div> <div class="col-4 p-0"> <select id="drpJoinType" ng-model="relationship.JoinType" class="b-input form-select" required> <option disabled="disabled" value="">Join</option> <option value="INNER JOIN">Inner Join</option> <option value="LEFT JOIN">Left Join</option> <option value="RIGHT JOIN">Right Join</option> <option value="OUTER JOIN">Outer Join</option> <option value="LEFT JOIN EXCLUDING INNER JOIN">Left Join Excluding Inner Join </option> <option value="RIGHT JOIN EXCLUDING INNER JOIN">Right Join Excluding Inner Join </option> <option value="OUTER JOIN EXCLUDING INNER JOIN">Outer Join Excluding Inner Join </option> <option value="CROSS JOIN">Cross Join</option> </select> </div> <div class="col-4 p-0"> <select id="drpRightEntityAliasName" ng-model="relationship.RightEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship)" required> <option disabled="disabled" value="">Right</option> </select> </div> </div> <div class="b-input-group"> <input type="text" id="txtJoinConditions" ng-model="relationship.JoinConditions" class="b-input form-control" placeholder="Example : u.UserID = r.UserID"/> <span><i>on</i></span> </div> </div> </div> </div> <div ng-if="!$.dataSourceService.Entities.length" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No selected entities.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddEntityClick()"> Add Entity </button> to add a entity!. </span> </div> </div> <p class="b-invalid">{{$.form.error.Entities}}</p> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpJoinRelationships"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Join Relationships </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpJoinRelationships" class="group-content selected-entities-diagram collapse show"> <button type="button" class="b-btn btn-action btn-full mb-4" ng-click="$.onAddJoinRelationshipClick2()"> <i class="codicon codicon-plus"></i> Add Join Relationship </button> <div ng-repeat="relationship in $.dataSourceService.JoinRelationships" class="mb-2"> <div class="d-flex mb-1"> <div class="col-4 p-0"> <select ng-model="relationship.LeftEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship,1)" required> <option disabled="disabled" value="">Left</option> </select> </div> <div class="col-4 p-0"> <select ng-model="relationship.JoinType" class="b-input form-select" required> <option disabled="disabled" value="">Join</option> <option value="INNER JOIN">Inner Join</option> <option value="LEFT JOIN">Left Join</option> <option value="RIGHT JOIN">Right Join</option> <option value="OUTER JOIN">Outer Join</option> <option value="LEFT JOIN EXCLUDING INNER JOIN">Left Join Excluding Inner Join </option> <option value="RIGHT JOIN EXCLUDING INNER JOIN">Right Join Excluding Inner Join </option> <option value="OUTER JOIN EXCLUDING INNER JOIN">Outer Join Excluding Inner Join </option> <option value="CROSS JOIN">Cross Join</option> </select> </div> <div class="col-4 p-0"> <select ng-model="relationship.RightEntityAliasName" class="b-input form-select" ng-options="entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities" ng-change="$.onJoinRelationshipEntityChange(relationship,2)" required> <option disabled="disabled" value="">Right</option> </select> </div> </div> <div class="b-input-group"> <input type="text" id="txtJoinConditions" ng-model="relationship.JoinConditions" class="b-input form-control" placeholder="Example : u.UserID = r.UserID"/> <span><i>on</i></span> </div> <button type="button" class="b-btn btn-action btn-sm" ng-click="$.dataSourceService.JoinRelationships.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> <hr/> </div> </div> </div> </div> </div> <div ng-if="$.dataSourceService.Entities.length"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpFilters"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Filters <span ng-show="dataSourceService.Filters.length">({{dataSourceService.Filters.length}})</span> </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpFilters" class="group-content collapse"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Type</th> <th>Expression</th> <th>Condition Group</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="filter in $.dataSourceService.Filters"> <td class="w-150"> <select ng-model="filter.Type" class="b-input form-select"> <option disabled="disabled" value="">Type</option> <option ng-value="0" disabled="disabled">Standard</option> <option ng-value="1">Custom</option> </select> </td> <td ng-if="filter.Type==0"></td> <td ng-if="filter.Type==1"> <input type="text" ng-model="filter.CustomQuery" class="b-input form-control" placeholder="Custom Query" required/> </td> <td class="w-200"> <input type="text" ng-model="filter.ConditionGroupName" class="b-input form-control" placeholder="Custom Query" required/> </td> <td> <button type="button" class="b-btn btn-cancel" ng-click="$.dataSourceService.Filters.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="20"> <button type="button" class="b-btn" ng-click="$.onAddFilterClick()"> <i class="codicon codicon-plus me-0"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpSortItems"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Sorting </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpSortItems" class="group-content collapse"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Type</th> <th>Column Name</th> <th>Sort Type</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="sortItem in $.dataSourceService.SortItems"> <td class="w-150"> <select ng-model="sortItem.Type" class="b-input form-select"> <option disabled="disabled" value="">Type</option> <option ng-value="0">Standard</option> <option ng-value="1">Custom</option> </select> </td> <td ng-if="sortItem.Type==0"> <div class="d-flex"> <div class="col-4 p-0"> <select ng-model="sortItem.EntityAliasName" class="b-input form-select ps-2 pe-3" ng-options="entity.AliasName as entity.AliasName for entity in $.dataSourceService.Entities" ng-change="$.onSortItemSelectedEntityAliasChange(sortItem)"> <option value="" disabled="disabled">Entity</option> </select> </div> <div class="col-8 p-0" ng-if="sortItem.Columns.length"> <select ng-model="sortItem.ColumnName" class="b-input form-select ps-2 pe-3" ng-options="column.ColumnName as column.ColumnName for column in sortItem.Columns" chosen placeholder-text-single="\'Column\'"> </select> </div> </div> </td> <td ng-if="sortItem.Type==1"> <input type="text" ng-model="sortItem.CustomColumn" class="b-input form-control" placeholder="Column Name" required/> </td> <td ng-if="sortItem.Type==0"> <select ng-model="sortItem.SortType" class="b-input form-select" chosen placeholder-text-single="\'Select sort type\'"> <option disabled="disabled" value=""></option> <option value="Asc">Asc</option> <option value="Desc">Desc</option> </select> </td> <td> <button type="button" class="b-btn btn-cancel" ng-click="$.dataSourceService.SortItems.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="20"> <button type="button" class="b-btn" ng-click="$.onAddSortItemClick()"> <i class="codicon codicon-plus me-0"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <p class="b-invalid">{{$.form.error.SortItems}}</p> <div ng-if="$.service.ResultType == \'List\'" class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpPaging"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Paging </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpPaging" class="group-content collapse"> <div class="b-field"> <label class="b-checkbox"> <input type="checkbox" ng-model="$.dataSourceService.EnablePaging" ng-change="$.onEnablePagingChange()"/> <i class="checkbox-icon"></i> Enable Paging </label> </div> <div ng-if="$.dataSourceService.EnablePaging"> <div class="b-field"> <label class="form-label">Page Index Param</label> <select ng-model="$.dataSourceService.PageIndexParam" class="b-input form-control" ng-options="param.ParamName as param.ParamName for param in $.service.Params"> <option value="">Page Index Param</option> </select> </div> <div class="b-field"> <label class="form-label">Page Size Param</label> <select ng-model="$.dataSourceService.PageSizeParam" class="b-input form-control" ng-options="param.ParamName as param.ParamName for param in $.service.Params"> <option value="">Page Size Param</option> </select> </div> </div> </div> </div> </div> </div> <div ng-if="$.dataSourceService.QueryType==1"> <div class="b-field"> <div monaco-editor ng-model="$.dataSourceService.CustomQuery" class="b-input form-control b-monaco" data-language="sql" data-height="350px" required></div> </div> </div> </div> <div id="wnSelectEntity" b-custom-modal class="modal fade b-modal-dark" tabindex="-1"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <h5 class="modal-title"> Add Entity </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> </div> <div class="modal-body" ng-class="{\'was-validated\':$.selectedEntityForm.validated}"> <div class="b-field mb-1"> <div class="b-input-group"> <input type="text" ng-model="$.searchEntities" class="b-input form-control" b-custom-focus="focusSearchEntity" placeholder="Search by entity name"/> <span><i class="codicon codicon-search"></i></span> </div> </div> <div class="b-field mb-2"> <div class="b-list-group"> <ul class="list"> <li class="list-item" ng-repeat="entity in $.entities | filter:{\'EntityName\':$.searchEntities}"> <a class="item-label" ng-class="{\'active\':entity.IsSelected}" ng-click="$.onEntityItemClick(entity)">{{entity.EntityName}}</a> </li> </ul> </div> </div> <div class="b-field"> <div class="b-input-group"> <input type="text" id="txtselectedEntityAliasName" ng-model="$.selectedEntity.AliasName" class="b-input form-control" b-custom-focus="focusEntityAliasName" placeholder="Enter entity alias name" required/> <span><i class="codicon codicon-bell"></i></span> </div> </div> </div> <div class="modal-footer"> <button type="button" class="b-btn btn-submit me-2" ng-click="$.onSelectEntityClick()" ng-disabled="$.running"> <i class="codicon codicon-plus"></i> Add Entity </button> <button type="button" class="b-btn btn-cancel" data-bs-dismiss="modal"> <i class="codicon codicon-circle-slash"></i> Cancel </button> </div> </div> </div> </div>')}]),module.exports=path},8990:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/database/submit-entity/submit-entity.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="create-submit-entity"> <div class="d-flex justify-content-end"> <div class="b-radio d-inline-block mb-3" ng-model="$.submitEntityService.QueryType" required> <label class="me-3"> <input type="radio" name="queryType{{$.submitEntityService.ServiceID}}" ng-value="0" ng-model="$.submitEntityService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Query Designer </label> <label> <input type="radio" name="queryType{{$.submitEntityService.ServiceID}}" ng-value="1" ng-model="$.submitEntityService.QueryType" ng-change="$.onQueryTypeChange()" required/> <i class="input-helper"></i> Custom Query </label> </div> </div> <div ng-if="$.submitEntityService.QueryType==0"> <div class="b-radio b-required b-notify notify-warning position-relative p-3 mb-3" ng-model="$.submitEntityService.ActionType" required> <label class="me-3"> <input id="rdActionType" type="radio" name="actionType" ng-value="0" ng-model="$.submitEntityService.ActionType" ng-change="$.onActionTypeChange(0)"/> <i class="input-helper"></i> Insert & Update </label> <label class="me-3"> <input type="radio" name="actionType" ng-value="1" ng-model="$.submitEntityService.ActionType" ng-change="$.onActionTypeChange(1)"/> <i class="input-helper"></i> Insert </label> <label> <input type="radio" name="actionType" ng-value="2" ng-model="$.submitEntityService.ActionType" ng-change="$.onActionTypeChange(2)"/> <i class="input-helper"></i> Update </label> </div> <div ng-if="$.submitEntityService.ActionType>=0"> <div class="mb-3"> <label class="form-label">Select Entity</label> <div class="d-flex"> <div class="col-6"> <select id="drpEntityID" ng-model="$.submitEntityService.EntityID" class="b-input form-select" ng-options="entity.EntityID as entity.EntityName for entity in $.entities" ng-change="$.onSelectedEntityChange()" chosen inherit-select-classes="true" placeholder-text-single="\'Select entity\'" required> </select> </div> <div class="col-auto ms-2 me-2"> <button type="button" class="b-btn btn-action me-2" ng-click="$.onUpdateEntityColumnsClick()"> <i class="codicon codicon-refresh"></i> </button> </div> <div class="col-auto" ng-if="$.submitEntityService.Entity"> <button type="button" class="b-btn btn-action" ng-click="$.onAddColumnsAsParamsClick()"> Add Columns As Params </button> </div> </div> </div> <hr> <div class="row"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpDatabase"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Database </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpDatabase" class="group-content collapse show"> <div class="b-field"> <label class="form-label">Database Object Type</label> <select id="drpDatabaseObjectType" ng-model="$.submitEntityService.DatabaseObjectType" class="b-input form-select" required> <option value="" disabled="disabled">Select database object type</option> <option ng-value="0">Stored Procedure</option> <option ng-value="1">Query Text</option> </select> </div> <div ng-if="$.submitEntityService.DatabaseObjectType==0"> <div class="b-field"> <label class="form-label">Database Object Name</label> <div class="b-input-group"> <div class="b-input form-control d-flex"> <div class="col-4"> <input type="text" id="txtSpPrefix" ng-model="$.submitEntityService.Settings.StoredProcedurePrefixName" class="b-input-nobg" placeholder="Prefix name" required/> </div> <div class="col-8"> <input type="text" id="txtSpPostfix" ng-model="$.submitEntityService.Settings.StoredProcedurePostfixName" ng-change="$.submitEntityService.StoredProcedureNameModified=true" class="b-input-nobg" placeholder="Example GetProducts" autocomplete="off" required/> </div> </div> <span><i class="codicon codicon-table"></i></span> </div> </div> <div class="b-field"> <button type="button" class="b-btn btn-action btn-full mt-3"> <i class="codicon codicon-light-bulb"></i> Check SP is selectable </button> </div> </div> </div> </div> </div> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpBaseQuery"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Base Query </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpBaseQuery" class="group-content"> <div class="b-field"> <div class="row"> <div monaco-editor ng-model="$.submitEntityService.BaseQuery" data-language="sql" data-height="180px" required> </div> <div class="sol-12"> <button type="button" class="b-btn btn-action btn-full mt-3" ng-click="$.onResetBaseQueryClick()"> Reset Query </button> </div> </div> </div> </div> </div> </div> </div> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:50px"> <button class="b-btn btn-action btn-sm" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()"> Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="mb-3"> <label class="form-label">Select Entity</label> <div class="d-flex"> <div class="col-6"> <select id="drpEntityID" ng-model="$.submitEntityService.EntityID" class="b-input form-select" ng-options="entity.EntityID as entity.EntityName for entity in $.entities" ng-change="$.onSelectedEntityChange()" chosen placeholder-text-single="\'Select entity\'" required> </select> </div> <div class="col-auto ms-2 me-2"> <button type="button" class="b-btn btn-action me-2" ng-click="$.onUpdateEntityColumnsClick()"> <i class="codicon codicon-refresh"></i> </button> </div> <div class="col-auto" ng-if="$.submitEntityService.Entity"> <button type="button" class="b-btn btn-action" ng-click="$.onAddColumnsAsParamsClick()"> Add Columns As Params </button> </div> </div> </div> <hr/> <div ng-if="$.submitEntityService.Entity"> <div ng-if="$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==1" class="row clearfix"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpInsertColumns"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Insert Columns </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpInsertColumns" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th style="width:50px"> <label class="b-checkbox ps-3 ms-2"> <input type="checkbox" ng-model="$.submitEntityService.Entity.AllSelectedForInsert" ng-change="$.onSelectedInsertEntityAllColumnsChange()"/> <i class="checkbox-icon"></i> </label> </th> <th>Column Name</th> <th>Value</th> </tr> </thead> <tbody> <tr ng-repeat="column in $.submitEntityService.Entity.InsertColumns"> <td> <label class="b-checkbox ps-3 ms-2"> <input type="checkbox" ng-model="column.IsSelected" ng-change="$.onSelectedInsertEntityColumnChange(column)"/> <i class="checkbox-icon"></i> </label> </td> <td>{{column.ColumnName}}</td> <td> <input type="text" ng-model="column.ColumnValue" ng-disabled="!column.IsSelected" class="b-input form-control" placeholder="Enter column value"/> </td> </tr> </tbody> <tfoot> <tr> <th colspan="5"> <p class="b-invalid">{{$.form.error.Entity.InsertColumns}}</p> </th> </tr> </tfoot> </table> </div> </div> </div> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpInsertConditions"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Insert Conditions </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpInsertConditions" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Sql Query Condition</th> <th>Group Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="condition in $.submitEntityService.Entity.InsertConditions"> <td> <div monaco-editor ng-model="condition.SqlQuery" data-language="sql" data-height="80px" required></div> </td> <td style="width:130px"> <input type="text" ng-model="condition.GroupName" class="b-input form-control" placeholder="Enter group name"/> </td> <td style="width:50px"> <button class="b-btn btn-action btn-sm" ng-click="$.$.submitEntityService.Entity.InsertConditions.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-action btn-sm" ng-click="$.$.submitEntityService.Entity.InsertConditions.push({GroupName:\'Group\'+($.submitEntityService.Entity.InsertConditions.length+1)})"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> <div ng-if="$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==2" class="row clearfix"> <div class="col-6"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpUpdateColumns"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Update Columns </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpUpdateColumns" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th style="width:50px"> <label class="b-checkbox ps-3 ms-2"> <input type="checkbox" ng-model="$.submitEntityService.Entity.AllSelectedForUpdate" ng-change="$.onSelectedUpdateEntityAllColumnsChange()"/> <i class="checkbox-icon"></i> </label> </th> <th>Column Name</th> <th>Value</th> </tr> </thead> <tbody> <tr ng-repeat="column in $.submitEntityService.Entity.UpdateColumns"> <td> <label class="b-checkbox ps-3 ms-2"> <input type="checkbox" ng-model="column.IsSelected" ng-change="$.onSelectedUpdateEntityColumnChange(column)"/> <i class="checkbox-icon"></i> </label> </td> <td>{{column.ColumnName}}</td> <td> <input type="text" ng-model="column.ColumnValue" ng-disabled="!column.IsSelected" class="b-input form-control" placeholder="Enter column value"/> </td> </tr> </tbody> <tfoot> <tr> <th colspan="5"> <p class="b-invalid">{{$.form.error.Entity.UpdateColumns}}</p> </th> </tr> </tfoot> </table> </div> </div> </div> <div class="col-6"> <div class="b-group" ng-if="$.submitEntityService.ActionType==0 || $.submitEntityService.ActionType==2"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpUpdateConditions"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Update Conditions </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpUpdateConditions" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Sql Query Condition</th> <th>Group Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="condition in $.submitEntityService.Entity.UpdateConditions"> <td> <div monaco-editor ng-model="condition.SqlQuery" data-language="sql" data-height="80px" required></div> </td> <td style="width:130px"> <input type="text" ng-model="condition.GroupName" class="b-input form-control" placeholder="Enter group name"/> </td> <td style="width:50px"> <button class="b-btn btn-action btn-sm" ng-click="$.$.submitEntityService.Entity.UpdateConditions.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-action btn-sm" ng-click="$.$.submitEntityService.Entity.UpdateConditions.push({GroupName:\'Group\'+($.submitEntityService.Entity.UpdateConditions.length+1)})"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div> </div> </div> </div> </div> <div ng-if="$.submitEntityService.QueryType==1"> <div class="b-field"> <div monaco-editor ng-model="$.submitEntityService.CustomQuery" data-language="sql" data-height="350px" required></div> </div> </div> </div>')}]),module.exports=path},7695:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/approve-user/approve-user.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="b-btn btn-action" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Username</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Username" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">User ID</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.UserID" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div>')}]),module.exports=path},6471:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/login-user/login-user.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="b-btn btn-action" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Username</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Username" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Password</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Password" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div>')}]),module.exports=path},6112:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/register-user/register-user.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">First Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.FirstName" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Last Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.LastName" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Display Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.DisplayName" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Email</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Email" autocomplete="off"/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Username</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Username" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Password</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Password" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Repeat Password</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.RepeatPassword" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <div class="form-label">Is Approved</div> <label class="b-switch"> <input type="checkbox" ng-model="$.service.Settings.IsApproved"> <span class="slider"></span> </label> </div> </div>')}]),module.exports=path},5007:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/dnn-services/reset-password/reset-password.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="b-btn btn-action" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash me-0"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Username</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Username" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Password</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Password" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div>')}]),module.exports=path},9588:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/import-excel/import-excel.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Columns</label> </div> </div>')}]),module.exports=path},4582:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/send-email/send-email.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Email</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Email" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Subject</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Subject" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Body</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Body" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> </div>')}]),module.exports=path},9066:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/public-services/send-sms/send-sms.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="send-sms-service"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="b-field"> <label class="form-label">Provider Name</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Provider" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Mobile</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Mobile" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Message</label> <div class="b-input-group"> <input type="text" class="b-input form-control" ng-model="$.service.Settings.Message" autocomplete="off" required/> <span><i class="codicon codicon-gear"></i></span> </div> </div> <div class="b-field"> <label class="form-label">Tokens</label> <div class="b-input-group"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Token Name</th> <th>Token Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Settings.Tokens | orderBy : \'TokenType\'"> <td> <input type="text" ng-model="param.TokenName" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.TokenType" class="b-input form-control" min="0" max="255"/> </td> <td> <input type="text" ng-model="param.TokenValue" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Settings.Tokens.splice($index,1)"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceTokensClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> </div> </div> </div>')}]),module.exports=path},6163:module=>{var path="D:/Wokstation/Products/Github/BusinessEngine/Client/extensions/BusinessEngine-BasicExtensions/basic-extensions-studio/src/services-types/webservice/restful/restful.html";window.angular.module("ng").run(["$templateCache",function(c){c.put(path,'<div class="create-service-webservice"> <div class="b-group"> <div class="group-header" data-bs-toggle="collapse" data-bs-target="#grpServiceParams"> <h3 class="group-label"> <span class="group-icon"> <i class="codicon codicon-server-process"></i> </span> Service Params </h3> <span class="group-collapse"> <i class="codicon codicon-chevron-up"></i> </span> </div> <div id="grpServiceParams" class="group-content collapse show"> <table class="table table-bordered table-dark table-columns-vmiddle"> <thead> <tr> <th>Param Name</th> <th>Param Type</th> <th>Default Value</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="param in $.service.Params | orderBy : \'ViewOrder\'"> <td> <input type="text" ng-model="param.ParamName" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.ParamType" class="b-input form-control"/> </td> <td> <input type="text" ng-model="param.DefaultValue" class="b-input form-control"/> </td> <td> <input type="number" ng-model="param.ViewOrder" class="b-input form-control"/> </td> <td style="width:25px"> <button class="btn btn-sm btn-default" ng-click="$.service.Params.splice($index,1)"> <i class="codicon codicon-trash"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <td colspan="3"> <button type="button" class="b-btn btn-sm" ng-click="$.onAddServiceParamClick()"> <i class="codicon codicon-plus me-0"></i> </button> </td> </tr> </tfoot> </table> <div ng-if="!$.service.Params.length&&1==2" class="b-notify notify-warning mb-4"> <i class="codicon codicon-info b-icon-2"></i> <div class="text"> <h4 class="label">No service params.</h4> <span class="subtext"> Click <button type="button" class="b-btn btn-sm ms-2 me-2" ng-click="$.onAddServiceParamClick()">Add Param </button> for creating service param(s). entity. </span> </div> </div> </div> </div> <div class="d-flex mb-3"> <div class="col-2"> <select class="b-input form-select border-end-0 rounded-0 rounded-start" ng-model="$.service.Settings.Method"> <option value="">Service method</option> <option value="GET">GET</option> <option value="POST">POST</option> </select> </div> <div class="col-10"> <input type="text" ng-model="$.service.Settings.Url" class="b-input form-control rounded-0 rounded-end" placeholder="Service url"> </div> </div> <div class="tabs-container pb-3"> <ul class="nav nav-tabs b-tab" role="tablist"> <li class="nav-item" role="presentation"> <button class="nav-link active" id="params-tab{{$.service.ServiceID}}" data-bs-toggle="tab" data-bs-target="#params{{$.service.ServiceID}}" type="button" role="tab" aria-controls="params{{$.service.ServiceID}}" aria-selected="true">Params</button> </li> <li class="nav-item" role="presentation"> <button class="nav-link" id="authorization-tab{{$.service.ServiceID}}" data-bs-toggle="tab" data-bs-target="#authorization{{$.service.ServiceID}}" type="button" role="tab" aria-controls="authorization{{$.service.ServiceID}}" aria-selected="false">Authorization</button> </li> <li class="nav-item" role="presentation"> <button class="nav-link" id="headers-tab{{$.service.ServiceID}}" data-bs-toggle="tab" data-bs-target="#headers{{$.service.ServiceID}}" type="button" role="tab" aria-controls="headers{{$.service.ServiceID}}" aria-selected="false">Headers</button> </li> <li class="nav-item" role="presentation"> <button class="nav-link" id="body-tab{{$.service.ServiceID}}" data-bs-toggle="tab" data-bs-target="#body{{$.service.ServiceID}}" type="button" role="tab" aria-controls="body{{$.service.ServiceID}}" aria-selected="false">Body</button> </li> </ul> <div class="tab-content p-0 mb-4"> <div class="tab-pane p-5 fade show active" id="params{{$.service.ServiceID}}" role="tabpanel" aria-labelledby="params-tab{{$.service.ServiceID}}"> <div class="mt-4"> <h6 class="mb-3">Query Params</h6> <table class="table table-dark table-bordered b-table-light"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width="45px">...</th> </tr> </thead> <tbody> <tr ng-repeat="item in $.service.Settings.Params"> <td> <input type="text" ng-model="item.ParamName" class="b-input form-control" placeholder="Key"> </td> <td> <input type="text" ng-model="item.ParamValue" class="b-input form-control" placeholder="Value"> </td> <td> <button type="button" class="btn btn-default" ng-click="$.service.Settings.Params.splice($index,1)"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="3"> <button type="button" class="btn btn-primary" ng-click="$.service.Settings.Params.push({})"> <i class="codicon codicon-add"></i> </button> </th> </tr> </tfoot> </table> </div> </div> <div class="tab-pane p-5 fade" id="authorization{{$.service.ServiceID}}" role="tabpanel" aria-labelledby="authorization-tab{{$.service.ServiceID}}"> <div class="mt-4"> <div class="row align-items-center"> <div class="col-6 border-end"> <div class="b-field"> <label class="form-label">Type</label> <select ng-model="$.service.Settings.Authorization.Type" class="b-input form-select mb-2"> <option value="">No Auth</option> <option value="Bearer">Bearer Token</option> <option value="Basic">Basic Auth</option> </select> <small ng-if="$.service.Settings.Authorization.Type==\'Bearer\'"> The authorization header will be automatically generated when you send the request. </small> <small ng-if="$.service.Settings.Authorization.Type==\'Basic\'"> The authorization header will be automatically generated when you send the request. </small> </div> </div> <div class="col-6"> <small ng-if="!$.service.Settings.Authorization.Type" class="authorization-description"> This request does not use any authorization. </small> <div ng-if="$.service.Settings.Authorization.Type==\'Bearer\'"> <div class="b-field"> <label class="form-label">Token</label> <textarea ng-model="$.service.Settings.Authorization.Bearer" class="b-input form-control" rows="2" placeholder="Token"></textarea> </div> </div> <div ng-if="$.service.Settings.Authorization.Type==\'Basic\'"> <div class="b-field"> <label class="form-label">Username</label> <input type="text" class="b-input form-control" placeholder="Username" ng-model="$.service.Settings.Authorization.BasicAuth.Username"> </div> <div class="b-field"> <label class="form-label">Password</label> <input type="password" class="b-input form-control" placeholder="Password" ng-model="$.service.Settings.Authorization.BasicAuth.Password"> </div> </div> </div> </div> </div> </div> <div class="tab-pane p-5 fade" id="headers{{$.service.ServiceID}}" role="tabpanel" aria-labelledby="headers-tab{{$.service.ServiceID}}"> <div class="mt-4"> <div class="form-section theme-default"> <input type="checkbox" checked="checked"/> <div class="header"> <h6 class="pb-2">Default Headers</h6> </div> <fieldset> <table class="table table-dark table-bordered b-table-light"> <thead> <tr> <th width="32px"></th> <th>KEY</th> <th>VALUE</th> </tr> </thead> <tbody> <tr ng-repeat="item in $.service.Settings.Headers | filter:{IsSystem: true}"> <td> <div class="b-checkbox"> <label> <input type="checkbox" ng-model="item.IsSelected"/> <i class="input-helper"></i> </label> </div> </td> <td><span>{{item.ParamName}}</span></td> <td> <input type="text" ng-model="item.ParamValue" class="b-input form-control" placeholder="Value"/> </td> </tr> </tbody> </table> </fieldset> </div> <div class="form-section theme-default"> <input type="checkbox"/> <div class="header"> <h6 class="pb-2">Custom Headers</h6> </div> <fieldset> <table class="table table-dark table-bordered b-table-light"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width="45px">...</th> </tr> </thead> <tbody> <tr ng-repeat="item in $.service.Settings.Headers" ng-if="!item.IsSystem"> <td> <input type="text" ng-model="item.ParamName" class="b-input form-control" placeholder="Key"> </td> <td> <input type="text" ng-model="item.ParamValue" class="b-input form-control" placeholder="Value"> </td> <td> <button type="button" class="btn btn-default" ng-click="$.service.Settings.Headers.splice($index,1)"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="3"> <button type="button" class="btn btn-primary" ng-click="$.service.Settings.Headers.push({})"> <i class="codicon codicon-add"></i> </button> </th> </tr> </tfoot> </table> </fieldset> </div> </div> </div> <div class="tab-pane p-5 fade" id="body{{$.service.ServiceID}}" role="tabpanel" aria-labelledby="body-tab{{$.service.ServiceID}}"> <div class="mt-4"> <div class="b-radio"> <label class="mr-3"> <input type="radio" name="WebserviceBodyTab" ng-value="" ng-model="$.service.Settings.BodyType"/> <i class="input-helper"></i>none </label> <label class="mr-3"> <input type="radio" name="WebserviceBodyTab" ng-value="\'FormData\'" ng-model="$.service.Settings.BodyType"/> <i class="input-helper"></i>form-data </label> <label> <input type="radio" name="WebserviceBodyTab" ng-value="\'Raw\'" ng-model="$.service.Settings.BodyType"/> <i class="input-helper"></i>row </label> </div> <hr class="mb-4 mt-0"/> <div> <small ng-if="!$.service.Settings.BodyType">this request does not have a body</small> <div ng-if="$.service.Settings.BodyType==\'FormData\'"> <table class="table table-dark table-bordered b-table-light"> <thead> <tr> <th>KEY</th> <th>VALUE</th> <th width="45px">...</th> </tr> </thead> <tbody> <tr> <td> <input type="text" class="b-input form-control" placeholder="key"> </td> <td> <input type="text" class="b-input form-control" placeholder="value"> </td> <td> <button type="button" class="btn btn-default"> <i class="codicon codicon-trash text-white"></i> </button> </td> </tr> </tbody> <tfoot> <tr> <th colspan="3"> <button type="button" class="btn btn-primary"> <i class="codicon codicon-add"></i> </button> </th> </tr> </tfoot> </table> </div> <div class="mb-3" ng-if="$.service.Settings.BodyType==\'Raw\'"> <textarea ng-model="$.service.Settings.BodyRaw" class="b-input form-control" rows="3"></textarea> </div> </div> </div> </div> </div> </div> </div>')}]),module.exports=path},9711:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _wizard_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(3443),_wizard_html__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_wizard_html__WEBPACK_IMPORTED_MODULE_0__),_sidebar_settings_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3308),_sidebar_settings_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_sidebar_settings_html__WEBPACK_IMPORTED_MODULE_1__),_edit_step_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1798),_edit_step_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_edit_step_html__WEBPACK_IMPORTED_MODULE_2__);class WizardFieldController{constructor($scope,$timeout,$q){this.$scope=$scope,this.$timeout=$timeout,this.$q=$q,this.editStepWidget=_edit_step_html__WEBPACK_IMPORTED_MODULE_2___default(),$scope.$on("onGetWizardFieldPanes",((e,task,args)=>{this.getWizardPanes.apply(this,[task,args])}))}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=_sidebar_settings_html__WEBPACK_IMPORTED_MODULE_1___default()})),this.field.Settings=this.field.Settings||{},this.field.Settings.ValidationMethod="bWizard_onValidateMatrix"}onAddStepClick(){this.workingMode="edit-step",this.$scope.$emit("onShowRightWidget"),this.step={IsNew:!0}}onEditStepClick(step){this.stepBackup=step,this.step=_.clone(step),this.workingMode="edit-step",this.$scope.$emit("onShowRightWidget")}onSaveStepClick(){this.field.Settings.Steps=this.field.Settings.Steps||[],this.step.IsNew?(delete this.step.IsNew,this.field.Settings.Steps.push(this.step)):this.field.Settings.Steps[this.field.Settings.Steps.indexOf(this.stepBackup)]=this.step,console.log(this.field.Settings.Steps);let newList=[];newList.push(..._.orderBy(this.field.Settings.Steps,["ViewOrder"])),this.field.Settings.Steps=_.clone(newList),console.log(this.field.Settings.Steps),this.disposeWorkingMode()}onCancelStepClick(){this.field.Settings.Steps[this.field.Settings.Steps.indexOf(this.stepBackup)]=this.stepBackup,this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}getWizardPanes(task,args){task.wait((()=>{const defer=this.$q.defer(),field=args.field,layout=args.layout;var panes=[];if(layout.indexOf("[[[")>=0){const itemHtml=this.getHtmlfromLayout(1,layout),paneHtml=this.getHtmlfromLayout(2,layout);var index=0;_.forEach(field.Settings.Steps,(step=>{let pane=paneHtml.replace(/\${(.[^}]+)}/gm,(function(match,group){return eval(group)}));var item=itemHtml.replace(/\[STEP\]/g,`[FIELD].Settings.Steps[${index++}]`);item=item.replace("[STEPPANE]",pane),panes.push(item)}));const renderedLayout=this.getRenderedLayout(layout,panes.join(" "));defer.resolve({type:0,html:renderedLayout})}else _.forEach(field.Settings.Steps,(step=>{const pane=`<div id="WizardStep_${step.Name}" data-pane="WizardStep_${step.Name}" data-pane-title="${step.Name} Pane" data-parent-id="${field.FieldID}" ng-show="[FIELD].Settings.CurrentStep=='${step.Name}'" class="${step.PaneCssClass}" ng-class="{'active':[FIELD].Settings.CurrentStep=='${step.Name}','disabled':![FIELD].Step['${step.Name}'].IsEnable}"></div>`;panes.push(pane)})),defer.resolve({type:1,html:panes.join(" ")});return defer.promise}))}getHtmlfromLayout(type,layout){var startBroketType=1==type?"-[[[":"*[[[",endBroketType=1==type?"]]]-":"]]]*";const start=layout.indexOf(startBroketType),end=layout.indexOf(endBroketType);return layout.substr(start+4,end-start-4)}getRenderedLayout(layout,panesHtml){const startItemBroket=layout.indexOf("-[[["),endItemBroket=layout.indexOf("]]]-"),startPaneBroket=layout.indexOf("*[[[");return layout.substr(0,startItemBroket)+panesHtml+layout.substr(endItemBroket+4,startPaneBroket-endItemBroket)}}const WizardFieldComponent={bindings:{field:"<"},controller:WizardFieldController,controllerAs:"$",templateUrl:_wizard_html__WEBPACK_IMPORTED_MODULE_0___default()},__WEBPACK_DEFAULT_EXPORT__=WizardFieldComponent}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId](module,module.exports,__webpack_require__),module.exports}__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop);var __webpack_exports__={};(()=>{"use strict";var submit_entity=__webpack_require__(8990),submit_entity_default=__webpack_require__.n(submit_entity);const submit_entity_component={bindings:{service:"<",scenarios:"<",entities:"<",viewModels:"<"},controller:class SubmitEntityServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,this.baseQueryInsertTemplate="\n    CREATE PROCEDURE {Schema}.{ProcedureName}\n    {SpParams}\n    AS BEGIN\n        IF {InsertConditions}\n        BEGIN\n            INSERT INTO {Schema}.[{TableName}]\n                    ({InsertColumns})\t\n                VALUES\n                    ({InsertParams})\n\n            SELECT Scope_Identity();\n        END\n    END\n",this.baseQueryInsertUpdateTemplate="\n    CREATE PROCEDURE {Schema}.{ProcedureName}\n    {SpParams}\n    AS BEGIN\n        IF {InsertConditions}\n        BEGIN\n            INSERT INTO {Schema}.[{TableName}]\n                    ({InsertColumns})\t\n                VALUES\n                    ({InsertParams})\n\n            SET {PrimaryKeyParam} = (SELECT Scope_Identity());\n        END\n        ELSE\n        BEGIN\n            UPDATE {Schema}.{TableName} \n                Set\t{UpdateParams}\n            WHERE {UpdateConditions}\n        END\n\n        SELECT {PrimaryKeyParam}\n    END\n",this.baseQueryUpdateTemplate="\n    CREATE PROCEDURE {Schema}.{ProcedureName}\n    {SpParams}\n    AS BEGIN\n        UPDATE {Schema}.{TableName} \n                Set\t{UpdateParams}\n        WHERE {UpdateConditions}\n    END\n",$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){this.apiService.getApi("BusinessEngineBasicServices","Service","GetSubmitEntityService",{serviceID:this.service.ServiceID}).then((data=>{this.submitEntityService=data,this.service.ServiceID||(this.submitEntityService.ActionType=void 0,_.filter(this.scenarios,(s=>s.ScenarioID==this.service.ScenarioID)).map((s=>{this.submitEntityService.Settings={StoredProcedurePrefixName:s.DatabaseObjectPrefix,StoredProcedurePostfixName:this.service.ServiceName}}))),_.filter(this.entities,(e=>this.submitEntityService.EntityID==e.EntityID)).map((ee=>{e.Columns=ee.Columns}))}))}setForm(){this.form=this.validationService.init({DatabaseObjectType:{id:"drpDatabaseObjectType",required:!0},ActionType:{id:"rdActionType",required:!0},EntityID:{id:"drpEntityID",required:!0},Entity:{required:!0},"Entity.InsertColumns":{rule:value=>0!=this.submitEntityService.ActionType&&1!=this.submitEntityService.ActionType||0!=_.filter(value||[],(c=>c.IsSelected)).length||"Select column(s) for insert query."},"Entity.UpdateColumns":{rule:value=>0!=this.submitEntityService.ActionType&&2!=this.submitEntityService.ActionType||0!=_.filter(value||[],(c=>c.IsSelected)).length||"Select column(s) for update query."},"Settings.StoredProcedurePrefixName":{rule:value=>!(0==this.submitEntityService.DatabaseObjectType&&!value)||"Sp prefix is required.!",id:"txtSpPrefix"},"Settings.StoredProcedurePostfixName":{rule:value=>!(0==this.submitEntityService.DatabaseObjectType&&!value)||"Sp postfix is required.!",id:"txtSpPostfix"}},!0,this.$scope,"$.submitEntityService")}onResetBaseQueryClick(){this.submitEntityService.BaseQuery="",this.onActionTypeChange()}onQueryTypeChange(){1!=this.submitEntityService.QueryType||this.submitEntityService.CustomQuery||(this.datasourceservice.CustomQuery="CREATE PROCEDURE {Schema}.{ProcedureName}\nAS BEGIN\n\t\nEND")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}onAddColumnsAsParamsClick(){this.service.Params=this.service.Params||[],_.forEach(this.submitEntityService.Entity.Columns,(c=>{var paramName="@"+c.ColumnName;0==_.filter(this.service.Params,(p=>p.ParamName==paramName)).length&&this.service.Params.push({ParamName:paramName,ParamType:c.ColumnType})}))}onSelectedEntityChange(){_.filter(this.entities,(e=>e.EntityID==this.submitEntityService.EntityID)).map((e=>{this.submitEntityService.Entity=e,this.submitEntityService.Entity.InsertColumns=[],this.submitEntityService.Entity.UpdateColumns=[],this.service.Params=this.service.Params||[],_.forEach(e.Columns,(c=>{var paramName="@"+c.ColumnName;0==_.filter(this.service.Params,(p=>p.ParamName==paramName)).length&&this.service.Params.push({ParamName:paramName,ParamType:c.ColumnType})})),_.filter(e.Columns,(c=>c.IsPrimary)).map((c=>{this.submitEntityService.Entity.PrimaryKeyParam="@"+c.ColumnName,this.submitEntityService.Entity.InsertConditions=[{SqlQuery:"NOT EXISTS(\n\t\tSELECT ["+c.ColumnName+"] FROM {Schema}.{TableName} \n\t\tWHERE ["+c.ColumnName+"] = @"+c.ColumnName+"\n\t)",GroupName:"Group1"}],this.submitEntityService.Entity.UpdateConditions=[{SqlQuery:"["+c.ColumnName+"] = @"+c.ColumnName,GroupName:"Group1"}]})),_.forEach(e.Columns,(c=>{c.IsIdentity||(this.submitEntityService.Entity.InsertColumns.push(angular.copy(c)),this.submitEntityService.Entity.UpdateColumns.push(angular.copy(c)))}))}))}onUpdateEntityColumnsClick(){_.filter(this.entities,(e=>e.EntityID==this.submitEntityService.EntityID)).map((e=>{_.filter(e.Columns,(c=>!c.IsIdentity)).map((c=>{var result=_.filter(this.submitEntityService.Entity.InsertColumns,(i=>i.ColumnID==c.ColumnID));result.length||this.submitEntityService.Entity.InsertColumns.push(angular.copy(c)),(result=_.filter(this.submitEntityService.Entity.UpdateColumns,(u=>u.ColumnID==c.ColumnID))).length||this.submitEntityService.Entity.UpdateColumns.push(angular.copy(c))}))}))}onActionTypeChange(actionType){if(!this.submitEntityService.BaseQuery||this.submitEntityService.ActionType!=actionType)switch(actionType){case 0:this.submitEntityService.BaseQuery=this.baseQueryInsertUpdateTemplate;break;case 1:this.submitEntityService.BaseQuery=this.baseQueryInsertTemplate;break;case 2:this.submitEntityService.BaseQuery=this.baseQueryUpdateTemplate}}onSelectedInsertEntityAllColumnsChange(){_.forEach(this.submitEntityService.Entity.InsertColumns,(c=>{c.IsSelected=!c.IsSelected,this.onSelectedInsertEntityColumnChange(c)}))}onSelectedInsertEntityColumnChange(c){var paramName="@"+c.ColumnName;c.IsSelected&&_.filter(this.service.Params,(p=>p.ParamName==paramName)).length&&(c.ColumnValue=paramName)}onSelectedUpdateEntityAllColumnsChange(){_.forEach(this.submitEntityService.Entity.UpdateColumns,(c=>{c.IsSelected=!c.IsSelected,this.onSelectedUpdateEntityColumnChange(c)}))}onSelectedUpdateEntityColumnChange(c){var paramName="@"+c.ColumnName;c.IsSelected&&_.filter(this.service.Params,(p=>p.ParamName==paramName)).length&&(c.ColumnValue=paramName)}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.submitEntityService),this.form.valid&&defer.resolve(!0),defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.submitEntityService.Service=this.service,this.submitEntityService.StoredProcedureName=this.submitEntityService.Settings.StoredProcedurePrefixName+this.submitEntityService.Settings.StoredProcedurePostfixName,this.submitEntityService.ServiceID=this.service.ServiceID,this.apiService.postApi("BusinessEngineBasicServices","Service","CreatesubmitEntityService",this.submitEntityService,{isNewService:args.isNewService}).then((data=>{this.submitEntityService.ItemID=data,defer.resolve(data)}),(error=>{defer.reject(error)})),defer.promise}))}},controllerAs:"$",templateUrl:submit_entity_default()};var data_source=__webpack_require__(7109),data_source_default=__webpack_require__.n(data_source);const DataSourceService={bindings:{service:"<",scenarios:"<",entities:"<",viewModels:"<"},controller:class DataSourceServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,this.baseQueryTemplate="\n    CREATE PROCEDURE {Schema}.{ProcedureName}\n    {SpParams}\n    AS BEGIN\n        SELECT\n            {SelectedColumns}[STARTPAGING],{TotalCountColumnName}[ENDPAGING]\n        FROM \n            {Entities}\n        [STARTPAGING]CROSS APPLY (SELECT COUNT(*) as {TotalCountColumnName} FROM {Entities} {Filters}) as {TotalCountAliasName}[ENDPAGING]\n        {Filters}\n        {SortingQuery}\n        {PagingQuery}\n    END\n",$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){this.apiService.getApi("BusinessEngineBasicServices","Service","GetDataSourceService",{serviceID:this.service.ServiceID}).then((data=>{this.dataSourceService=data,this.service.ServiceID?this.dataSourceService.BaseQuery||(this.dataSourceService.BaseQuery=this.baseQueryTemplate):(this.dataSourceService.BaseQuery=this.baseQueryTemplate,2==this.service.ResultType&&(this.service.Params=[{ParamName:"@PageIndex",ParamType:"int",DefaultValue:1},{ParamName:"@PageSize",ParamType:"int",DefaultValue:10}],this.dataSourceService.EnablePaging=!0,this.dataSourceService.PageIndexParam="@PageIndex",this.dataSourceService.PageSizeParam="@PageSize"),_.filter(this.scenarios,(s=>s.ScenarioID==this.service.ScenarioID)).map((s=>{this.dataSourceService.Settings={StoredProcedurePrefixName:s.DatabaseObjectPrefix,StoredProcedurePostfixName:this.service.ServiceName}}))),(this.dataSourceService.Entities||[]).forEach((e=>{_.filter(this.entities,(ee=>ee.EntityID==e.EntityID)).map((ee=>{e.Columns=ee.Columns}))})),(this.dataSourceService.ViewModelProperties||[]).forEach((prop=>{this.onSelectedEntityAliasChange(prop)})),(this.dataSourceService.SortItems||[]).forEach((s=>{this.onSortItemSelectedEntityAliasChange(s)}))}))}setForm(){this.form=this.validationService.init({DatabaseObjectType:{id:"drpDatabaseObjectType",required:!0},Entities:{rule:value=>{if(value&&value.length)return!0},required:!0},ViewModelID:{id:"drpViewModelID",required:!0},ViewModelProperties:{rule:value=>{if(value&&value.length)return!0}},"Settings.StoredProcedurePrefixName":{rule:value=>!(0==this.dataSourceService.DatabaseObjectType&&!value)||"Sp prefix is required.!",id:"txtSpPrefix"},"Settings.StoredProcedurePostfixName":{rule:value=>!(0==this.dataSourceService.DatabaseObjectType&&!value)||"Sp postfix is required.!",id:"txtSpPostfix"}},!0,this.$scope,"$.dataSourceService"),this.selectedEntityForm=this.validationService.init({EntityName:{required:!0},AliasName:{id:"txtselectedEntityAliasName",required:!0},TableName:{required:!0}},!0,this.$scope,"$.selectedEntity"),this.entityJoinRelationshipForm=this.validationService.init({JoinType:{id:"drpJoinType",required:!0},RightEntityAliasName:{id:"drpRightEntityAliasName",required:!0},JoinConditions:{rule:value=>!0,id:"txtJoinConditions",required:!0}})}onResetBaseQueryClick(){this.dataSourceService.BaseQuery=this.baseQueryTemplate}onQueryTypeChange(){1!=this.dataSourceService.QueryType||this.dataSourceService.CustomQuery||(this.datasourceservice.CustomQuery="CREATE PROCEDURE {Schema}.{ProcedureName}\nAS BEGIN\n\t\nEND")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}onSelectedViewModelChange(){this.onRefreshViewModelClick()}onRefreshViewModelClick(){var result=[];const viewModel=_.find(this.viewModels,(v=>v.ViewModelID==this.dataSourceService.ViewModelID));_.forEach(viewModel.Properties,(prop=>{var property={PropertyID:prop.PropertyID,PropertyName:prop.PropertyName,ValueType:"DataSource"};_.filter(this.dataSourceService.ViewModelProperties,(p=>p.PropertyID==prop.PropertyID)).map((p=>{property.IsSelected=p.IsSelected,property.ValueType=p.ValueType,property.EntityAliasName=p.EntityAliasName,property.ColumnName=p.ColumnName,property.Value=p.Value})),result.push(property)})),this.dataSourceService.ViewModelProperties=result}onSelectedEntityAliasChange(prop){_.filter(this.dataSourceService.Entities,(e=>e.AliasName==prop.EntityAliasName)).map((e=>{prop.Columns=e.Columns}))}onAddEntityClick(){this.selectedEntity={},this.searchEntities="",this.entities.forEach((e=>{e.IsSelected=!1})),window.wnSelectEntity.show(),this.$timeout((()=>{this.$scope.$broadcast("focusSearchEntity")}),500)}onEntityItemClick(entity){this.entities.forEach((e=>{e.IsSelected=!1})),entity.IsSelected=!entity.IsSelected,this.selectedEntity.EntityID=entity.EntityID,this.selectedEntity.TableName=entity.TableName,this.selectedEntity.EntityName=entity.EntityName,this.selectedEntity.Columns=entity.Columns,this.$scope.$broadcast("focusEntityAliasName")}onSelectEntityClick(){this.selectedEntityForm.validated=!0,this.selectedEntityForm.validator(this.selectedEntity),this.selectedEntityForm.valid&&(0==_.filter(this.dataSourceService.Entities,(e=>e.AliasName==this.selectedEntity.AliasName)).length&&(this.dataSourceService.Entities=this.dataSourceService.Entities||[],this.dataSourceService.Entities.push(angular.copy(this.selectedEntity)),delete this.selectedEntity),window.wnSelectEntity.hide())}onEntityExpandClick(entity){_.filter(this.entities,(e=>e.EntityID==entity.EntityID)).map((e=>{entity.Columns=e.Columns}))}onDeleteEntityClick(entity,$index){this.dataSourceService.Entities.splice($index,1)}onAddJoinRelationshipClick(entity){entity.JoinRelationships=entity.JoinRelationships||[],entity.JoinRelationships.push({})}onAddJoinRelationshipClick2(){this.dataSourceService.JoinRelationships=this.dataSourceService.JoinRelationships||[],this.dataSourceService.JoinRelationships.push({})}onJoinRelationshipEntityChange(relationship,type){_.filter(this.dataSourceService.Entities,(e=>1==type&&e.AliasName==relationship.LeftEntityAliasName||2==type&&e.AliasName==relationship.RightEntityAliasName)).map((e=>{1==type?relationship.LeftEntityTableName=e.TableName:2==type&&(relationship.RightEntityTableName=e.TableName)}))}onAddFilterClick(){this.dataSourceService.Filters=this.dataSourceService.Filters||[],this.dataSourceService.Filters.push({Type:1,ConditionGroupName:"ConditionGroup"+(this.dataSourceService.Filters.length+1)})}onAddSortItemClick(){this.dataSourceService.SortItems=this.dataSourceService.SortItems||[],this.dataSourceService.SortItems.push({Type:0,SortType:"Asc"})}onSortItemSelectedEntityAliasChange(sortItem){_.filter(this.dataSourceService.Entities,(e=>e.AliasName==sortItem.EntityAliasName)).map((e=>{sortItem.Columns=e.Columns}))}onEnablePagingChange(){this.dataSourceService.EnablePaging?(0==_.filter(this.service.Params,(p=>"@pageindex"==p.ParamName.toLowerCase())).length&&this.service.Params.push({ParamName:"@PageIndex",ParamType:"int",DefaultValue:1,IsSystemParam:!0}),0==_.filter(this.service.Params,(p=>"@pagesize"==p.ParamName.toLowerCase())).length&&this.service.Params.push({ParamName:"@PageSize",ParamType:"int",DefaultValue:1,IsSystemParam:!0})):(_.filter(this.service.Params,(p=>"@pageindex"==p.ParamName.toLowerCase())).map((p=>{this.service.Params.splice(this.service.Params.indexOf(p),1)})),_.filter(this.service.Params,(p=>"@pagesize"==p.ParamName.toLowerCase())).map((p=>{this.service.Params.splice(this.service.Params.indexOf(p),1)})))}validationJoinRelationship(){var isValid=!0,existsEntities=[];return(this.dataSourceService.Entities||[]).forEach((e=>{e.JoinRelationships||[].forEach((r=>{this.entityJoinRelationshipForm.validated=!0,this.entityJoinRelationshipForm.validator(r),(!this.entityJoinRelationshipForm.valid||existsEntities.indexOf(e.AliasName)>=0||existsEntities.indexOf(e.RightEntityAliasName)>=0)&&(isValid=!1),existsEntities=existsEntities.concat([e.AliasName,r.RightEntityAliasName])}))})),isValid}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.dataSourceService),this.form.valid&&this.validationJoinRelationship()&&defer.resolve(!0),defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.dataSourceService.Service=this.service,this.dataSourceService.StoredProcedureName=this.dataSourceService.Settings.StoredProcedurePrefixName+this.dataSourceService.Settings.StoredProcedurePostfixName,this.dataSourceService.ServiceID=this.service.ServiceID,this.apiService.postApi("BusinessEngineBasicServices","Service","CreatedataSourceService",this.dataSourceService,{isNewService:args.isNewService}).then((data=>{this.dataSourceService.ItemID=data,defer.resolve(data)}),(error=>{defer.reject(error)})),defer.promise}))}},controllerAs:"$",templateUrl:data_source_default()},data_source_component=DataSourceService;var custom_query=__webpack_require__(7586),custom_query_default=__webpack_require__.n(custom_query);const custom_query_component={bindings:{service:"<",scenarios:"<"},controller:class CustomQueryServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),$scope.$watch("$.service.ServiceName",((newVal,oldVal)=>{newVal==oldVal||this.customQueryService.Settings.StoredProcedureNameModified||(this.customQueryService.Settings.StoredProcedurePostfixName=newVal)})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){this.service.ServiceID?this.apiService.getApi("BusinessEngineBasicServices","Service","GetCustomQuery",{serviceID:this.service.ServiceID}).then((data=>{this.globalService.parseJsonItems(data),this.customQueryService=data})):(this.customQueryService={DatabaseObjectType:0,Query:"CREATE PROCEDURE {Schema}.{ProcedureName}\nAS BEGIN\n\t\nEND",Settings:{}},_.filter(this.scenarios,(s=>s.ScenarioID==this.service.ScenarioID)).map((s=>{this.customQueryService.Settings={StoredProcedurePrefixName:s.DatabaseObjectPrefix,StoredProcedurePostfixName:this.service.ServiceName}})))}setForm(){this.form=this.validationService.init({DatabaseObjectType:{id:"drpDatabaseObjectType",required:!0},Query:{id:"editorSqlQuery",required:!0},"Settings.StoredProcedurePrefixName":{rule:value=>!(0==this.customQueryService.DatabaseObjectType&&!value)||"Sp prefix is required.!",id:"txtSpPrefix"},"Settings.StoredProcedurePostfixName":{rule:value=>!(0==this.customQueryService.DatabaseObjectType&&!value)||"Sp postfix is required.!",id:"txtSpPostfix"}},!0,this.$scope,"$.customQueryService")}onGDetectServiceParams(){this.service.Params=this.globalService.getParamsFromSqlQuery(this.customQueryService.Query)}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.customQueryService),this.form.valid&&defer.resolve(!0),defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return 1==this.customQueryService.DatabaseObjectType&&(this.service.Params=this.globalService.getParamsFromSqlQuery(this.customQueryService.Query)),this.customQueryService.Service=this.service,this.customQueryService.StoredProcedureName=this.customQueryService.Settings.StoredProcedurePrefixName+this.customQueryService.Settings.StoredProcedurePostfixName,this.apiService.postApi("BusinessEngineBasicServices","Service","CreateCustomQuery",this.customQueryService,{isNewService:args.isNewService}).then((data=>{this.customQueryService.ItemID=data.ItemID,this.service.Params=data.ServiceParams,defer.resolve(data)}),(error=>{defer.reject(error)})),defer.promise}))}},controllerAs:"$",templateUrl:custom_query_default()};var bind_entity=__webpack_require__(7396),bind_entity_default=__webpack_require__.n(bind_entity);const bind_entity_component={bindings:{service:"<",scenarios:"<",entities:"<",entities:"<"},controller:class BindEntityServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,this.baseQueryTemplate="\n    CREATE PROCEDURE {Schema}.{ProcedureName}\n    {SpParams}\n    AS BEGIN\n        SELECT\n            {SelectedColumns}\n        FROM \n            {Entities}\n        {Filters}\n    END\n",$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){this.apiService.getApi("BusinessEngineBasicServices","Service","GetBindEntityService",{serviceID:this.service.ServiceID}).then((data=>{this.bindEntityService=data,this.service.ServiceID?this.bindEntityService.BaseQuery||(this.bindEntityService.BaseQuery=this.baseQueryTemplate):(this.bindEntityService.BaseQuery=this.baseQueryTemplate,_.filter(this.scenarios,(s=>s.ScenarioID==this.service.ScenarioID)).map((s=>{this.bindEntityService.Settings={StoredProcedurePrefixName:s.DatabaseObjectPrefix,StoredProcedurePostfixName:this.service.ServiceName}}))),(this.bindEntityService.Entities||[]).forEach((e=>{_.filter(this.entities,(ee=>ee.EntityID==e.EntityID)).map((ee=>{e.Columns=ee.Columns}))})),(this.bindEntityService.EntityColumns||[]).forEach((prop=>{this.onSelectedEntityAliasChange(prop)}))}))}setForm(){this.form=this.validationService.init({DatabaseObjectType:{id:"drpDatabaseObjectType",required:!0},Entities:{rule:value=>{if(value&&value.length)return!0},required:!0},EntityID:{id:"drpEntityID",required:!0},EntityColumns:{rule:value=>{if(value&&value.length)return!0}},"Settings.StoredProcedurePrefixName":{rule:value=>!(0==this.bindEntityService.DatabaseObjectType&&!value)||"Sp prefix is required.!",id:"txtSpPrefix"},"Settings.StoredProcedurePostfixName":{rule:value=>!(0==this.bindEntityService.DatabaseObjectType&&!value)||"Sp postfix is required.!",id:"txtSpPostfix"}},!0,this.$scope,"$.bindEntityService"),this.selectedEntityForm=this.validationService.init({EntityName:{required:!0},AliasName:{id:"txtselectedEntityAliasName",required:!0},TableName:{required:!0}},!0,this.$scope,"$.selectedEntity"),this.entityJoinRelationshipForm=this.validationService.init({JoinType:{id:"drpJoinType",required:!0},RightEntityAliasName:{id:"drpRightEntityAliasName",required:!0},JoinConditions:{rule:value=>!0,id:"txtJoinConditions",required:!0}})}onQueryTypeChange(){1!=this.bindEntityService.QueryType||this.bindEntityService.CustomQuery||(this.datasourceservice.CustomQuery="CREATE PROCEDURE {Schema}.{ProcedureName}\nAS BEGIN\n\t\nEND")}onResetBaseQueryClick(){this.bindEntityService.BaseQuery=this.baseQueryTemplate}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}onSelectedEntityChange(){this.onRefreshEntityClick()}onRefreshEntityClick(){var result=[];const entity=_.find(this.entities,(v=>v.EntityID==this.bindEntityService.EntityID));_.forEach(entity.Columns,(prop=>{var column={ColumnID:prop.ColumnID,ColumnName:prop.ColumnName,ValueType:"DataSource"};_.filter(this.bindEntityService.EntityColumns,(p=>p.ColumnID==prop.ColumnID)).map((p=>{column.IsSelected=p.IsSelected,column.ValueType=p.ValueType,column.EntityAliasName=p.EntityAliasName,column.ColumnName=p.ColumnName,column.Value=p.Value})),result.push(column)})),this.bindEntityService.EntityColumns=result}onSelectedEntityAliasChange(prop){_.filter(this.bindEntityService.Entities,(e=>e.AliasName==prop.EntityAliasName)).map((e=>{prop.Columns=e.Columns}))}onAddEntityClick(){this.selectedEntity={},this.searchEntities="",this.entities.forEach((e=>{e.IsSelected=!1})),window.wnSelectEntity.show(),this.$timeout((()=>{this.$scope.$broadcast("focusSearchEntity")}),500)}onEntityItemClick(entity){this.entities.forEach((e=>{e.IsSelected=!1})),entity.IsSelected=!entity.IsSelected,this.selectedEntity.EntityID=entity.EntityID,this.selectedEntity.TableName=entity.TableName,this.selectedEntity.EntityName=entity.EntityName,this.selectedEntity.Columns=entity.Columns,this.$scope.$broadcast("focusEntityAliasName")}onSelectEntityClick(){this.selectedEntityForm.validated=!0,this.selectedEntityForm.validator(this.selectedEntity),this.selectedEntityForm.valid&&(0==_.filter(this.bindEntityService.Entities,(e=>e.AliasName==this.selectedEntity.AliasName)).length&&(this.bindEntityService.Entities=this.bindEntityService.Entities||[],this.bindEntityService.Entities.push(angular.copy(this.selectedEntity)),delete this.selectedEntity),window.wnSelectEntity.hide())}onEntityExpandClick(entity){_.filter(this.entities,(e=>e.EntityID==entity.EntityID)).map((e=>{entity.Columns=e.Columns}))}onDeleteEntityClick(entity,$index){this.bindEntityService.Entities.splice($index,1)}onAddJoinRelationshipClick(entity){entity.JoinRelationships=entity.JoinRelationships||[],entity.JoinRelationships.push({})}onAddJoinRelationshipClick2(){this.bindEntityService.JoinRelationships=this.bindEntityService.JoinRelationships||[],this.bindEntityService.JoinRelationships.push({})}onJoinRelationshipEntityChange(relationship,type){_.filter(this.bindEntityService.Entities,(e=>1==type&&e.AliasName==relationship.LeftEntityAliasName||2==type&&e.AliasName==relationship.RightEntityAliasName)).map((e=>{1==type?relationship.LeftEntityTableName=e.TableName:2==type&&(relationship.RightEntityTableName=e.TableName)}))}onAddFilterClick(){this.bindEntityService.Filters=this.bindEntityService.Filters||[],this.bindEntityService.Filters.push({Type:1,ConditionGroupName:"ConditionGroup"+(this.bindEntityService.Filters.length+1)})}validationJoinRelationship(){var isValid=!0,existsEntities=[];return(this.bindEntityService.Entities||[]).forEach((e=>{e.JoinRelationships||[].forEach((r=>{this.entityJoinRelationshipForm.validated=!0,this.entityJoinRelationshipForm.validator(r),(!this.entityJoinRelationshipForm.valid||existsEntities.indexOf(e.AliasName)>=0||existsEntities.indexOf(e.RightEntityAliasName)>=0)&&(isValid=!1),existsEntities=existsEntities.concat([e.AliasName,r.RightEntityAliasName])}))})),isValid}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.bindEntityService),this.form.valid&&this.validationJoinRelationship()&&defer.resolve(!0),defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.bindEntityService.Service=this.service,this.bindEntityService.StoredProcedureName=this.bindEntityService.Settings.StoredProcedurePrefixName+this.bindEntityService.Settings.StoredProcedurePostfixName,this.bindEntityService.ServiceID=this.service.ServiceID,this.apiService.postApi("BusinessEngineBasicServices","Service","CreateBindEntityService",this.bindEntityService,{isNewService:args.isNewService}).then((data=>{this.bindEntityService.ItemID=data,defer.resolve(data)}),(error=>{defer.reject(error)})),defer.promise}))}},controllerAs:"$",templateUrl:bind_entity_default()};var login_user=__webpack_require__(6471),login_user_default=__webpack_require__.n(login_user);const login_user_component={bindings:{service:"<",scenarios:"<"},controller:class LoginUserServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Username:{required:!0},Password:{required:!0}},!0,this.$scope,"$.service.Settings")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service.Settings),this.form.valid&&defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}},controllerAs:"$",templateUrl:login_user_default()};var register_user=__webpack_require__(6112),register_user_default=__webpack_require__.n(register_user);const register_user_component={bindings:{service:"<",scenarios:"<"},controller:class RegisterUserServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Username:{required:!0},Password:{required:!0},RepeatPassword:{required:!0}},!0,this.$scope,"$.service.Settings")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service.Settings),this.form.valid&&defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return defer.resolve(data),defer.promise}))}},controllerAs:"$",templateUrl:register_user_default()};var approve_user=__webpack_require__(7695),approve_user_default=__webpack_require__.n(approve_user);const approve_user_component={bindings:{service:"<",scenarios:"<"},controller:class ApproveUserServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Username:{required:!0},Password:{required:!0}},!0,this.$scope,"$.service.Settings")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service.Settings),this.form.valid&&defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}},controllerAs:"$",templateUrl:approve_user_default()};var reset_password=__webpack_require__(5007),reset_password_default=__webpack_require__.n(reset_password);const reset_password_component={bindings:{service:"<",scenarios:"<"},controller:class ResetPasswordServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Username:{required:!0}},!0,this.$scope,"$.service.Settings")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service.Settings),this.form.valid&&defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}},controllerAs:"$",templateUrl:reset_password_default()};var send_sms=__webpack_require__(9066),send_sms_default=__webpack_require__.n(send_sms);const send_sms_component={bindings:{service:"<",scenarios:"<"},controller:class SendSmsServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Provider:{required:!0}},!0,this.$scope,"$.customQueryService")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}onAddServiceTokensClick(){this.service.Settings.Tokens=this.service.Settings.Tokens||[],this.service.Settings.Tokens.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service),this.form.valid,defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return defer.resolve(data),defer.promise}))}},controllerAs:"$",templateUrl:send_sms_default()};var send_email=__webpack_require__(4582),send_email_default=__webpack_require__.n(send_email);const send_email_component={bindings:{service:"<",scenarios:"<"},controller:class SendEmailServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Provider:{required:!0}},!0,this.$scope,"$.customQueryService")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service),this.form.valid,defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return defer.resolve(data),defer.promise}))}},controllerAs:"$",templateUrl:send_email_default()};var import_excel=__webpack_require__(9588),import_excel_default=__webpack_require__.n(import_excel);const import_excel_component={bindings:{service:"<",scenarios:"<"},controller:class ImportExcelServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){}setForm(){this.form=this.validationService.init({Provider:{required:!0}},!0,this.$scope,"$.customQueryService")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service),this.form.valid,defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return defer.resolve(data),defer.promise}))}},controllerAs:"$",templateUrl:import_excel_default()};var restful=__webpack_require__(6163),restful_default=__webpack_require__.n(restful);const restful_component={bindings:{service:"<",scenarios:"<"},controller:class RestFulServiceController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService,$scope.$on("onValidateService",((e,task,args)=>{this.validateService.apply(this,[task,args])})),$scope.$on("onSaveService",((e,task,args)=>{this.saveService.apply(this,[task,args])})),this.setForm()}$onInit(){this.onPageLoad()}onPageLoad(){this.service.ServiceID||(this.service.Settings.WebServiceOptions={Params:[],Authorization:{BasicAuth:{}},Headers:[{ParamName:"Content-Type",ParamValue:"application/json",IsSelected:!0,IsSystem:!0},{ParamName:"Content-Length",IsSystem:!0},{ParamName:"Accept",IsSystem:!0},{ParamName:"Connection",IsSystem:!0},{ParamName:"Date",IsSystem:!0},{ParamName:"Expect",IsSystem:!0},{ParamName:"Host",IsSystem:!0},{ParamName:"If-Modified-Since",IsSystem:!0},{ParamName:"Range",IsSystem:!0},{ParamName:"Referer",IsSystem:!0},{ParamName:"Transfer-Encoding",IsSystem:!0},{ParamName:"User-Agent",IsSystem:!0},{ParamName:"Proxy-Connection",IsSystem:!0}],BodyFormDataItems:[]})}setForm(){this.form=this.validationService.init({Provider:{required:!0}},!0,this.$scope,"$.customQueryService")}onAddServiceParamClick(){this.service.Params=this.service.Params||[],this.service.Params.push({})}validateService(task,args){task.wait((()=>{var defer=this.$q.defer();return this.form.validated=!0,this.form.validator(this.service),this.form.valid,defer.resolve(!0),this.service.Settings.SaveParams=!0,defer.promise}))}saveService(task,args){task.wait((()=>{var defer=this.$q.defer();return defer.resolve(data),defer.promise}))}},controllerAs:"$",templateUrl:restful_default()};var run_service_component=__webpack_require__(4889),run_service_component_default=__webpack_require__.n(run_service_component);_;const run_service_run_service_component={bindings:{controller:"<",action:"<",scenarios:"<",actions:"<",services:"<",serviceType:"@",datasource:"@",variables:"<",fields:"<",viewModels:"<"},controller:class DatabaseActionController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService}$onInit(){this.onPageLoad()}onPageLoad(){}},controllerAs:"$",templateUrl:run_service_component_default()};var javascript_component=__webpack_require__(3678),javascript_component_default=__webpack_require__.n(javascript_component);const programming_javascript_component={bindings:{action:"<",scenarios:"<",actions:"<",services:"<",variables:"<"},controller:class JavascriptActionController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService}$onInit(){this.onPageLoad()}onPageLoad(){}},controllerAs:"$",templateUrl:javascript_component_default()};var set_variable_component=__webpack_require__(4539),set_variable_component_default=__webpack_require__.n(set_variable_component);const form_set_variable_component={bindings:{action:"<",scenarios:"<",actions:"<",services:"<",variables:"<"},controller:class SetVariableActionController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService}$onInit(){this.onPageLoad()}onPageLoad(){}},controllerAs:"$",templateUrl:set_variable_component_default()};var update_field_data_source=__webpack_require__(6053),update_field_data_source_default=__webpack_require__.n(update_field_data_source);const update_field_data_source_component={bindings:{action:"<",fields:"<"},controller:class UpdateFieldDataSourceController{constructor(){}$onInit(){}},controllerAs:"$",templateUrl:update_field_data_source_default()};var call_action=__webpack_require__(7660),call_action_default=__webpack_require__.n(call_action);const call_action_component={bindings:{action:"<",scenarios:"<",actions:"<",moduleActions:"<",services:"<",variables:"<"},controller:class CallActionController{constructor($scope,$q,$timeout,$deferredEmit,globalService,apiService,validationService){this.$scope=$scope,this.$q=$q,this.$timeout=$timeout,this.$deferredEmit=$deferredEmit,this.globalService=globalService,this.apiService=apiService,this.validationService=validationService}$onInit(){this.onPageLoad()}onPageLoad(){}},controllerAs:"$",templateUrl:call_action_default()};var group_studio_component=__webpack_require__(4210),group_studio_component_default=__webpack_require__.n(group_studio_component),sidebar_settings=__webpack_require__(4815),sidebar_settings_default=__webpack_require__.n(sidebar_settings);const group_group_studio_component={bindings:{field:"<"},controller:class GroupFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=sidebar_settings_default()}))}},controllerAs:"$",templateUrl:group_studio_component_default()};var textbox=__webpack_require__(8536),textbox_default=__webpack_require__.n(textbox),textbox_sidebar_settings=__webpack_require__(434),textbox_sidebar_settings_default=__webpack_require__.n(textbox_sidebar_settings);const textbox_component={bindings:{field:"<",actions:"<"},controller:class TextboxFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=textbox_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:textbox_default()};var textarea_textarea=__webpack_require__(1891),textarea_default=__webpack_require__.n(textarea_textarea),textarea_sidebar_settings=__webpack_require__(8152),textarea_sidebar_settings_default=__webpack_require__.n(textarea_sidebar_settings);const textarea_component={bindings:{field:"<"},controller:class TextareaFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=textarea_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:textarea_default()};var editor=__webpack_require__(4494),editor_default=__webpack_require__.n(editor),text_editor_sidebar_settings=__webpack_require__(1323),text_editor_sidebar_settings_default=__webpack_require__.n(text_editor_sidebar_settings);const editor_component={bindings:{field:"<"},controller:class TextEditorFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=text_editor_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:editor_default()};var content=__webpack_require__(8128),content_default=__webpack_require__.n(content);const content_component={bindings:{field:"<"},controller:class ContentFieldController{constructor(){}$onInit(){}},controllerAs:"$",templateUrl:content_default()};var switch_button=__webpack_require__(7264),switch_button_default=__webpack_require__.n(switch_button),switch_button_sidebar_settings=__webpack_require__(656),switch_button_sidebar_settings_default=__webpack_require__.n(switch_button_sidebar_settings);const switch_button_compoment={bindings:{field:"<"},controller:class SwitchButtonFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=switch_button_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:switch_button_default()};var grid=__webpack_require__(8928),grid_default=__webpack_require__.n(grid),grid_sidebar_settings=__webpack_require__(4214),grid_sidebar_settings_default=__webpack_require__.n(grid_sidebar_settings),edit_column=__webpack_require__(3041),edit_column_default=__webpack_require__.n(edit_column);const grid_component={bindings:{field:"<",actions:"<"},controller:class GridFieldController{constructor($scope,$timeout,globalService){this.$scope=$scope,this.$timeout=$timeout,this.globalService=globalService,this.editColumnWidget=edit_column_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=grid_sidebar_settings_default()}))}onAddColumnClick(){this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget"),this.column={IsNew:!0}}onEditColumnClick(column){this.columnBackup=column,this.column=_.clone(column),this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget")}onDeleteColumnClick(column){confirm("Are you sure for delete this column!?")&&this.field.Settings.Columns.splice(this.field.Settings.Columns.indexOf(column),1)}onAddContentItemClick(){this.column.ContentItems=this.column.ContentItems||[],this.column.ContentItems.push({})}onShowContentItemConditionsClick(item){this.contentItem=item,window.wnContentItemConditions.show()}onSaveContentItemConditionsClick(){window.wnContentItemConditions.hide()}onColumnShowConditionsClick(){window.wnColumnShowConditions.show()}onActionChange(){this.column.ActionParams=this.column.ActionParams||[]}onAddActionItemClick(){this.column.ActionItems=this.column.ActionItems||[],this.column.ActionItems.push({})}onSetActionParamsClick(item){const action=_.find(this.actions,(a=>a.ActionID==item.ActionID));item.ActionParams=_.assign(_.cloneDeep(action.Params),item.ActionParams||[]),this.$scope.$broadcast("onReinitActionParams"),this.actionItem=item,window.wnActionParams.show()}onSetShowConditionsClick(item){this.contentItem=item,window.wnContentItemConditions.show()}onSaveColumnClick(){this.field.Settings.Columns=this.field.Settings.Columns||[],this.column.IsNew?(delete this.column.IsNew,this.field.Settings.Columns.push(this.column)):this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.column,this.disposeWorkingMode()}onCancelColumnClick(){this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.columnBackup,this.disposeWorkingMode()}onEditFieldDataSourceClick(){this.$scope.$emit("onShowFieldDataSource",{field:this.field})}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:grid_default()};var matrix=__webpack_require__(4286),matrix_default=__webpack_require__.n(matrix),matrix_sidebar_settings=__webpack_require__(8196),matrix_sidebar_settings_default=__webpack_require__.n(matrix_sidebar_settings),matrix_edit_column=__webpack_require__(8971),matrix_edit_column_default=__webpack_require__.n(matrix_edit_column);const matrix_component={bindings:{field:"<",actions:"<"},controller:class MatrixFieldController{constructor($scope,$timeout,globalService){this.$scope=$scope,this.$timeout=$timeout,this.globalService=globalService,this.editColumnWidget=matrix_edit_column_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=matrix_sidebar_settings_default()}))}onAddColumnClick(){this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget"),this.column={IsNew:!0}}onEditColumnClick(column){this.columnBackup=column,this.column=_.clone(column),this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget")}onDeleteColumnClick(column){confirm("Are you sure for delete this column!?")&&this.field.Settings.Columns.splice(this.field.Settings.Columns.indexOf(column),1)}onAddContentItemClick(){this.column.ContentItems=this.column.ContentItems||[],this.column.ContentItems.push({})}onShowContentItemConditionsClick(item){this.contentItem=item,window.wnContentItemConditions.show()}onSaveContentItemConditionsClick(){window.wnContentItemConditions.hide()}onColumnShowConditionsClick(){window.wnColumnShowConditions.show()}onActionChange(){this.column.ActionParams=this.column.ActionParams||[]}onAddActionItemClick(){this.column.ActionItems=this.column.ActionItems||[],this.column.ActionItems.push({})}onSetActionParamsClick(item){const action=_.find(this.actions,(a=>a.ActionID==item.ActionID));item.ActionParams=_.assign(_.cloneDeep(action.Params),item.ActionParams||[]),this.$scope.$broadcast("onReinitActionParams"),this.actionItem=item,window.wnActionParams.show()}onSaveColumnClick(){this.field.Settings.Columns=this.field.Settings.Columns||[],this.column.IsNew?(delete this.column.IsNew,this.field.Settings.Columns.push(this.column)):this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.column,this.disposeWorkingMode()}onCancelColumnClick(){this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.columnBackup,this.disposeWorkingMode()}onEditFieldDataSourceClick(){this.$scope.$emit("onShowFieldDataSource",{field:this.field})}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:matrix_default()};var custom_list=__webpack_require__(863),custom_list_default=__webpack_require__.n(custom_list),custom_list_sidebar_settings=__webpack_require__(1775),custom_list_sidebar_settings_default=__webpack_require__.n(custom_list_sidebar_settings),list_builder=__webpack_require__(4860),list_builder_default=__webpack_require__.n(list_builder),custom_template=__webpack_require__(7172),custom_template_default=__webpack_require__.n(custom_template);const custom_list_component={bindings:{field:"<"},controller:class CustomListFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout,this.listBuilder=list_builder_default(),this.customTemplate=custom_template_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=custom_list_sidebar_settings_default()}))}onShowListBuilderClick(){window.wnListBuilder.show()}onShowDataSourceClick(){this.$scope.$emit("onShowFieldDataSource",{field:this.field})}},controllerAs:"$",templateUrl:custom_list_default()};var wizard_component=__webpack_require__(9711),tabs=__webpack_require__(1463),tabs_default=__webpack_require__.n(tabs),tabs_sidebar_settings=__webpack_require__(9071),tabs_sidebar_settings_default=__webpack_require__.n(tabs_sidebar_settings),edit_tab=__webpack_require__(3491),edit_tab_default=__webpack_require__.n(edit_tab);const tabs_component={bindings:{field:"<"},controller:class TabsFieldController{constructor($scope,$timeout,$q){this.$scope=$scope,this.$timeout=$timeout,this.$q=$q,this.editTabWidget=edit_tab_default(),$scope.$on("onGetTabsFieldPanes",((e,task,args)=>{this.getTabsPanes.apply(this,[task,args])}))}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=tabs_sidebar_settings_default()}))}onAddTabClick(){this.workingMode="edit-tab",this.$scope.$emit("onShowRightWidget"),this.tab={IsNew:!0}}onEditTabClick(tab){this.tabBackup=tab,this.tab=_.clone(tab),this.workingMode="edit-tab",this.$scope.$emit("onShowRightWidget")}onSaveTabClick(){this.field.Settings.Tabs=this.field.Settings.Tabs||[],this.tab.IsNew?(delete this.tab.IsNew,this.field.Settings.Tabs.push(this.tab)):this.field.Settings.Tabs[this.field.Settings.Tabs.indexOf(this.tabBackup)]=this.tab,this.disposeWorkingMode()}onCancelTabClick(){this.field.Settings.Tabs[this.field.Settings.Tabs.indexOf(this.tabBackup)]=this.tabBackup,this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}getTabsPanes(task,args){task.wait((()=>{const defer=this.$q.defer();var panes=[],index=0;const field=args.field,attrs=args.attrs;return _.forEach(field.Settings.Tabs,(tab=>{const pane=`<div data-pane="TabsTab_${tab.Name}" data-pane-title="${tab.Name} Pane" \n            data-parent-id="${field.FieldID}" ng-show="[FIELD].Settings.CurrentTab=='${tab.Name}'" \n            class="${tab.PaneCssClass}" ng-class="{'active':[FIELD].Settings.CurrentTab=='${tab.Name}','disabled':![FIELD].Tab['${tab.Name}'].IsEnable}"\n            id="bTab${field.FieldName}${index++}" ${attrs||""}></div>`;panes.push(pane)})),defer.resolve({type:0,html:panes.join(" ")}),defer.promise}))}},controllerAs:"$",templateUrl:tabs_default()};var button_button=__webpack_require__(2920),button_default=__webpack_require__.n(button_button),button_sidebar_settings=__webpack_require__(4356),button_sidebar_settings_default=__webpack_require__.n(button_sidebar_settings);const button_component={bindings:{field:"<"},controller:class ButtonFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=button_sidebar_settings_default()}))}onShowLoadingConditionsClick(){this.field.Settings.LoadingConditions=this.field.Settings.LoadingConditions||[],window["wnButtonLoadingConditions"+this.field.FieldName].show()}onAddFieldActionClick(){this.$scope.$emit("onGotoPage",{page:"create-action",parentID:this.field.FieldID,subParams:{type:"field"}})}},controllerAs:"$",templateUrl:button_default()};var checkbox_list=__webpack_require__(5873),checkbox_list_default=__webpack_require__.n(checkbox_list),checkbox_list_sidebar_settings=__webpack_require__(9551),checkbox_list_sidebar_settings_default=__webpack_require__.n(checkbox_list_sidebar_settings);const checkbox_list_component={bindings:{field:"<"},controller:class CheckboxListFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=checkbox_list_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:checkbox_list_default()};var chosen_dropdown=__webpack_require__(339),chosen_dropdown_default=__webpack_require__.n(chosen_dropdown),chosen_dropdown_sidebar_settings=__webpack_require__(590),chosen_dropdown_sidebar_settings_default=__webpack_require__.n(chosen_dropdown_sidebar_settings);const chosen_dropdown_component={bindings:{field:"<"},controller:class ChosenDropDownFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=chosen_dropdown_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:chosen_dropdown_default()};var select2=__webpack_require__(914),select2_default=__webpack_require__.n(select2),select2_sidebar_settings=__webpack_require__(5271),select2_sidebar_settings_default=__webpack_require__.n(select2_sidebar_settings);const select2_component={bindings:{field:"<"},controller:class Select2FieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=select2_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:select2_default()};var selectize=__webpack_require__(2578),selectize_default=__webpack_require__.n(selectize),selectize_sidebar_settings=__webpack_require__(2574),selectize_sidebar_settings_default=__webpack_require__.n(selectize_sidebar_settings);const selectize_component={bindings:{field:"<"},controller:class SelectizeFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=selectize_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:selectize_default()};var nice_select=__webpack_require__(9295),nice_select_default=__webpack_require__.n(nice_select),nice_select_sidebar_settings=__webpack_require__(6517),nice_select_sidebar_settings_default=__webpack_require__.n(nice_select_sidebar_settings);const nice_select_component={bindings:{field:"<"},controller:class NiceSelectFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=nice_select_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:nice_select_default()};var typeahead=__webpack_require__(2596),typeahead_default=__webpack_require__.n(typeahead),typeahead_autocomplete_sidebar_settings=__webpack_require__(9332),typeahead_autocomplete_sidebar_settings_default=__webpack_require__.n(typeahead_autocomplete_sidebar_settings);const typeahead_component={bindings:{field:"<"},controller:class TypeaheadAutocompleteFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=typeahead_autocomplete_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:typeahead_default()};var selectable_list=__webpack_require__(8247),selectable_list_default=__webpack_require__.n(selectable_list),edit_templates=__webpack_require__(9685),edit_templates_default=__webpack_require__.n(edit_templates),selectable_list_sidebar_settings=__webpack_require__(6083),selectable_list_sidebar_settings_default=__webpack_require__.n(selectable_list_sidebar_settings);const selectable_list_component={bindings:{field:"<"},controller:class SelectableListFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout,this.editTemplatesWidget=edit_templates_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=selectable_list_sidebar_settings_default()}))}onEditTemplatesClick(){this.workingMode="selectable-list-edit-templates",this.$scope.$emit("onShowRightWidget")}},controllerAs:"$",templateUrl:selectable_list_default()};var dashboard_menu=__webpack_require__(2650),dashboard_menu_default=__webpack_require__.n(dashboard_menu),dashboard_menu_sidebar_settings=__webpack_require__(2658),dashboard_menu_sidebar_settings_default=__webpack_require__.n(dashboard_menu_sidebar_settings);const dashboard_menu_component={bindings:{field:"<"},controller:class DashboardMenuFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=dashboard_menu_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:dashboard_menu_default()};var dashboard_link=__webpack_require__(6203),dashboard_link_default=__webpack_require__.n(dashboard_link),dashboard_link_sidebar_settings=__webpack_require__(5777),dashboard_link_sidebar_settings_default=__webpack_require__.n(dashboard_link_sidebar_settings);const dashboard_link_component={bindings:{field:"<"},controller:class DashboardLinkFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=dashboard_link_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:dashboard_link_default()};var upload_file=__webpack_require__(7790),upload_file_default=__webpack_require__.n(upload_file),upload_file_sidebar_settings=__webpack_require__(6869),upload_file_sidebar_settings_default=__webpack_require__.n(upload_file_sidebar_settings);const upload_file_component={bindings:{field:"<"},controller:class UploadFileFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=upload_file_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:upload_file_default()};var upload_image=__webpack_require__(6464),upload_image_default=__webpack_require__.n(upload_image),upload_image_sidebar_settings=__webpack_require__(3295),upload_image_sidebar_settings_default=__webpack_require__.n(upload_image_sidebar_settings);const upload_image_component={bindings:{field:"<"},controller:class UploadImageFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=upload_image_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:upload_image_default()};var property=__webpack_require__(3529),property_default=__webpack_require__.n(property),property_sidebar_settings=__webpack_require__(1661),property_sidebar_settings_default=__webpack_require__.n(property_sidebar_settings);const property_component={bindings:{field:"<"},controller:class PropertyFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=property_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:property_default()};var message_box=__webpack_require__(5622),message_box_default=__webpack_require__.n(message_box),message_box_sidebar_settings=__webpack_require__(6417),message_box_sidebar_settings_default=__webpack_require__.n(message_box_sidebar_settings);const message_box_component={bindings:{field:"<"},controller:class MessageBoxFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=message_box_sidebar_settings_default()}))}onAddMessageClick(){this.message||(this.field.Settings.Messages=this.field.Settings.Messages||[],this.field.Settings.Messages.push({IsNew:!0,IsEdited:!0}),this.messageIndex=this.field.Settings.Messages.length-1,this.message=_.clone(this.field.Settings.Messages[this.messageIndex]),this.workingMode="edit-message",this.$scope.$emit("onShowRightWidget"))}onEditMessageClick(message,$index){this.message||(message.IsEdited=!0,this.messageIndex=$index,this.message=_.clone(message),this.message.IsEdited=!0,this.message.IsNew=!1,this.workingMode="edit-message",this.$scope.$emit("onShowRightWidget"))}onSaveMessageClick(){this.message.IsEdited=!1,this.field.Settings.Messages[this.messageIndex]=_.clone(this.message),delete this.message,this.disposeWorkingMode()}onCancelEditMessageClick(){this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:message_box_default()};var dashboard_breadcrumb=__webpack_require__(4917),dashboard_breadcrumb_default=__webpack_require__.n(dashboard_breadcrumb);const dashboard_breadcrumb_component={bindings:{field:"<"},controller:class DashboardBreadcrumbFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=sidebarSettingsTemplate}))}onSetTemplateClick(){this.workingMode="edit-template",this.$scope.$emit("onShowRightWidget")}onSaveTemplateClick(){this.disposeWorkingMode()}onCancelEditTemplateClick(){this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:dashboard_breadcrumb_default()};var persian_date_time_picker=__webpack_require__(7186),persian_date_time_picker_default=__webpack_require__.n(persian_date_time_picker),persian_date_time_picker_sidebar_settings=__webpack_require__(6623),persian_date_time_picker_sidebar_settings_default=__webpack_require__.n(persian_date_time_picker_sidebar_settings);const persian_date_time_picker_component={bindings:{field:"<"},controller:class PersianDateTimePickerFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=persian_date_time_picker_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:persian_date_time_picker_default()};var choices_combobox=__webpack_require__(7128),choices_combobox_default=__webpack_require__.n(choices_combobox),Choices_combobox_sidebar_settings=__webpack_require__(5915),Choices_combobox_sidebar_settings_default=__webpack_require__.n(Choices_combobox_sidebar_settings);const Choices_combobox_component={bindings:{field:"<"},controller:class ChoicesComboboxFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=Choices_combobox_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:choices_combobox_default()};var leafletjs_map=__webpack_require__(971),leafletjs_map_default=__webpack_require__.n(leafletjs_map),leafletjs_map_sidebar_settings=__webpack_require__(5523),leafletjs_map_sidebar_settings_default=__webpack_require__.n(leafletjs_map_sidebar_settings);const leafletjs_map_compoment={bindings:{field:"<"},controller:class LeafletjsMapFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=leafletjs_map_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:leafletjs_map_default()};var slider=__webpack_require__(8738),slider_default=__webpack_require__.n(slider),swiper_slider_sidebar_settings=__webpack_require__(5613),swiper_slider_sidebar_settings_default=__webpack_require__.n(swiper_slider_sidebar_settings),settings=__webpack_require__(4840),settings_default=__webpack_require__.n(settings);const slider_component={bindings:{field:"<",actions:"<"},controller:class SwiperSliderFieldController{constructor($scope,$timeout,globalService){this.$scope=$scope,this.$timeout=$timeout,this.globalService=globalService,this.settingsWidget=settings_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=swiper_slider_sidebar_settings_default()}))}onEditSettingsClick(){this.workingMode="edit-settings",this.$scope.$emit("onShowRightWidget")}onSaveSettingsClick(){this.disposeWorkingMode()}onCancelSettingsClick(){this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:slider_default()};var import_excel_import_excel=__webpack_require__(3096),import_excel_import_excel_default=__webpack_require__.n(import_excel_import_excel),import_excel_sidebar_settings=__webpack_require__(4009),import_excel_sidebar_settings_default=__webpack_require__.n(import_excel_sidebar_settings);const import_excel_import_excel_component={bindings:{field:"<",actions:"<"},controller:class ImportExcelFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=import_excel_sidebar_settings_default()}))}},controllerAs:"$",templateUrl:import_excel_import_excel_default()};var leafletjs_map_routing=__webpack_require__(6853),leafletjs_map_routing_default=__webpack_require__.n(leafletjs_map_routing),leafletjs_map_routing_sidebar_settings=__webpack_require__(8595),leafletjs_map_routing_sidebar_settings_default=__webpack_require__.n(leafletjs_map_routing_sidebar_settings);const leafletjs_map_routing_compoment={bindings:{field:"<"},controller:class LeafletjsMapRoutingFieldController{constructor($scope,$timeout){this.$scope=$scope,this.$timeout=$timeout}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=leafletjs_map_routing_sidebar_settings_default(),void 0===this.field.Settings.ToolTipFromText&&(this.field.Settings.ToolTipFromText="آیا از انتخاب مبدا اطمینان دارید؟"),void 0===this.field.Settings.ToolTipToText&&(this.field.Settings.ToolTipToText="آیا از انتخاب مقصد اطمینان دارید؟"),void 0===this.field.Settings.ToolTipClearText&&(this.field.Settings.ToolTipClearText="آیا از حذف مسیر اطمینان دارید؟"),void 0===this.field.Settings.ToolTipOKText&&(this.field.Settings.ToolTipOKText="بله")}))}},controllerAs:"$",templateUrl:leafletjs_map_routing_default()};var chart=__webpack_require__(3665),chart_default=__webpack_require__.n(chart),chart_sidebar_settings=__webpack_require__(896),chart_sidebar_settings_default=__webpack_require__.n(chart_sidebar_settings),chart_edit_column=__webpack_require__(7824),chart_edit_column_default=__webpack_require__.n(chart_edit_column),edit_label=__webpack_require__(9279),edit_label_default=__webpack_require__.n(edit_label);const chart_component={bindings:{field:"<"},controller:class ChartFieldController{constructor($scope,$timeout,globalService){this.$scope=$scope,this.$timeout=$timeout,this.globalService=globalService,this.editColumnWidget=chart_edit_column_default(),this.editLabelWidget=edit_label_default()}$onInit(){this.$scope.$on("onBindFieldSettings_"+this.field.FieldName,((e,args)=>{this.field.CustomSettings=chart_sidebar_settings_default()}))}onEditFieldDataSourceClick(){this.$scope.$emit("onShowFieldDataSource",{field:this.field})}onAddColumnClick(){switch(this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget"),this.column={IsNew:!0},console.log({sss:this.field.Settings.Columns.length,vv:this.column.BorderColor,ss:this.column}),this.field.Settings.Columns.length){case 0:default:this.column.BorderColor="#36a2eb",this.column.BackgroundColor="#36a2eb";break;case 1:this.column.BorderColor="#ff6384",this.column.BackgroundColor="#ff6384";break;case 2:this.column.BorderColor="#4bc0c0",this.column.BackgroundColor="#4bc0c0";break;case 3:this.column.BorderColor="#ff9f40",this.column.BackgroundColor="#ff9f40";break;case 4:this.column.BorderColor="#9966ff",this.column.BackgroundColor="#9966ff";break;case 5:this.column.BorderColor="#ffcd56",this.column.BackgroundColor="#ffcd56";break;case 6:this.column.BorderColor="#c9cbcf",this.column.BackgroundColor="#c9cbcf"}}onAddLabelClick(){this.workingMode="edit-label",this.$scope.$emit("onShowRightWidget")}onSaveColumnClick(){this.field.Settings.Columns=this.field.Settings.Columns||[],this.column.IsNew?(delete this.column.IsNew,this.field.Settings.Columns.push(this.column)):this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.column,this.disposeWorkingMode()}onCancelColumnClick(){this.field.Settings.Columns[this.field.Settings.Columns.indexOf(this.columnBackup)]=this.columnBackup,this.disposeWorkingMode()}onEditColumnClick(column){this.columnBackup=column,this.column=_.clone(column),this.workingMode="edit-column",this.$scope.$emit("onShowRightWidget")}onDeleteColumnClick(column){confirm("Are you sure for delete this column!?")&&this.field.Settings.Columns.splice(this.field.Settings.Columns.indexOf(column),1)}onAddCustomLablesClick(){this.field.Settings.CustomLables=this.field.Settings.CustomLables||[],this.field.Settings.BindLable=this.field.Settings.BindLable||{},this.field.Settings.CustomLables.push({})}onSaveLableClick(){"BindToProperty"==this.field.Settings.LableType?this.field.Settings.BindLable=this.field.Settings.BindLable:(this.field.Settings.CustomLables=this.field.Settings.CustomLables||[],this.field.Settings.CustomLables=this.field.Settings.CustomLables),this.disposeWorkingMode()}onCancelLableClick(){this.field.Settings.CustomLables[this.field.Settings.CustomLables.indexOf(this.customLablesBackup)]=this.customLablesBackup,this.disposeWorkingMode()}disposeWorkingMode(){this.$scope.$emit("onHideRightWidget"),this.$timeout((()=>{delete this.workingMode}),200)}},controllerAs:"$",templateUrl:chart_default()},app=window.app;app.component("bServiceCustomQuery",custom_query_component),app.component("bServiceSubmitEntity",submit_entity_component),app.component("bServiceBindEntity",bind_entity_component),app.component("bServiceDataSource",data_source_component),app.component("bServiceSendSms",send_sms_component),app.component("bServiceSendEmail",send_email_component),app.component("bServiceImportExcel",import_excel_component),app.component("bLoginUser",login_user_component),app.component("bRegisterUser",register_user_component),app.component("bApproveUser",approve_user_component),app.component("bResetPassword",reset_password_component),app.component("bServiceRestful",restful_component),app.component("bActionRunService",run_service_run_service_component),app.component("bActionRunJavascript",programming_javascript_component),app.component("bActionSetVariable",form_set_variable_component),app.component("bActionCallAction",call_action_component),app.component("bActionUpdateFieldDataSource",update_field_data_source_component),app.component("bFieldGroup",group_group_studio_component),app.component("bFieldTextbox",textbox_component),app.component("bFieldTextarea",textarea_component),app.component("bFieldTextEditor",editor_component),app.component("bFieldContent",content_component),app.component("bFieldSwitchButton",switch_button_compoment),app.component("bFieldGrid",grid_component),app.component("bFieldMatrix",matrix_component),app.component("bFieldCustomList",custom_list_component),app.component("bFieldWizard",wizard_component.Z),app.component("bFieldTabs",tabs_component),app.component("bFieldButton",button_component),app.component("bFieldCheckboxList",checkbox_list_component),app.component("bFieldChosenDropdown",chosen_dropdown_component),app.component("bFieldChoisecCombobox",Choices_combobox_component),app.component("bFieldSelect2",select2_component),app.component("bFieldSelectize",selectize_component),app.component("bFieldNiceSelect",nice_select_component),app.component("bFieldTypeaheadAutocomplete",typeahead_component),app.component("bFieldSelectableList",selectable_list_component),app.component("bFieldDashboardMenu",dashboard_menu_component),app.component("bFieldDashboardLink",dashboard_link_component),app.component("bFieldUploadFile",upload_file_component),app.component("bFieldUploadImage",upload_image_component),app.component("bFieldProperty",property_component),app.component("bFieldMessageBox",message_box_component),app.component("bFieldDashboardBreadcrumb",dashboard_breadcrumb_component),app.component("bFieldLeafletjsMap",leafletjs_map_compoment),app.component("bFieldLeafletjsMapRouting",leafletjs_map_routing_compoment),app.component("bFieldSwiperSlider",slider_component),app.component("bFieldImportExcel",import_excel_import_excel_component),app.component("bFieldPersianDateTimePicker",persian_date_time_picker_component),app.component("bFieldChart",chart_component)})()})();
//# sourceMappingURL=basic.bundle.js.map